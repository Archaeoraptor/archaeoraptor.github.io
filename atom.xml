<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>止息的碎碎念</title>
  
  <subtitle>阴，气温20℃至32℃</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://zhangjk98.xyz/"/>
  <updated>2020-01-30T13:19:15.503Z</updated>
  <id>https://zhangjk98.xyz/</id>
  
  <author>
    <name>Zhang.jk</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>你好，Manjaro</title>
    <link href="https://zhangjk98.xyz/ff0e/"/>
    <id>https://zhangjk98.xyz/ff0e/</id>
    <published>2020-01-17T02:41:09.000Z</published>
    <updated>2020-01-30T13:19:15.503Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>本来我是想装个双系统的，但是想起教研室还有两个老主机，那就…</p><a id="more"></a><h2 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h2><p>选Manjaro是因为对华硕老主板的硬件和驱动支持比较好。</p><p>去官网下了最新版的 Manjaro18.1.5 KDE桌面版本，还是拿Rufus做好启动盘用UEFI装，这里直接擦除原来已毕业师兄的win10（erase disk），选 no Hibernate（我不太喜欢systemd，就没设休眠）</p><p>看到选项里有个选择LibreOffice还是Free Office的选项，这里我选了FreeOffice试用，体验过两个月再回来填坑写体会。</p><p>习惯性断网安装。没有遇到问题，直接装好了，超乎想象的顺利。唯一的小插曲是装完系统后U盘只剩4M空间，用win10默认的格式化找不回来了，看了<span class="exturl" data-url="aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8zNzc3MjgyNQ==" title="https://zhuanlan.zhihu.com/p/37772825">这里<i class="fa fa-external-link"></i></span><br />网上教程已经很多了，我也不打算再写一篇了，下面仅作个人记录(其实并不怎么需要教程，过时得太快，还不如直接看官方wiki，不想看直接照着提示直接装都没问题，比Ubuntu好装太多了)<br /><img data-src="/ff0e/neofetch-manjaro.webp" alt="manjaro-neofetch" /><br />内置python是3.8.1，我一时竟有些不习惯😂</p><h2 id="配置"><a class="markdownIt-Anchor" href="#配置"></a> 配置</h2><h3 id="换镜像源"><a class="markdownIt-Anchor" href="#换镜像源"></a> 换镜像源</h3><p>当然还是换成你电的，在<code>/​etc/​pacman.d/​mirrorlist</code>加上你电</p><h3 id="输入法"><a class="markdownIt-Anchor" href="#输入法"></a> 输入法</h3><p>KDE推荐fcitx</p><p>我用的<s>sunpinyin</s>libpinyin（一个比sunpinyin更新的输入法），googlepinyin也可以，sougoupinyin不推荐，对于它的流氓行为我实在无法放心（如果非要装，记得装fcitx qt4 或 qt5）</p><p>如果想要联网提示的功能可以装个cloudpinyin(要用archlinuxcn的源)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S fcitx-im fcitx-googlepinyin fcitx-libpinyin fcitx-cloudpinyin</span><br></pre></td></tr></table></figure><p>有个小问题，那个很多教程都写的/.xproflie, 官方wiki里新版是<br />~/.pam_environment里面加上那三行, fcitx官网上说是那个~./xprofile, 这里我放到.pam_enviroment里面了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">GTK_IM_MODULE&#x3D;fcitx</span><br><span class="line">QT_IM_MODULE&#x3D;fcitx</span><br><span class="line">XMODIFIERS&#x3D;@im&#x3D;fcitx</span><br></pre></td></tr></table></figure><p>然后点开右下角键盘的configure（配置）看不到输入法了，界面是空的，以为是系统语言非中文的问题，但是换了系统语言重启了以后还是不行。<br />运行了一下fcitx-diagnose, 报这个错误</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fcitx: BadWindow (invalid Window parameter)</span><br></pre></td></tr></table></figure><p>感觉是看不知道哪个教程的时候在~/.xinitrc里面乱配置的时候出问题了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> LC_ALL=zh_CN.UTF-8</span><br><span class="line"><span class="built_in">export</span> GTK_IM_MODULE=fcitx</span><br><span class="line"><span class="built_in">export</span> QT_IM_MODULE=fcitx</span><br><span class="line"><span class="built_in">export</span> XMODIFIERS=<span class="string">"@im=fcitx"</span></span><br></pre></td></tr></table></figure><p>搜了一下是我弱智了，看<span class="exturl" data-url="aHR0cHM6Ly9iYnMuYXJjaGxpbnV4Y24ub3JnL3ZpZXd0b3BpYy5waHA/aWQ9MTg2Mg==" title="https://bbs.archlinuxcn.org/viewtopic.php?id=1862">这里<i class="fa fa-external-link"></i></span>，照着教程乱搞的时候都没注意到。<br />这里把exec放到后面就行了，或者放到.xprofile里面</p><p>配置看这里<br /><span class="exturl" data-url="aHR0cHM6Ly9mY2l0eC1pbS5vcmcvd2lraS9Db25maWd1cmVfKE90aGVyKS96aC1oYW5z" title="https://fcitx-im.org/wiki/Configure_(Other)/zh-hans">https://fcitx-im.org/wiki/Configure_(Other)/zh-hans<i class="fa fa-external-link"></i></span></p><p>我看很多教程都是用的fcitx-configtool，这里推荐KDE桌面用kcm-fcitx进行设置，也可以直接编辑config文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S kcm-fcitx</span><br></pre></td></tr></table></figure><h3 id="软件包管理"><a class="markdownIt-Anchor" href="#软件包管理"></a> 软件包管理</h3><p>装包首选pacman，然后是AUR，然后是其他pip、npm、deb之类的包，然后是自己编译（对自己打包技术自信的编译狂魔请无视), 这样可以避免不少包冲突。<br />yaourt已经停止维护了<sup id="fnref:1"><a href="#fn:1" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="https://wiki.archlinux.org/index.php/AUR_helpers">[1]</span></a></sup>，2020年了很多教程都还是这个，请自行换成yay<sup id="fnref:2"><a href="#fn:2" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="https://github.com/Jguer/yay">[2]</span></a></sup>等</p><h4 id="vscode"><a class="markdownIt-Anchor" href="#vscode"></a> VSCode</h4><p>这里用vscode举个栗子</p><p>不像apt有官方包，VSCode在文档上说可以用这个<span class="exturl" data-url="aHR0cHM6Ly9jb2RlLnZpc3VhbHN0dWRpby5jb20vZG9jcy9zZXR1cC9saW51eCNfYXVyLXBhY2thZ2UtZm9yLWFyY2gtbGludXg=" title="https://code.visualstudio.com/docs/setup/linux#_aur-package-for-arch-linux">非官方包<i class="fa fa-external-link"></i></span></p><p>按照正常的AUR安装方式是这样的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S git</span><br><span class="line"><span class="built_in">cd</span> /Downloads</span><br><span class="line">git <span class="built_in">clone</span> https://AUR.archlinux.org/visual-studio-code-bin.git</span><br><span class="line"><span class="built_in">cd</span> visual-studio-code-bin/</span><br><span class="line">sudo pacman -U visual-studio-code-bin-*.pkg.tar.xz</span><br><span class="line"><span class="built_in">cd</span> ../ &amp;&amp; sudo rm -rfv visual-studio-code-bin/</span><br><span class="line">code .</span><br></pre></td></tr></table></figure><p>这里我们有<code>yay -S visual-studio-code-bin</code>可以代替上面那一串命令（pacman现在也有，直接pacman就好了）</p><p>另一种方法是直接从软件商店里点击安装，pamac或者octopi，其实也不算win10 巨硬store或者snap那种软件商店，大概就是一个pacman的GUI客户端吧</p><h3 id="网上冲浪"><a class="markdownIt-Anchor" href="#网上冲浪"></a> 网上冲浪</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S v2ray</span><br></pre></td></tr></table></figure><p>把config.json放到/etc/v2ray下面<br />然后配置开机自启和启动（这里用systemd）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> v2ray  <span class="comment">#开机启动</span></span><br><span class="line">systemctl start v2ray</span><br></pre></td></tr></table></figure><p>然后配合switchyomega或者<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL21lbGxvdy1pby9tZWxsb3c=" title="https://github.com/mellow-io/mellow">mellow<i class="fa fa-external-link"></i></span>或者<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3JvZmwwci9wcm94eWNoYWlucy1uZw==" title="https://github.com/rofl0r/proxychains-ng">proxychains-ng<i class="fa fa-external-link"></i></span></p><p>如果还是习惯客户端可以试试v2rayA<sup id="fnref:3"><a href="#fn:3" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="https://aur.archlinux.org/packages/v2raya">[3]</span></a></sup></p><h3 id="其他"><a class="markdownIt-Anchor" href="#其他"></a> 其他</h3><p>暂时没什么要说了，过一个月再来说体验吧，美化什么的也不想搞了，老主机带不动，我也老了，哎呀，对花里胡哨的欣赏不来了，一律默认配置</p><p>想起什么再说吧，ArchWiki真棒，看Wiki吧</p><h4 id="一些设置的小问题"><a class="markdownIt-Anchor" href="#一些设置的小问题"></a> 一些设置的小问题</h4><p>改完输入法快捷键之后输入法调不出来了，发现Yakuake也调不出来了，感觉快捷键设置冲突，改快捷键设置就好了。</p><p>最后，希望不要滚炸</p><h2 id="注"><a class="markdownIt-Anchor" href="#注"></a> 注</h2><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">https://wiki.archlinux.org/index.php/AUR_helpers<a href="#fnref:1" rev="footnote"> ↩</a></span></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">2.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">https://github.com/Jguer/yay<a href="#fnref:2" rev="footnote"> ↩</a></span></li><li id="fn:3"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">3.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">https://aur.archlinux.org/packages/v2raya<a href="#fnref:3" rev="footnote"> ↩</a></span></li></ol></div></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本来我是想装个双系统的，但是想起教研室还有两个老主机，那就…&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="manjaro" scheme="https://zhangjk98.xyz/tags/manjaro/"/>
    
  </entry>
  
  <entry>
    <title>写在被消灭的路上</title>
    <link href="https://zhangjk98.xyz/aa1c/"/>
    <id>https://zhangjk98.xyz/aa1c/</id>
    <published>2019-12-26T11:40:05.000Z</published>
    <updated>2020-01-30T13:19:15.439Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>庚子年，格外的长</p><a id="more"></a><p>谶言里庚子年破事可不少，现在全世界都看起来不太平，暗流涌动。就不睁眼说瞎话搞些新年大吉之类的玩意了。</p><h2 id="庚子鼠年计划"><a class="markdownIt-Anchor" href="#庚子鼠年计划"></a> 庚子鼠年计划</h2><p>还记得当年的梦想吗，不仅天涯变了，新浪搜狐变了，谷歌也免不了（也许没变，当年才是装的）。看了一圈，真诚可爱的反而就是花姐王垠之流。</p><p><img data-src="/aa1c/google.jpg" alt="当年" /></p><p>唯见日寒月暖，来煎人寿</p><blockquote><p>十年的经历教会了我很多，但不免也有许多被浪费的时间和精力，值得我反思和总结。总的看来，我并没有比其他人做得更差。很多 IT 人终其一生也没有学会什么新东西，很多人为了保住自己的饭碗，写出面条一样扭曲，别人不敢碰的代码。转岗做管理也是各种瞎指挥，看其他人眼色行事，一切为了“站对了队”，为了混到更高的位置。</p></blockquote><p>我现在在勃八本的劝退专业搬着没什么用的砖，搞着骗钱的垃圾项目划水摸鱼制造垃圾写bug，惭愧</p><p>本来我还是想做一点事情的，现在发现不如划水去搞点有意思的</p><div class="note success">            <h3 id="看看范畴论-矩阵代数"><a class="markdownIt-Anchor" href="#看看范畴论-矩阵代数"></a> 看看范畴论、矩阵代数</h3><p>大一大二那会不听课，埋头啃高代数分数理方程看朗道，试图啃过近世代数，没啃动<br />现在一年没怎么推公式，发现已经不如之前了，我怕不是要老了。<br />有些东西，三四十岁再学就学不动了</p>          </div><div class="note success">            <h3 id="看看csapp等书"><a class="markdownIt-Anchor" href="#看看csapp等书"></a> 看看CSAPP等书</h3><p>补一补你电只讲名词概念浪费生命的微嵌课欠下的债</p>          </div><div class="note success">            <h3 id="学一点数据库和javascript"><a class="markdownIt-Anchor" href="#学一点数据库和javascript"></a> 学一点数据库和javascript</h3><p>之前打算</p>          </div><div class="note success">            <h3 id="把立下的flag和挖的坑填了"><a class="markdownIt-Anchor" href="#把立下的flag和挖的坑填了"></a> 把立下的Flag和挖的坑填了</h3><p>填不了就扔到2021年，反正那个时候我就要被消灭了，不用填了</p>          </div><div class="note danger">            <h3 id="扑杀入侵物种"><a class="markdownIt-Anchor" href="#扑杀入侵物种"></a> 扑杀入侵物种</h3><p>包括不限于流浪猫、流浪狗、红耳龟、福寿螺、克氏原螯虾</p>          </div><h2 id="近况"><a class="markdownIt-Anchor" href="#近况"></a> 近况</h2><p>最近闲了一点，把博客的评论换成了utteranc, 把mathjax换成了katex<br />试了试Hugo，速度确实快，也没有nodejs这么多依赖问题，但是颜值平均比Hexo低两层楼，Hexo那些插件也没有好的替代和移植。<br />也没有在Hugo里面找到一个Next这样令我喜欢并且一直维护的主题，只看到一个hugo-book的主题，替代gitbook做文档应该不错，gitbook的生成速度是真的慢。。。<br />（不过这个快是生成速度啊，整个网站的加载速度跟这个也没有太大关系，也就在写很长很多的内容的时候有，静态博客还是得看效果啊，生成速度再快有什么用呢）<br />ps：终于知道为什么有的人用Jekyll、Hexo、gitbook非要整个CI了，有的内容多了生成速度确实慢啊，动不动几十分钟一小时没了。Hugo的速度让这些都没了必要，我也没看到多少这么搞的（Hugo用户运维和后端开发的比例可比Hexo那些高多了）。（Hugo性能也不错，直接用hugo的server跑在服务器都行，不用Nginx之类的完全没问题。</p><p>元旦在沙河边转着玩，又看到沙河有一群大妈拿着七八个桶直接倾倒鱼和小龙虾（对，就是那个<s>著名</s>入侵物种克氏原螯虾）。这几天网上冲浪又看到日人民报等辣鸡营销号消费过世白鲟，还纷纷把图配成匙吻鲟，心里不是滋味。长江流域基本也凉的差不多了，当年葛洲坝一建，白鲟中华鲟达氏鲟就凉了一半，挖沙和万安水库和富春江水电站也把最后的鲥鱼搞没了。鄱阳湖要是再乱搞，江豚基本也要凉透了（虽然不乱搞也要凉透了，时间问题，无力回天）。那些数不清名字的小鱼就更惨了，好多两个图片和影像都没留下</p><p>哦，对了，前几年长江养殖逃逸了大量杂交鲟，中华鲟和达氏鲟野生种群基本就废了</p><p>寡鳞鱊重现江湖的奇迹可能再也不会有了。</p><blockquote><p>千斤魶子万斤象，黄排大了不像样</p></blockquote><p><img data-src="baixun.jpg" alt="白鲟" /></p><p>就现在这样子，不仅斑鳖要上路，鼋八成也保不住；不仅白鱀豚没了，江豚（窄脊江豚长江江豚亚种<em>N. a. asiaeorientalis</em>）也迟早凉。<br />斑鳖在某动物园的惨状大家应该都知道了，鼋也好不到哪去（国内的龟鳖都好不到哪去）</p><blockquote><p>鼋，到现在，都没有一个像样的保护区。也就是说，救助团体一直是民间（或挂靠）开展的。某保护区我就不点名了，有文件，一直不施工，民间捐的俩成体鼋一直养在水泥池子里……</p></blockquote><p>最近被骂的<span class="exturl" data-url="aHR0cHM6Ly93ZWliby5jb20vNTAyMTAzNjc4Ni9JbkIxUmZrQkU=" title="https://weibo.com/5021036786/InB1RfkBE">扎龙保护区<i class="fa fa-external-link"></i></span>也是打着保护的旗号干缺德事呢，对了，前几年的鄱阳湖水利枢纽工程也是打着环保的旗号。好多湿地绿化和荒漠绿化都是把原来好好的灌木草地沼泽全种成整齐划一的树，哇，这破坏生态的绿色荒漠算政绩呢<br />这里全文转载流年消年少同学的一篇旧文：从鄱阳湖水利枢纽工程看看党的千秋伟业</p><div class="note info">            <blockquote><p>逆天改命，非以倾国之力而不能为</p></blockquote><p>​​​    2016年底，微博上因为江西省水利厅一篇《 鄱阳湖水利枢纽环评  请你提建议》的公告引发了不小的风波。无疑这个举动将会对鄱阳湖生态环境造成巨大的负面影响，濒危的长江江豚、白鹤也将为此陷入灭绝的境地，那为什他们会出此下策呢？前几天与老师朋友讨论这个事情，个中缘由可能真的不简单。</p><p>下面都是胡说八道，大家请勿轻信<br />我们先看看好端端的鄱阳湖​为什么会见底？没错，因为我党的两项“千秋伟业”。 目前，中国两大世纪水利工程——三峡工程早已完成、南水北调工程东线刚刚正通水，中线已经贯通，西线还未开工中。对于如此重大的工程，一直有颇多争议，如修建三峡时，反对意见也非常强烈。三峡建成后，是否会引发干旱、地震等自然灾害都成为了人们热议的焦点。而奇怪的是，南水北调工程几乎没有专家反对，顺利开工建成。对南水北调的质疑也远远不如三峡工程。这是很令人奇怪的地方 多年前，一位旅居德国的国土专家王维洛为就揭底了南水北调和三峡，个中缘由触目惊心。<br />前几年长江中下游缺水缺得很厉害。从浙江、安徽、江西、湖南和湖北都缺水，特别是湖北省缺水缺的厉害。国内报导是说，湖北的水库都已底朝天，没水了，洪水浪打浪也没浪了。洪湖水也就剩几十厘米深。根本原因是因为湖北省担任了中国两个最大的工程—三峡和南水北调工程。其实这两个工程是一个姐妹工程，密不分，南水北调中线方案的源头工程，就是三峡的水源工程。三峡工程问题突出的原因，并非像国内宣传的那样是什么三峡派海外黑手搞的，其实是国内地方对中央矛盾所引起的。因为干旱现象在湖北和江西已非常突出了。<br />三峡工程干旱问题的治理，首先是江西省在13年提出来的，是省水利厅一些技术人员要搞鄱阳湖拦水大坝工程。为什么要建这个工程？是因为三峡大坝影响了鄱湖的蓄水，这么引出来的。<br />2013年的干旱，是当时专家预计的2030年要出现的，那么现在2011年就出现了。而且缺的很厉害，也不像人们说的南方水多，长江流域也将进入枯水，中下游缺缺的很厉害，尤其是湖北省。当时的湖北所有水库几乎是底朝天了。就是南水北调中线工程源头的水库—丹江河水库水位已降到死水位，没有水可以向外排放了。以当时湖北省要求三峡水库赶紧放水。如果当时三峡工程放水的话，就可以看到一个相当可怕的过程，就是说三峡把每天放3000至5000多立方米的水，但是水到湖北地区马上就被抽上去。<br />鄱阳湖快干枯江西省受不了，为什么？因为中国的抽水工程太厉害了，水泵太厉害了，把长江的水都抽到支流里去了。所以主流水位越往下游水量越少。所以人为自然干涉情况已到了很严重的地步。这种干旱情况未来还会重复出现，而且未来在用水问题上的矛盾还会更尖锐。<br />南水北调的是中线方案，是指从三峡把水调过去，而不是在丹江口把水调过去。要在三峡把洪水卡住，把三峡的水调到北方去。<br />长江在历史上流量最小时就有3000多立方/每秒，而黄河平均也就几百立方/每秒，两条河相差很多。长江平均年流量每秒是一万多立方。洪水期流量更大，千年遇的洪水流量大概是九万多立方/每秒，万年一遇的洪水流量是十一万多立方/每秒。如果回到长江的原始状态，其出海口是个湖，湖面宽是20多公里。唐诗中：“帆远影碧空尽，唯见长江天际流”，你会看到那是一条很宽广的河。所以在历史上说长江洪灾很少，而说黄河洪灾的记录就比较多。因为长江下游的蓄水能力很大所以洪水灾害比较小。所以现在长江水位少，而抽水就形成了湖北抽水，湖南就没有多少水可抽，那江西就更受不了，因为水位更低，所以鄱阳湖就像长江的水保住了，因此江西省闹得就特别厉害。<br />南水北调和三峡里面太多荒唐的东西了，建国以来中国的水利就是在玩水。它根本就不尊重自然规律，想把水折腾到哪儿就折腾到那儿。其实如果中国真的要调水就应该使用地下暗管，就像输油管道一样，埋在地下，又能省地、又没有风险，还能避免人家抢水，能保证进京的水。可是领导人必须让他的功绩让老百姓看得见还得让天上的卫星能够拍得到，比方说隋炀帝修的大运河还留在那儿，南水北调的工程是XXX搞的，三峡工程是XXX的，留在那儿的。<br />除了领导人，知识分子也是很聪明的，他们是有学习能力的。看看三峡工程中在最后报告上签字的那些专家们，最后都成了工程院和科学院的院士，成了对国家有献的特殊专家和院士，得了这个奖那个奖。你再看那看看那九位没有签名的专家，他们的水平绝对在签了字的人之上，但是没有一个人成为院士。中国的知识份子名利都看得很重，这也不是他们的错。这些还想进入科学最高殿堂的知识份子，他们在三峡工程的学习过程中，知道还是不说的好，说了也没有用。 因为他们的想是步入殿堂，如果他们说了的话，现在很可能连一个科研的题目、科研经费都拿不到。就像黄万里一样，给三峡工程写了那么多的论文，他有一分钱的科研经吗？他从朝廷拿了一分钱的科研经费吗？没有。<br />所以说，三峡工程在中国的学术界造成了一个很坏的影响，开了一个很坏的先例，后边的人知道了，尽管不是像当初那样被打成右派，可他把你打成另类，没有科经费，那你怎么办！你想当院士，没门。所以他们就不说了。我们一直在玩水的专家学者们，竟忘了一个最浅显的道理：水是从高往低流的，真乃一大黑色幽默。 当一件事，光有赞成而没有批评意见时，这件事错误的可能性很大。当三峡工程和南水北调工程只剩下一位黄万里先生，像唐吉珂德一样批评时，就注定了。<br />所以，鄱阳湖的现状就是这样， 不建大坝，江西无水可用；建了大坝，毁了白鹤和江豚栖息地。人与自然，在我朝一直就不是可以和谐发展的。<br />大家都知道这两项伟业贻害万年，谁又敢反对呢？ 民众反对–有个屁用，实在不行给你扣个反贼帽子你试试。地方官员反对–除非你想断送大好前途，呵呵。专学者反对–呵呵，当政者反对–否定前辈路线，自扇耳光。所以，这是一个很现实，也很魔幻的中国特色的伟业。<br />~最后，祝伟大祖国繁荣昌盛，千秋万代！</p>          </div><p>十年之前，我还在上两江，那时候两江很热闹，现在两江也还开着（这里感谢饿老大，坚守到现在不容易）</p><p>在成都的河里湖里随便找找，能看到什么呢，满地食蚊红耳龟福寿螺罗非小龙虾，再找找才能看到点子陵和吸鳅爬鳅之类的，唉</p><blockquote class="blockquote-center"><p>Repair what you can — but when you must fail,fail noisily and as soon as possible.</p></blockquote><p>不知巴拉水电站能否被拦下马，留给川陕哲罗鲑的时间不多了</p><p>十年前，小南海水电站，下马了</p><p><span class="exturl" data-url="aHR0cDovL2NxaDJvLmNvbS9mb3J1bS5waHA/bW9kPXZpZXd0aHJlYWQmYW1wO3RpZD0zMzUxMQ==" title="http://cqh2o.com/forum.php?mod=viewthread&amp;tid=33511">坚决反对修建小南海水电站<i class="fa fa-external-link"></i></span></p><p>也罢</p><p><img data-src="/aa1c/old.jpg" alt="道子搜山" /></p><blockquote class="blockquote-center"><p>君不见，高堂明镜悲白发，朝如青丝暮成雪</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;庚子年，格外的长&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>也谈心率变异性</title>
    <link href="https://zhangjk98.xyz/2873/"/>
    <id>https://zhangjk98.xyz/2873/</id>
    <published>2019-12-26T04:25:12.000Z</published>
    <updated>2020-01-30T13:19:15.466Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>等待填坑</p><a id="more"></a><h2 id="采集"><a class="markdownIt-Anchor" href="#采集"></a> 采集</h2><p>HRV测定的是NN间期(在正常的窦性心律时就是RR间期)的波动，主要与自主神经调控机制有关。标准的HRV根据正常窦性搏动的NN间期得出的（正常对正常间期，normal-to-normal,<em>NN</em> intervals，即由窦房结除极所致相邻QRS波群之间的所有间期）的变化来表示心率的变异性。</p><img data-src="/2873/201804091523323502.png" alt="提取心率变异性" style="zoom: 67%;" /><h3 id="心电ecg"><a class="markdownIt-Anchor" href="#心电ecg"></a> 心电（ECG）</h3><p>可以从心电图中直接提取R波尖峰并将RR间期的值用于心率变异性分析</p><h3 id="心冲击图bcg"><a class="markdownIt-Anchor" href="#心冲击图bcg"></a> 心冲击图（BCG）</h3><p>心冲击图去除呼吸和活动的干扰后提取JJ间期时间计算心率变异</p><h3 id="光电容积图ppg"><a class="markdownIt-Anchor" href="#光电容积图ppg"></a> 光电容积图（PPG）</h3><p>目前市面上主要的脉搏波测量方法是光电容积脉搏波描记法（photoplethysmography），用光电传感器检测光经过人体的反射和衰减转换成电信号后得到，包括Apple Waltch等手环产品，用光电容积法检测血氧、心率、心率变异性等生理参数。</p><p><img data-src="/2873/figure-1-optical-heart-rate-sensing.jpg" alt="光电容积法原理" /></p><p>PPG法采集到的脉搏波经过去噪和整流等处理后提取PP间期可以计算心率变异。</p><h4 id="远程光电容积扫描"><a class="markdownIt-Anchor" href="#远程光电容积扫描"></a> 远程光电容积扫描</h4><p>（rPPG，remote PPG）是一种新的方法，只要高清摄像头检测光线变化，真正的无创非接触。</p><p>但是这种方法成本高，易受到运动和光线变化的干扰。目前这个领域比较热门，进展也很快。一些补偿和增强鲁棒性的方法包括全局和局部运动跟踪和独立成分分析等。</p><p>现在此类研究缺乏可靠的公开数据集支持，现有研究大多采用MAHNOB-HCI和DEAP等用于活体识别和情感识别的公开数据集和私有数据集。</p><p><img data-src="/2873/figure-3-overview-hr-and-hrv.jpg" alt="rPPG-HRV" /></p><h2 id="产生机理和影响因素"><a class="markdownIt-Anchor" href="#产生机理和影响因素"></a> 产生机理和影响因素</h2><p><img data-src="/2873/%E7%A4%BA%E6%84%8F%E5%9B%BE.png" alt="示意图" /></p><blockquote><p>HRV反映的是自主神经和非自主神经系统所有反馈回路极其复杂的非线性交互作用。自主神经系统是窦性节律条件下心率的主要调节机制。</p></blockquote><p>忽略微小的影响，HRV的高频部分主要受迷走神经的调节，低频部分受到迷走和交感神经的双重作用。</p><p><img data-src="/2873/nero2.jpg" alt="" /></p><blockquote><p>交感神经增强自律性，而副交感神经抑制自律性。交感神经通过增加起搏点去极化程度产生变时性作用，而对心脏起搏点细胞的迷走刺激会引起超极化而降低去极化程度。自主神经的这两个分支均影响与心脏起搏细胞去极化相关的离子通道的活动。</p></blockquote><p>被测者的体位也会显著影响HRV，多数人处于仰卧位时，副交感神经活动明显增强。</p><p>在突然站立或倾斜时，压力反射活动也会引起心率的同步波动。</p><p>在24小时HRV中，白天交感神经活动相对增强，心率较快，而夜间迷走神经活动增强，心率较慢。正常睡眠时，生理活动也随每个睡眠周期(约90分钟)而呈现明显节律。</p><p>精神情绪的波动也会影响HRV，和迷走神经和交感神经系统的兴奋性有关。</p><img data-src="/2873/image-20191225214555467.png" alt="image-20191225214555467" style="zoom:50%;" /><p>此外，非自主神经因素(如神经内分泌功能)也会影响HRV。</p><p>心率变异性也和年龄、性别等因素有关。</p><h2 id="主要指标和数据分析"><a class="markdownIt-Anchor" href="#主要指标和数据分析"></a> 主要指标和数据分析</h2><h3 id="时域特征"><a class="markdownIt-Anchor" href="#时域特征"></a> 时域特征</h3><p>医学上通常要求5分钟以上的的HRV做短时分析，但是有研究表明30s内的HF和LF和5分钟的没有太大区别，应用是可以进一步缩短检测时间。</p><ul><li><p>SDNN(ms)：NN间期(正常RR间期)的标准差(5分钟)</p></li><li><p>SDANN(ms)：NN间期(正常RR间期)的标准差（24小时）</p></li><li><p>pNN50：相邻NN间期相差&gt;50ms的数量占总心搏数的百<br />分比</p></li><li><p>rMSSD(ms)：相邻NN间期差值的均方根</p></li></ul><p>rMSSD反映每搏NN间期变化的平均绝对值，对不规律心搏和/或心搏波形标记错误的敏感性也很高。</p><p>24小时记录得到的SDANN值低下表明缺乏昼夜节律。</p><h3 id="频域特征"><a class="markdownIt-Anchor" href="#频域特征"></a> 频域特征</h3><ul><li><p>总功率（TP）：频段≤0. 4Hz。</p></li><li><p>超低频功率（ULF）：频段≤ 0. 003Hz。</p></li><li><p>极低频功率（VLF）：频段 0. 003~0. 04Hz。</p></li><li><p>低频功率（LF）：频段 0. 04~0. 15Hz。</p></li><li><p>高频功率（HF）：频段 0. 15~0. 4Hz。</p></li><li><p>LF/HF: 低频功率和高频功率的比值</p></li></ul><p>LF反映副交感传出神经(迷走神经)和交感传出神经系统活性的综合调节</p><p>HF反映副交感传出神经(迷走神经)活动的调节</p><h3 id="非线性分析"><a class="markdownIt-Anchor" href="#非线性分析"></a> 非线性分析</h3><h4 id="动态心电图holter-monitor"><a class="markdownIt-Anchor" href="#动态心电图holter-monitor"></a> 动态心电图（Holter monitor）</h4><p>持续记录24小时或更久（几个月或一年以上）的长时间心电图数据，主要用来检测心律失常或传导异常和晕厥或晕厥前兆。</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mover accent="true"><mi>b</mi><mo>˙</mo></mover><mi>c</mi></mrow><annotation encoding="application/x-tex">a\dot{b}c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9313em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9313em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">b</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.13889em;">˙</span></span></span></span></span></span><span class="mord mathdefault">c</span></span></span></span></p><h5 id="洛伦兹散点图"><a class="markdownIt-Anchor" href="#洛伦兹散点图"></a> 洛伦兹散点图</h5><img data-src="/2873/201804091524569747.png" alt="img" style="zoom:80%;" /><p>把前1个心动周期长度（ms）定为横坐标、后1个心动周期长度（ms）定为纵坐标，即可在直角坐标系中确定一点。这样一个点就由3个QRS波（R波）、2个RR间期决定。第1个RR间期R1R2和第2个RR间期R2R3为第1个点，第2个RR间期R2R3和第3个RR间期R3R4为第2个点，依次类推，从R1 -&gt; Rn作图就可得到 n-2 个点，绘制心率散点图（洛伦兹散点图，Lorenz Plot），判断窦性心率、室上性和室性心率失常。正常窦性心律呈彗星状，心衰、房颤等症状会出现不同的散点图。窦性心律沿45°线分布，呈彗星状</p><img data-src="/2873/image-20191224202624859.png" alt="室性早搏" style="zoom: 67%;" /><img data-src="/2873/image-20191224202756257.png" alt="房性早搏" style="zoom: 67%;" /><p>散点图可用于：</p><p>评价心率波动范围（散点图的位置分布）</p><p>评价自主神经调节（长轴）</p><p>评价心率变异（短轴）</p><p>诊断心律失常（散点图的形态）</p><h5 id="差值散点图"><a class="markdownIt-Anchor" href="#差值散点图"></a> 差值散点图</h5><p>首先对序列 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mi>i</mi><msub><mi>R</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">RiR_{i+1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault">i</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span> 做一阶差分, 得到序列 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>d</mi><mi>j</mi></msub><mo separator="true">,</mo><mi>j</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mo>…</mo><mi>N</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">d_j ,j=1,2,\dots N-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 然后以 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msub><mi>d</mi><mi>j</mi></msub><mo separator="true">,</mo><msub><mi>d</mi><mrow><mi>j</mi><mo>+</mo><mn>1</mn></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(d_j, d_{j+1})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 为坐标绘制散点图（Poincaré散点图）。差值散点图反映了RR间期差值的离散度 ,对连续RR间期的变化十分敏感。</p><p>首先对序列<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>R</mi><mi>i</mi></msub><msub><mi>R</mi><mrow><mi>i</mi><mo>×</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">R_iR_{i\times1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">×</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span>做一阶差分, 得到序列 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>d</mi><mi>j</mi></msub><mo separator="true">,</mo><mi>j</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mo>…</mo><mi>N</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">d_j,j=1,2,\dots N-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 然后以 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msub><mi>d</mi><mi>j</mi></msub><mo separator="true">,</mo><msub><mi>d</mi><mrow><mi>j</mi><mo>+</mo><mn>1</mn></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(d_j, d_{j+1})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 为坐标绘制散点图（Poincaré散点图）。差值散点图反映了RR间期差值的离散度 ,对连续RR间期的变化十分敏感。</p><p><img data-src="/2873/image-20191225111057030.png" alt="健康人和CHF患者的散点图" /></p><h5 id="三维散点图"><a class="markdownIt-Anchor" href="#三维散点图"></a> 三维散点图</h5><p>三维散点图的一些意义还不明确，医院里实际用的也很少<br /><img data-src="/2873/3D-scatter-plot.png" alt="心率变异性三维散点图" /></p><h5 id="心率震荡hrt"><a class="markdownIt-Anchor" href="#心率震荡hrt"></a> 心率震荡（HRT）</h5><p>心率震荡（heart rate turbulence）是指发生室性早搏后，窦性心律出现短暂的加速和减速的过程。检测HRT异常有助于预测自主神经功能障碍以及心血管事件的风险增加。</p><p>分析HRT通常需要24小时HRV动态心电图，主要有震荡初始(turbulence onset, TO)和震荡斜率(turbulence slope, TS)两个指标。</p><h2 id="临床价值和应用"><a class="markdownIt-Anchor" href="#临床价值和应用"></a> 临床价值和应用</h2><h3 id="心肌梗死死亡率预测"><a class="markdownIt-Anchor" href="#心肌梗死死亡率预测"></a> 心肌梗死死亡率预测</h3><p>心梗后早期(14日内)，若检测到患者的HRV指标降低，则心梗后3年内的死亡风险增至3-4倍。</p><h3 id="心力衰竭"><a class="markdownIt-Anchor" href="#心力衰竭"></a> 心力衰竭</h3><p>已知就预后而言，HRV降低是总体死亡、心力衰竭死亡、心脏性猝死、室性心律失常和心脏移植的<br />独立预测指标</p><h3 id="评估自主神经病变"><a class="markdownIt-Anchor" href="#评估自主神经病变"></a> 评估自主神经病变</h3><p>HRV明显降低或缺失可以作为辅助指标。</p><h3 id="冠心病"><a class="markdownIt-Anchor" href="#冠心病"></a> 冠心病</h3><p>冠心病患者的HRV显著降低,且与冠状动脉病变支数及狭窄程度呈负相关,但与冠状动脉病变部位无关。</p><h3 id="检测精神压力"><a class="markdownIt-Anchor" href="#检测精神压力"></a> 检测精神压力</h3><p>短时HRV变化可用于辅助检测精神压力</p><p>迷走神经的冲动传导频率受呼吸频率和深度的调节而呈现节律性波动，呼吸性窦性心律不齐(respiratory sinus arrhythmia, RSA)。在有节奏的呼吸或冥想时，RSA可被放大。</p><h3 id="评估体育表现"><a class="markdownIt-Anchor" href="#评估体育表现"></a> 评估体育表现</h3><p>可以作为推测无氧阈的较为精确的指标之一</p><blockquote><p>注意<br />在运动评估中一般只有要求无伤等才会首先考虑HRV，一般是用血清肌酸激酶(CK)、血清睾酮(T)、血红蛋白、乳酸等</p></blockquote><h3 id="监测训练负荷及诊断运动性疲劳"><a class="markdownIt-Anchor" href="#监测训练负荷及诊断运动性疲劳"></a> 监测训练负荷及诊断运动性疲劳</h3><p>交感一副交感神经张力的平衡会随着运动强度的改变而波</p><h3 id="运动康复医学领域"><a class="markdownIt-Anchor" href="#运动康复医学领域"></a> 运动康复医学领域</h3><p>用于自主神经功能改善的评估</p><h3 id="睡眠分期"><a class="markdownIt-Anchor" href="#睡眠分期"></a> 睡眠分期</h3><p>略</p><h2 id="其他"><a class="markdownIt-Anchor" href="#其他"></a> 其他</h2><h3 id="呼吸和心率变异性"><a class="markdownIt-Anchor" href="#呼吸和心率变异性"></a> 呼吸和心率变异性</h3><h4 id="bcg信号中的呼吸信息"><a class="markdownIt-Anchor" href="#bcg信号中的呼吸信息"></a> BCG信号中的呼吸信息</h4><p>在采集到的BCG信号中，会包含呼吸信息，提取心率变异性通常要去除呼吸的干扰。</p><p>但是在一些利用HRV进一步分析情绪、压力、睡眠分期的时候，可以考虑保留部分呼吸特征并将呼吸特征纳入到检测和分类中，有时可以提高检测的准确率。</p><p>在心率变异性分析中纳入呼吸频率信息以进行压力评估</p><h4 id="呼吸变异性"><a class="markdownIt-Anchor" href="#呼吸变异性"></a> 呼吸变异性</h4><p>呼吸频率变异性(Respiratory Rate Variability，RRV, 有的地方也叫Breath Rate Variability），和心率变异性一样反映了一些生理特征，但是这种非电信号采集难，噪声大，不规律，包含的信息也比心电和脉搏波等信号少。除了</p><p>目前对于RRV的研究比较少，也很少有人用这个特征做睡眠分期检测、疲劳压力检测或睡眠呼吸暂停的检测。一些使用雷达等手段检测疲劳或者睡眠的研究将这项指标作为判断依据。雷达和监控视频等可以在较近的距离探测人体呼吸活动和心率，但是这样采集分离出的心动信息用作睡眠和疲劳监测不如直接采集呼吸和运动的信息进行分析。对于体重指数（body mass index ）过高的的超重人群、较复杂的干扰和活动等情景，使用雷达等方式检测压力或疲劳时HRV准确率大幅降低，从心动信息检测不如直接从呼吸信息检测。在这些场景下会使用呼吸和体动信息来作为指标。</p><h2 id="数据和软件"><a class="markdownIt-Anchor" href="#数据和软件"></a> 数据和软件</h2><ol><li><span class="exturl" data-url="aHR0cHM6Ly93d3cua3ViaW9zLmNvbS9ocnYtc3RhbmRhcmQv" title="https://www.kubios.com/hrv-standard/">https://www.kubios.com/hrv-standard/<i class="fa fa-external-link"></i></span> 免费的HRV分析软件</li><li><span class="exturl" data-url="aHR0cHM6Ly93d3cucGh5c2lvbmV0Lm9yZy8jbGF0ZXN0" title="https://www.physionet.org/#latest">https://www.physionet.org/#latest<i class="fa fa-external-link"></i></span> 心电图数据</li><li><span class="exturl" data-url="aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1EX0tZdjdwWEF2UQ==" title="https://www.youtube.com/watch?v=D_KYv7pXAvQ">https://www.youtube.com/watch?v=D_KYv7pXAvQ<i class="fa fa-external-link"></i></span> rPPG检测心率</li><li><span class="exturl" data-url="aHR0cHM6Ly9weXBpLm9yZy9wcm9qZWN0L2JvYi5ycHBnLmJhc2Uv" title="https://pypi.org/project/bob.rppg.base/">https://pypi.org/project/bob.rppg.base/<i class="fa fa-external-link"></i></span> rPPG的开源库，数据集MAHNOB-HCI和DEAP</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;等待填坑&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="HRV" scheme="https://zhangjk98.xyz/tags/HRV/"/>
    
      <category term="BCG" scheme="https://zhangjk98.xyz/tags/BCG/"/>
    
  </entry>
  
  <entry>
    <title>试图抢救吃灰的树莓派</title>
    <link href="https://zhangjk98.xyz/7042/"/>
    <id>https://zhangjk98.xyz/7042/</id>
    <published>2019-12-07T11:52:23.000Z</published>
    <updated>2020-01-30T13:19:15.508Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mn>1</mn><mn>3</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{1}{3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>自从来到沙河102网吧，都是在工作站/服务器/台式机上折腾，树莓派一直仍在清水河宿舍吃灰。今天回了趟清水河，把树莓派拿回来，试试能不能用，打算做备用测试机了。</p><a id="more"></a><h2 id="装系统"><a class="markdownIt-Anchor" href="#装系统"></a> 装系统</h2><p>从官网下载<sup id="fnref:1"><a href="#fn:1" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="http://downloads.raspberrypi.org/">[1]</span></a></sup>, 我下的Raspbian Buster（SD卡就只有16G，不打算搞那些recommend software了），解压之后已经是3.56G了</p><p>然后用Rufus烧进SD卡（很多教程全是推荐Win32Diskimager，那个并没有Rufus好用），只选第一行的目标设备和第二行引导镜像，其他默认（卡里之前有东西的话还是用SD Formatter先刷一遍）</p><p>然后将SD卡查到卡槽里，再把显示器接上（我工位上的ROC显示器有HDMI接口和电源, 终于不用无显示器安装拿个笔记本上来就SSH折腾了）</p><p>不行，搜了一下看到config.txt文件里有</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># uncomment to force a specific HDMI mode (this will force VGA)</span><br><span class="line">#hdmi_group&#x3D;1</span><br><span class="line">#hdmi_mode&#x3D;1</span><br></pre></td></tr></table></figure><p>要把模式改一下啊</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hdmi_group&#x3D;2</span><br><span class="line">hdmi_mode&#x3D;58</span><br></pre></td></tr></table></figure><p>这样感觉还是不方便，还要占掉我一个大屏。改回了SSH连接的方式</p><p>在boot目录新建SSH文件夹，然后新建一个wpa_supplicant.conf的文件配置WIFI</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">country=CN</span><br><span class="line">ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev</span><br><span class="line">update_config=1</span><br><span class="line"></span><br><span class="line">network=&#123;</span><br><span class="line">    ssid="你的WIFI名"</span><br><span class="line">    psk="你的密码"</span><br><span class="line">    key_mgmt=WPA-PSK</span><br><span class="line">    priority=1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后路由器找到ip，SSH连就行了，默认账号pi password：raspberry</p><p>发现这个树莓派真的鸡肋啊，扔着吃灰又可惜，不折腾硬件和IO不在乎功耗又不如有1080的工作站和20核CPU的服务器好（而且这俩还有公网IP和端口）</p><p>算了，每次折腾完了就后悔。<br />本逃兵不打算折腾硬件了，从医疗测控电路到stm32到树莓派的IO，都不太想碰了。时代变了，七八十年代的硅谷才是搞硬件的地方，二十一世纪是…反正不是硬件狗的世纪。251牢厂、加班狂魔联影、毁约的迈瑞，只想让人看了跑路。。。</p><p>服务器，启动。树莓派，关机。</p><h2 id="注"><a class="markdownIt-Anchor" href="#注"></a> 注</h2><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">http://downloads.raspberrypi.org/<a href="#fnref:1" rev="footnote"> ↩</a></span></li></ol></div></div>]]></content>
    
    <summary type="html">
    
      &lt;p class=&#39;katex-block&#39;&gt;&lt;span class=&quot;katex-display&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mfrac&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mn&gt;3&lt;/mn&gt;&lt;/mfrac&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;\frac{1}{3}
&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:2.00744em;vertical-align:-0.686em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mopen nulldelimiter&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mfrac&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:1.32144em;&quot;&gt;&lt;span style=&quot;top:-2.314em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.23em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;frac-line&quot; style=&quot;border-bottom-width:0.04em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.677em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.686em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mclose nulldelimiter&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;自从来到沙河102网吧，都是在工作站/服务器/台式机上折腾，树莓派一直仍在清水河宿舍吃灰。今天回了趟清水河，把树莓派拿回来，试试能不能用，打算做备用测试机了。&lt;/p&gt;
    
    </summary>
    
    
      <category term="杂七杂八" scheme="https://zhangjk98.xyz/categories/%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB/"/>
    
    
      <category term="树莓派3B+" scheme="https://zhangjk98.xyz/tags/%E6%A0%91%E8%8E%93%E6%B4%BE3B/"/>
    
  </entry>
  
  <entry>
    <title>尝试Netlify自动部署和CMS</title>
    <link href="https://zhangjk98.xyz/e9d5/"/>
    <id>https://zhangjk98.xyz/e9d5/</id>
    <published>2019-11-30T07:58:43.000Z</published>
    <updated>2019-11-30T12:22:52.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>又开始了瞎折腾。话说我这种没人看的静态小破网站，真的有必要持续集成、持续部署吗？</p><a id="more"></a><h2 id="使用netlify进行自动化部署"><a class="markdownIt-Anchor" href="#使用netlify进行自动化部署"></a> 使用Netlify进行自动化部署</h2><p>不知道怎么都在搞CI/CD（Continuous Integration/Continuous Deployment），Github也搞了个Github Action。看了一圈感觉对于我这种半个月git commit一次备份博客的人并没有什么必要，而且不管是travis ci还是github action或netlify自己的在线build都很慢，博客东西多一点几分钟就过去了（没有特殊需求就想安安静静写个博客就不要搞这个了，本地hexo g，hexo d推到github pages或者netlify就完事了，速度还快）</p><p>之前都是在本地生成，hexo g &amp;&amp; hexo d 推到Github pages，然后Netlify关联这个仓库自动拉取(好像是用的钩子吧)。备份的时候再 git commit &amp;&amp; git push 本地项目。<br />现在每次 git commit 备份并 git push，让Netlify从Hexo的项目直接在线 Hexo g ，按部就班授权，改仓库，改deploy命令为 hexo clean &amp;&amp; hexo generate<br />结果直接Deploy failed了<br />报错:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">failed during stage &#39;preparing repo&#39;: Error checking out submodules: fatal: No url found for submodule path &#39;themes&#x2F;next&#39; in .gitmodules</span><br></pre></td></tr></table></figure><p>查了一下发现是Netlify会把每一个包含.git的子目录当成是一个submodule，并且每次都要<code>git submodule update</code>一下，但是这个next主题的git仓库又没有在在我的.gitmodules配置里面设置为submodule, 那我们直接把themes/next加到.gitmodules里面就好了&lt;sup id=“fnref:1”&gt;<a href="#fn:1" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="[Git 工具 - 子模块](https://git-scm.com/book/zh/v2/Git-工具-子模块) 可能会有切换分支等其他问题">[1]</span></a></sup></p><p>在根目录（执行hexo g &amp;&amp; hexo d的那个目录）新建<code>.gitmodules</code>写入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[submodule &quot;themes&#x2F;next&quot;]</span><br><span class="line">path &#x3D; themes&#x2F;next</span><br><span class="line">url &#x3D; https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;hexo-theme-next</span><br></pre></td></tr></table></figure><p>再执行就行了(先<code>git commit</code>,再<code>git push</code>,再进Netlify试一下)</p><p>看到Deploy log：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">4:46:21 PM: Minifying js bundle</span><br><span class="line">4:46:22 PM: Minifying css bundle</span><br><span class="line">4:46:23 PM: Minifying css bundle</span><br><span class="line">4:46:36 PM: Finished processing build request in 56.658478141s</span><br><span class="line">4:46:37 PM: Post processing done</span><br><span class="line">4:46:37 PM: Site is live</span><br></pre></td></tr></table></figure><p>行了，速度还是可以的，build过程56秒（虽然本地只要几秒，Hugo之类的更快）<br />对比一下本地</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">INFO  Files loaded in 3.96 s</span><br><span class="line">···</span><br><span class="line">INFO  180 files generated in 2.01 s</span><br></pre></td></tr></table></figure><p>这个速度可以接受，据说Netlify最近新增了CI的时间限制（官网说是300 included/month，每个月三百分钟），但是我这种不是重度用户的人根本用不完（实在不行本地hexo s调试好了再提交就完事了，Netlify也要恰饭的嘛，每次CI都要重新安装环境）<br />带宽也有限制，100GB，我这个没人看的小破博客也根本用不了。</p><p>还有一个小问题，改成这样之后发现每一篇文章的更新时间都变成了今天，暂时还没找到判定更新时间的原理是什么，一个办法是手动指定时间戳<br />在每个markdown文件开头</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">updated: '2019-11-30 20:22:52'</span><br><span class="line">date: '2019-11-30 20:22:52'</span><br></pre></td></tr></table></figure><p>更新，找到了这个时间戳的问题，看这个issue：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RoZW1lLW5leHQvaGV4by10aGVtZS1uZXh0L2lzc3Vlcy84OTM=" title="https://github.com/theme-next/hexo-theme-next/issues/893">The update time of the article is incorrect<i class="fa fa-external-link"></i></span></p><p>大概是Git在checkout的时候，没有正确保留时间戳，试了一下，应该就是push上去的时间，而不是修改后add的时间或者commit的时间</p><blockquote><p>It uses the push time of the last modification of the file.</p></blockquote><p>根据issue里的解决办法，只要在<code>hexo clean &amp;&amp; hexo generate</code> 之前加上<code>git ls-files -z | while read -d '' path; do touch -d \&quot;$(git log -1 --format=\&quot;@%ct\&quot; \&quot;$path\&quot;)\&quot; \&quot;$path\&quot;; done</code>就行了</p><p>算了，直接关了吧</p><h2 id="netlify-cms-使用"><a class="markdownIt-Anchor" href="#netlify-cms-使用"></a> Netlify CMS 使用</h2><p>（多说一句，Netlify官网打开是真的慢啊）<br />我已经踩过坑了，没有他们吹的那么好，大骗子，这个也就手机/平板写markdown和发布可以将就一下，真的都不如随身带个U盘里面装着博客工程或者markdown体验好<br />如果不是有多人协作之类的需求就不要乱试了（除非你真的吃饱了撑的没事干</p><p>如果你还是要安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add hexo-netlify-cms</span><br></pre></td></tr></table></figure><p>然后在Netlify里面设置一下&lt;sup id=“fnref:2”&gt;<a href="#fn:2" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="<https://www.dnocm.com/articles/beechnut/hexo-netlify-cms/>">[2]</span></a></sup>, 开启git-gateway服务并在Snippet Injection加入一行代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://identity.netlify.com/v1/netlify-identity-widget.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>打开yoursite/admin就可以看到了<br />这个时候Settings-&gt;Identity-&gt;Registration是开放注册的，我们改成Invite only<br />然后在设置里面Settings-&gt;Identity-&gt;External providers里面进行Github授权或者在在identity页面发邮件邀请（是点进你的team里面identity页面输入邮件地址然后点invite users按钮，不是在设置里的identity）<br />由于我是白嫖用户，Indetity Level 0，什么Audit log之类的都用不了, 设置到这里基本就结束了。</p><ul><li>这句话是我在Netlify CMS里面打的，试试，貌似这个在线的markdown编辑器并不太好用,感觉跟CodiMD差了好多啊，也没有夜间模式，也不支持Mathjax之类的</li></ul><p>行吧，感觉被坑了啊，一点也不好用啊。<s>等有空我在教研室服务器上部署个CodiMD玩</s></p><p>（或许可以在本地写好了markdown再粘贴上去，这个markdown在线编辑器实在是难用，而且丑）</p><p>唯一能看的就是它会自动同步你的repo，但是你下次在本地编辑的时候还得git pull一下，什么时候仓库不在手边的时候能拿来将就一下。（好像可以拿手机之类的操作啊）</p><p>什么，你说多人协作？也不太好用，免费用户invite只能五个账号，鸡肋；收费用户太贵了，并不划算。还不如直接建一个git repository多人协作结合CI发布。至于使用Netlify CMS多人一起维护发布网站内容, 行吧，个人博客基本用不到。也许是给不愿意折腾又想建站还想搞个静态博客的小白用的，但是这样的小白真的有1%吗？</p><p>当然netilify cms对于静态网站还是有它的意义的，不然也不会在Github有那么多star，但是对于不需要多人协作的个人博客，就别装了吧（已经装了的和不折腾不舒服斯基人士请随意）</p><h2 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h2><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2ppYW5ndGovaGV4by1uZXRsaWZ5LWNtcy9ibG9iL21hc3Rlci9SRUFETUUtWkgubWQ=" title="https://github.com/jiangtj/hexo-netlify-cms/blob/master/README-ZH.md">Hexo Netlify CMS<i class="fa fa-external-link"></i></span></p><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><span class="exturl" data-url="aHR0cHM6Ly9naXQtc2NtLmNvbS9ib29rL3poL3YyL0dpdC0lRTUlQjclQTUlRTUlODUlQjctJUU1JUFEJTkwJUU2JUE4JUExJUU1JTlEJTk3" title="https://git-scm.com/book/zh/v2/Git-%E5%B7%A5%E5%85%B7-%E5%AD%90%E6%A8%A1%E5%9D%97">Git 工具 - 子模块<i class="fa fa-external-link"></i></span> 可能会有切换分支等其他问题<a href="#fnref:1" rev="footnote"> ↩</a></span></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">2.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><span class="exturl" data-url="aHR0cHM6Ly93d3cuZG5vY20uY29tL2FydGljbGVzL2JlZWNobnV0L2hleG8tbmV0bGlmeS1jbXMv" title="https://www.dnocm.com/articles/beechnut/hexo-netlify-cms/">https://www.dnocm.com/articles/beechnut/hexo-netlify-cms/<i class="fa fa-external-link"></i></span><a href="#fnref:2" rev="footnote"> ↩</a></span></li></ol></div></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;又开始了瞎折腾。话说我这种没人看的静态小破网站，真的有必要持续集成、持续部署吗？&lt;/p&gt;
    
    </summary>
    
    
      <category term="博客" scheme="https://zhangjk98.xyz/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="netlify" scheme="https://zhangjk98.xyz/tags/netlify/"/>
    
      <category term="ci" scheme="https://zhangjk98.xyz/tags/ci/"/>
    
  </entry>
  
  <entry>
    <title>VSCode使用ssh-key远程登录Ubuntu</title>
    <link href="https://zhangjk98.xyz/7f63/"/>
    <id>https://zhangjk98.xyz/7f63/</id>
    <published>2019-11-22T02:05:08.000Z</published>
    <updated>2020-01-30T13:19:15.513Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>兼谈使用SSH转发加快教研室网上冲浪速度</p><a id="more"></a><p>Mobaxterm挺好用的，只是那个文本编辑器不舒服。<br />试着用一下VSCode的remote-ssh<br />通过ssh-key登录就不多讲了<sup id="fnref:1"><a href="#fn:1" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="[设置 SSH 通过密钥登录](https://hyjk2000.github.io/2012/03/16/how-to-set-up-ssh-keys/)">[1]</span></a></sup></p><h2 id="mobaxterm设置ssh密钥登录"><a class="markdownIt-Anchor" href="#mobaxterm设置ssh密钥登录"></a> Mobaxterm设置SSH密钥登录</h2><p>ssh-keygen生成密钥之后在Mobaxterm的SSH设置找到Advanced SSH Setting里勾选import SSH key可以直接导入密钥。<br />退出再登录显示这样</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Authenticating with public key &quot;Imported-Openssh-Key: id_rsa&quot;</span><br></pre></td></tr></table></figure><p>就是成功了（失败会提示这样<code>Server refused our key</code>)</p><h2 id="vscode设置ssh密钥登录"><a class="markdownIt-Anchor" href="#vscode设置ssh密钥登录"></a> VSCode设置SSH密钥登录</h2><p>装Remote-ssh插件，然后左边框会有个小电脑的图标，点那个图标，再点SSH TARGETS的设置（Configure），进行配置<br />它有个配置文件，一般在<code>C:/Users/&lt;username&gt;/.ssh</code>下面的config<br />编辑它的配置文件，Host随便填，HostName填ip，User填用户名，IdentityFile填私钥路径，Port填端口（默认22可以不填）<br />（要是认证失败什么的，建议把那些.ssh文件夹底下的文件删了，比如known_hosts）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Host workstation</span><br><span class="line">    HostName hostname</span><br><span class="line">    User user</span><br><span class="line">    IdentityFile C:&#x2F;Users&#x2F;XXX&#x2F;.ssh&#x2F;id_rsa</span><br><span class="line">    Port 22</span><br></pre></td></tr></table></figure><p>连接的时候可能会让你手动在termial里的信息<br />这样应该就行了, 不用每次输密码了。看到那个</p><p>什么？想用密码不想用ssh-key密钥登录，不能保存密码🐴？<br />您好，官方文档说不能</p><blockquote><p>Yes, you should be prompted to enter your token or password automatically. However, passwords are not saved, so using key based authentication is typically more convenient</p></blockquote><p>（当然这里是新出的功能，bug当然少不了，我就遇到过<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL21pY3Jvc29mdC92c2NvZGUtcmVtb3RlLXJlbGVhc2UvaXNzdWVzLzEyMTc=" title="https://github.com/microsoft/vscode-remote-release/issues/1217">这样的<i class="fa fa-external-link"></i></span>, 一般遇到问题先升一下最新版或者用insider试试，再不行就去GitHub提issue）<br />其他的问题找官方文档<sup id="fnref:2"><a href="#fn:2" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="[官方文档：Remote Development using SSH](https://code.visualstudio.com/docs/remote/ssh)">[2]</span></a></sup>看看，貌似可以SSH端口转发</p><p>远程SSH的VSCode插件是单独的，可以自行安装<br />如果你要配置多台主机SSH,在配置文件里并列加配置就行了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Host workstation</span><br><span class="line">    HostName hostname</span><br><span class="line">    User user</span><br><span class="line">Host Server</span><br><span class="line">    HostName hostname</span><br><span class="line">    User user</span><br></pre></td></tr></table></figure><h2 id="ssh端口转发"><a class="markdownIt-Anchor" href="#ssh端口转发"></a> SSH端口转发</h2><p>老网民很熟悉的网上冲浪手段之一就是SSH Tunnel<sup id="fnref:3"><a href="#fn:3" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="[墙与梯的较量](https://blog.yandere.moe/moe/gfw-vs-proxy/97.html)">[3]</span></a></sup>。当只开了22端口的时候可以用这种方法绕过防火墙用TCP之类的，当然，这种方法曾经也用来突破那个巨大的 防火墙 。<br />今天我突发奇想，看到工作站和服务器的专用线路的速度贼快啊，<s>专用线路从来不低于45Mb/s不高于50Mb/s的速度毫不含糊</s>，还有公网IP。<br />而102网吧由于老板太抠，四个人用一个路由器，辣鸡校园网网速10M/s都跑不到…</p><p>使用Mobaxterm和SwityOmega插件可以满足大部分需求</p><p>MobaXterm里选Tools &gt; MobaSHHtunnel &gt; New SHH tunnel &gt; Dynamic Port forwarding (SOCKS proxy)</p><p>那个Dynamic Port 是动态转发，不是v2ray那种用来防止被封的动态端口，就是你本地的端口会被转到服务器上相同的端口，是sockets5代理<br />配置你的端口和密钥（最好把那个autostart和Autoconnect也选上），然后到SwityOmega之类的工具里面填上相应的端口，就可以愉快的上网了。从浏览器的IP查询网站看一下IP，已经是服务器的IP了</p><p>更新，看错了，忘了分Mbps和MBps了，实际上快不了多少，只有6MBps/s。但是没人跟我抢，自己走专线还是快一点的。</p><p>终端的命令可以看这篇，不多说了<sup id="fnref:4"><a href="#fn:4" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="[实战 SSH 端口转发](https://www.ibm.com/developerworks/cn/linux/l-cn-sshforward/index.html)">[4]</span></a></sup></p><h2 id="突然意识到"><a class="markdownIt-Anchor" href="#突然意识到"></a> 突然意识到</h2><p>为什么要用SSH呢，现在不用担心被FIREWALL制裁, 流量特征明显的WireGuard可以用了呀…<br />有空试试这个闪闪发光的新生代VPN, 底层貌似是UDP，红龙LOGO挺拉风的(跑题了<br />WireGuard据说要加到新的Linux Kernel里面，但是现在教研室的老Ubuntu只能自己装（这个我18年就听说了要加进kernel啦，连Linus都说好要加辣<sup id="fnref:5"><a href="#fn:5" rel="footnote">&lt;span class=“hint–top hint–error hint–medium hint–rounded hint–bounce” aria-label=&quot;Linus在邮件中回复说：</p><blockquote><p>Btw, on an unrelated issue: I see that Jason actually made the pull<br />request to have wireguard included in the kernel.</p><p>Can I just once again state my love for it and hope it gets merged<br />soon? Maybe the code isn’t perfect, but I’ve skimmed it, and compared to the horrors that are OpenVPN and IPSec, it’s a work of art.<br />见<span class="exturl" data-url="aHR0cHM6Ly9sa21sLm9yZy9sa21sLzIwMTgvOC8yLzY2Mw==" title="https://lkml.org/lkml/2018/8/2/663">https://lkml.org/lkml/2018/8/2/663<i class="fa fa-external-link"></i></span><br />&quot;&gt;[5]</span></a></sup>然而鸽到现在，还是没加，据说作者在搞windows的,现在做的差不多了，要回来折腾Linux了）<br />之前WireGuard由于流量特征太明显就换了v2，现在试试这个<br />安装比Openvpn简单，Ubuntu直接PPA装就行了（需要root权限）</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:wireguard/wireguard</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install wireguard</span><br></pre></td></tr></table></figure><p>win10的官方客户端已经出了，之前18年那会我还用的Tunsafe，设置参考这里<sup id="fnref:6"><a href="#fn:6" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="[Setting up WireGuard on Windows](https://golb.hplar.ch/2019/07/wireguard-windows.html)">[6]</span></a></sup><br />听八卦说Tunsafe和WireGuard作者还有过撕逼，此处不表</p><h3 id="其他"><a class="markdownIt-Anchor" href="#其他"></a> 其他</h3><h3 id="开机自启"><a class="markdownIt-Anchor" href="#开机自启"></a> 开机自启</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> wg-quick@wg0</span><br></pre></td></tr></table></figure><h3 id="使用vscode愉快的写cc"><a class="markdownIt-Anchor" href="#使用vscode愉快的写cc"></a> 使用VSCode愉快的写C/C++</h3><p>装C/C++和coderunner插件就行了，现在可以自动配置运行和调试的文件了（就那个以前一堆坑还经常改一更新就配置失效的launch.json和config.json）</p><h3 id="vscode连接docker"><a class="markdownIt-Anchor" href="#vscode连接docker"></a> VSCode连接Docker</h3><p>安装Docker和Docker compose插件（在远程里面），然后直接用就行了</p><h2 id="注"><a class="markdownIt-Anchor" href="#注"></a> 注</h2><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><span class="exturl" data-url="aHR0cHM6Ly9oeWprMjAwMC5naXRodWIuaW8vMjAxMi8wMy8xNi9ob3ctdG8tc2V0LXVwLXNzaC1rZXlzLw==" title="https://hyjk2000.github.io/2012/03/16/how-to-set-up-ssh-keys/">设置 SSH 通过密钥登录<i class="fa fa-external-link"></i></span><a href="#fnref:1" rev="footnote"> ↩</a></span></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">2.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><span class="exturl" data-url="aHR0cHM6Ly9jb2RlLnZpc3VhbHN0dWRpby5jb20vZG9jcy9yZW1vdGUvc3No" title="https://code.visualstudio.com/docs/remote/ssh">官方文档：Remote Development using SSH<i class="fa fa-external-link"></i></span><a href="#fnref:2" rev="footnote"> ↩</a></span></li><li id="fn:3"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">3.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLnlhbmRlcmUubW9lL21vZS9nZnctdnMtcHJveHkvOTcuaHRtbA==" title="https://blog.yandere.moe/moe/gfw-vs-proxy/97.html">墙与梯的较量<i class="fa fa-external-link"></i></span><a href="#fnref:3" rev="footnote"> ↩</a></span></li><li id="fn:4"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">4.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><span class="exturl" data-url="aHR0cHM6Ly93d3cuaWJtLmNvbS9kZXZlbG9wZXJ3b3Jrcy9jbi9saW51eC9sLWNuLXNzaGZvcndhcmQvaW5kZXguaHRtbA==" title="https://www.ibm.com/developerworks/cn/linux/l-cn-sshforward/index.html">实战 SSH 端口转发<i class="fa fa-external-link"></i></span><a href="#fnref:4" rev="footnote"> ↩</a></span></li><li id="fn:5"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">5.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">Linus在邮件中回复说：&gt;Btw, on an unrelated issue: I see that Jason actually made the pull&gt;request to have wireguard included in the kernel.&gt;&gt;Can I just once again state my love for it and hope it gets merged&gt;soon? Maybe the code isn't perfect, but I've skimmed it, and compared to the horrors that are OpenVPN and IPSec, it's a work of art.见<span class="exturl" data-url="aHR0cHM6Ly9sa21sLm9yZy9sa21sLzIwMTgvOC8yLzY2Mw==" title="https://lkml.org/lkml/2018/8/2/663">https://lkml.org/lkml/2018/8/2/663<i class="fa fa-external-link"></i></span><a href="#fnref:5" rev="footnote"> ↩</a></span></li><li id="fn:6"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">6.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><span class="exturl" data-url="aHR0cHM6Ly9nb2xiLmhwbGFyLmNoLzIwMTkvMDcvd2lyZWd1YXJkLXdpbmRvd3MuaHRtbA==" title="https://golb.hplar.ch/2019/07/wireguard-windows.html">Setting up WireGuard on Windows<i class="fa fa-external-link"></i></span><a href="#fnref:6" rev="footnote"> ↩</a></span></li></ol></div></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;兼谈使用SSH转发加快教研室网上冲浪速度&lt;/p&gt;
    
    </summary>
    
    
      <category term="102网吧日常" scheme="https://zhangjk98.xyz/categories/102%E7%BD%91%E5%90%A7%E6%97%A5%E5%B8%B8/"/>
    
    
      <category term="ssh" scheme="https://zhangjk98.xyz/tags/ssh/"/>
    
      <category term="vscode" scheme="https://zhangjk98.xyz/tags/vscode/"/>
    
  </entry>
  
  <entry>
    <title>给服务器重装Ubuntu</title>
    <link href="https://zhangjk98.xyz/2d5/"/>
    <id>https://zhangjk98.xyz/2d5/</id>
    <published>2019-11-18T09:00:54.000Z</published>
    <updated>2020-01-30T13:19:15.508Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><img width=100 data-src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/haixing.png" alt="Picture"/>祖传服务器传到了我的手里<a id="more"></a>上回书说到，服务器一不小心卸载了iptables现在准备重装。还是打算装Ubuntu Server（并不打算装Manjaro，也不适合搞桌面版，今天试过一下Ubuntu Desktop，图形化界面由于服务器没有独显直接卡到爆炸）~~初步打算安装Ubuntu server 16.04.6LTS, 使用LVM分区~~安装Ubuntu18.04LTS，之前VPS用过一阵18，也没注意有什么新特性，据说还是改了一些东西⬇<blockquote><p>据说<br />内核更新到了 Linux kernel 4.15，这就意味着新增了不少特性 bbr什么的<br />网络管理工具 ifupdown 已经彻底废弃，建议全面拥抱 ip 命令<br />DNS 由 systemd 全面接管，接口监听在 127.0.0.53:53，配置文件在 /etc/systemd/resolved.conf，修改后重启服务即可 systemctl restart systemd-resolved。不要听网上那些奇怪的教程教你如何修改 /etc/resolv.conf<br />swap 文件来替代 swap 分区</p></blockquote><h2 id="装ubuntu1604lts"><a class="markdownIt-Anchor" href="#装ubuntu1604lts"></a> 装Ubuntu16.04LTS</h2><h3 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h3><p>下载iso，制作启动盘，这里用的Rufus<br /><img data-src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/rufus.png" alt="Picture" style="zoom:80%;" /></p><p>然后直接装，网卡直接自动识别了，配置也没什么好说的，可以参考这里<sup id="fnref:1"><a href="#fn:1" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="[tutorial-install-ubuntu-server](ttps://tutorials.ubuntu.com/tutorial/tutorial-install-ubuntu-server)">[1]</span></a></sup>或这里<sup id="fnref:2"><a href="#fn:2" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="[Ubuntu16.04.5以lvm方式安装全记录](https://blog.51cto.com/3241766/2323927) [LVM arch-wiki](https://wiki.archlinux.org/index.php/LVM_(简体中文))">[2]</span></a></sup>,</p><h3 id="后续配置"><a class="markdownIt-Anchor" href="#后续配置"></a> 后续配置</h3><p>进去之后换你电镜像源（终端里vim改/etc/apt/sources.list）<br />apt包update&amp;&amp;upgrade<br />修改时区和系统时间<br />安装Docker，照着官方教程装Docker的时候根本下载不动,换了个国内的源<br />桌面不打算装gnome或者kde了，Mobaxterm用X11一般就够了</p><h2 id="重新安装ubuntu1804-lts"><a class="markdownIt-Anchor" href="#重新安装ubuntu1804-lts"></a> 重新安装Ubuntu18.04 LTS</h2><p>由于某些原因，决定还是换18</p><h2 id="再次安装"><a class="markdownIt-Anchor" href="#再次安装"></a> 再次安装</h2><p>UEFI启动<br />create bond这里先不配置了（只有一张网卡eno1），bound mode选默认的balance-rr<br />eno1网卡选择automatic自动获取ipv4和ipv6<br />镜像源这里输入你电的<br />选use the entire disk and set up LVM<br /><s>是否安装openssh，空格选安装，选择从GitHub获取</s><br />然后输入你的用户名(先准备好key，当然这个时候要保证网也是通的)<br />这里勾选openssh之后一直报错，可能是网的问题，不勾选，等后面再装<br />分区就分一个/boot，一个/swap，一个/home</p><!-- （当然你要先准备好key，先用git bash生成key`ssh-keygen -t rsa -C 'your_email@example.com'`再到Github的SSH设置里面把公钥填进去（id_rsa.pub里面的内容）然后测试一下是否成功<img data-src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/ssh-github.png" alt="Picture" style="zoom:80%;" />） --><p>然后是漫长的installing kernal<br />（不知道为什么装server比desktop版慢那么多）</p><p>bbr已经自带了，不用装了<br />设置root用户和用户组权限<br />装Docker参考这里<sup id="fnref:1"><a href="#fn:1" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="[tutorial-install-ubuntu-server](ttps://tutorials.ubuntu.com/tutorial/tutorial-install-ubuntu-server)">[1]</span></a></sup><br />和英文官方教程那个差不多，主要是获取GPG的地址和Docker源换成国内的<br />换成国内中科大的镜像源（这个换了也时断时续可能连不上）<br />出现permission denied：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Got permission denied while trying to connect to the Docker daemon socket at unix:&#x2F;&#x2F;&#x2F;var&#x2F;run&#x2F;docker.sock: Get http:&#x2F;&#x2F;%2Fvar%2Frun%2Fdocker.sock&#x2F;v1.40&#x2F;containers&#x2F;json: dial unix &#x2F;var&#x2F;run&#x2F;docker.sock: connect: permission denied</span><br></pre></td></tr></table></figure><p>是权限的问题，要加当前用户到用户组里面</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gpasswd -a <span class="variable">$&#123;USER&#125;</span> docker</span><br></pre></td></tr></table></figure><h3 id="更改静态为ip"><a class="markdownIt-Anchor" href="#更改静态为ip"></a> 更改静态为ip</h3><p>网卡是eno1（服务器就一个网卡）<br />Ubuntu18的配置改了，在<code>/etc/netplan/50-cloud-init.yaml</code>, 现在18使用netplan管理网络<br />配置文件是yaml格式，跟hexo和next主题的配置文件格式一样</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># network: &#123;config: disabled&#125;</span></span><br><span class="line"><span class="attr">network:</span></span><br><span class="line"><span class="attr">    ethernets:</span></span><br><span class="line"><span class="attr">        eno1:</span></span><br><span class="line"><span class="attr">            dhcp4:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    version:</span> <span class="number">2</span></span><br></pre></td></tr></table></figure><p>改成</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">network:</span></span><br><span class="line"><span class="attr">  version:</span> <span class="number">2</span></span><br><span class="line"><span class="attr">  renderer:</span> <span class="string">networkd</span></span><br><span class="line"><span class="attr">  ethernets:</span></span><br><span class="line"><span class="attr">    eno1:</span>   <span class="comment">#配置的网卡名称</span></span><br><span class="line"><span class="comment">#      dhcp4: true    #dhcp4关闭</span></span><br><span class="line"><span class="comment">#      dhcp6: true    #dhcp6关闭</span></span><br><span class="line"><span class="attr">      addresses:</span> <span class="string">[211.83.111.224/23]</span>   <span class="comment">#设置本机IP及掩码</span></span><br><span class="line"><span class="attr">      gateway4:</span> <span class="number">211.83</span><span class="number">.110</span><span class="number">.1</span>   <span class="comment">#设置网关</span></span><br><span class="line"><span class="attr">      nameservers:</span></span><br><span class="line"><span class="attr">          addresses:</span> <span class="string">[114.114.114.114,</span> <span class="number">8.8</span><span class="number">.8</span><span class="number">.8</span><span class="string">]</span>   <span class="comment">#设置DNS</span></span><br></pre></td></tr></table></figure><p>(网关地址用<code>route -n</code>查看，配置参考<span class="exturl" data-url="aHR0cDovL2Jsb2cuc2luYS5jb20uY24vcy9ibG9nXzUzNzNiY2Y0MDEwMnhrNWcuaHRtbA==" title="http://blog.sina.com.cn/s/blog_5373bcf40102xk5g.html">ubuntu 18.04 netplan yaml配置固定IP地址<i class="fa fa-external-link"></i></span>)</p><p>然后</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo netplan apply</span><br></pre></td></tr></table></figure><p>不对啊，又炸了，ipv4的网关到底是啥啊</p><p>看了一下官网<sup id="fnref:5"><a href="#fn:5" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="[netplan官网的配置示例](https://netplan.io/examples)">[5]</span></a></sup>，好像nameserver和gateway4都是可选项，可以空着默认<br />直接改成这样试试</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">network:</span></span><br><span class="line"><span class="attr">  version:</span> <span class="number">2</span></span><br><span class="line"><span class="comment">#  renderer: networkd</span></span><br><span class="line"><span class="attr">  ethernets:</span></span><br><span class="line"><span class="attr">    eno1:</span></span><br><span class="line"><span class="attr">      addresses:</span> <span class="string">[211.83.111.224/23]</span></span><br></pre></td></tr></table></figure><p>然后进/run/systemd/network看一下系统的网络配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /run/systemd/network`</span><br><span class="line">ls</span><br><span class="line">cat *</span><br></pre></td></tr></table></figure><p>下面这样应该就可以了，吧…？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">root@xi102server:&#x2F;run&#x2F;systemd&#x2F;network# cat 10-netplan-eno1.network</span><br><span class="line">[Match]</span><br><span class="line">Name&#x3D;eno1</span><br><span class="line"></span><br><span class="line">[Network]</span><br><span class="line">LinkLocalAddressing&#x3D;ipv6</span><br><span class="line">Address&#x3D;211.83.111.224&#x2F;23</span><br></pre></td></tr></table></figure><p>行吧，搜出一堆东西都不靠谱，还是得看官网</p><h3 id="感想"><a class="markdownIt-Anchor" href="#感想"></a> 感想</h3><p>服务器启动的声音真的大啊<br />一半以上的问题都是网络问题，校内这个网真的…<br />靠镜像源救回半条狗命</p><p>Ubuntu18安装时配置网卡时想选静态ip选择Manual进去填写subnet, 结果那个subnet选项是<code>XXX.XXX.XXX.XXX/XX</code><br />看了教研室其他设备相同频段的子网掩码是<code>255.255.254.0</code>，但是填了不行，用网上计算子网掩码的工具算了一下，就是<code>255.255.254.0</code></p><img data-src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/netmmask.png" alt="Picture" style="zoom:80%;" /><p>暂时选了DHCP直接配置网卡，等进去再指定静态ip<sup id="fnref:4"><a href="#fn:4" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="[How to Configure Network Static IP Address in Ubuntu 18.04](https://www.tecmint.com/configure-network-static-ip-address-in-ubuntu/)">[4]</span></a></sup></p><p>哦，netplan好像把子网掩码的格式改了<br />原来是这样</p><blockquote><p>address = 192.168.225.50<br />netmask = 255.255.255.0</p></blockquote><p>改成了这种格式</p><blockquote><p>addresses : [192.168.225.50/24]</p></blockquote><p>滚去补习计网知识了</p><h2 id="安装参考"><a class="markdownIt-Anchor" href="#安装参考"></a> 安装参考</h2><p>223.5.5.5<br />223.6.6.6</p><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><span class="exturl" data-url="dHRwczovL3R1dG9yaWFscy51YnVudHUuY29tL3R1dG9yaWFsL3R1dG9yaWFsLWluc3RhbGwtdWJ1bnR1LXNlcnZlcg==" title="ttps://tutorials.ubuntu.com/tutorial/tutorial-install-ubuntu-server">tutorial-install-ubuntu-server<i class="fa fa-external-link"></i></span><a href="#fnref:1" rev="footnote"> ↩</a></span></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">2.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLjUxY3RvLmNvbS8zMjQxNzY2LzIzMjM5Mjc=" title="https://blog.51cto.com/3241766/2323927">Ubuntu16.04.5以lvm方式安装全记录<i class="fa fa-external-link"></i></span><span class="exturl" data-url="aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvaW5kZXgucGhwL0xWTV8oJUU3JUFFJTgwJUU0JUJEJTkzJUU0JUI4JUFEJUU2JTk2JTg3KQ==" title="https://wiki.archlinux.org/index.php/LVM_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">LVM arch-wiki<i class="fa fa-external-link"></i></span><a href="#fnref:2" rev="footnote"> ↩</a></span></li><li id="fn:3"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">3.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><span class="exturl" data-url="aHR0cHM6Ly95ZWFzeS5naXRib29rcy5pby9kb2NrZXJfcHJhY3RpY2UvaW5zdGFsbC91YnVudHUuaHRtbA==" title="https://yeasy.gitbooks.io/docker_practice/install/ubuntu.html">Ubuntu 安装 Docker CE<i class="fa fa-external-link"></i></span>、<span class="exturl" data-url="aHR0cHM6Ly95ZWFzeS5naXRib29rcy5pby9kb2NrZXJfcHJhY3RpY2UvaW5zdGFsbC9taXJyb3IuaHRtbA==" title="https://yeasy.gitbooks.io/docker_practice/install/mirror.html">镜像加速器<i class="fa fa-external-link"></i></span><a href="#fnref:3" rev="footnote"> ↩</a></span></li><li id="fn:4"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">4.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><span class="exturl" data-url="aHR0cHM6Ly93d3cudGVjbWludC5jb20vY29uZmlndXJlLW5ldHdvcmstc3RhdGljLWlwLWFkZHJlc3MtaW4tdWJ1bnR1Lw==" title="https://www.tecmint.com/configure-network-static-ip-address-in-ubuntu/">How to Configure Network Static IP Address in Ubuntu 18.04<i class="fa fa-external-link"></i></span><a href="#fnref:4" rev="footnote"> ↩</a></span></li><li id="fn:5"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">5.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><span class="exturl" data-url="aHR0cHM6Ly9uZXRwbGFuLmlvL2V4YW1wbGVz" title="https://netplan.io/examples">netplan官网的配置示例<i class="fa fa-external-link"></i></span><a href="#fnref:5" rev="footnote"> ↩</a></span></li></ol></div></div>]]></content>
    
    <summary type="html">
    
      &lt;img width=100 data-src=&quot;https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/haixing.png&quot; alt=&quot;Picture&quot;/&gt;
祖传服务器传到了我的手里
    
    </summary>
    
    
      <category term="102网吧日常" scheme="https://zhangjk98.xyz/categories/102%E7%BD%91%E5%90%A7%E6%97%A5%E5%B8%B8/"/>
    
    
      <category term="ubuntu" scheme="https://zhangjk98.xyz/tags/ubuntu/"/>
    
      <category term="装机" scheme="https://zhangjk98.xyz/tags/%E8%A3%85%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>前端基础知识学习</title>
    <link href="https://zhangjk98.xyz/4a8d/"/>
    <id>https://zhangjk98.xyz/4a8d/</id>
    <published>2019-11-18T07:58:43.000Z</published>
    <updated>2020-01-30T13:19:15.465Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>开始补习</p><a id="more"></a><p>写markdown偶尔要用html的标签，折腾这个博客一堆前端知识，想写个爬虫玩也要在浏览器抡起F12，教研室那个项目也要折腾js，这样下去不行，得整点前端了。<br />先从html，css，javascript三个补起吧</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1. HTML to define the content of web pages</span><br><span class="line"></span><br><span class="line">2. CSS to specify the layout of web pages</span><br><span class="line"></span><br><span class="line">3. JavaScript to program the behavior of web pages</span><br></pre></td></tr></table></figure><p>如果只要求能用就行，可以直接三天速成上手（如果不考虑性能和美观程度，以及，兼 容 性），可以手撸上世纪画风老版页面。想好看一点可以直接上模板和框架，可以迅速搞出看起来能用的还不是太难看的界面。建议不是太需要和前端打交道的像用matlab和python包一样，需要什么现学就好了（很多框架会迅速更新换代，学了几年不用基本就凉了，不建议投入过多精力）</p><h2 id="html笔记"><a class="markdownIt-Anchor" href="#html笔记"></a> HTML笔记</h2><p>大致格式</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">&lt;title&gt;标题（title）&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;标题（headings）&lt;/h1&gt;</span><br><span class="line">&lt;p&gt;段落(paragraph)&lt;/p&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>html标签(tag), 通常是一对</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">tagname</span>&gt;</span>content goes here...<span class="tag">&lt;/<span class="name">tagname</span>&gt;</span></span><br></pre></td></tr></table></figure><p>html属性(Attributes), 比如src，href，width等，style属性可以指定颜色和字体</p><p>中文和特殊字符在head标签中声明</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>链接</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://zhangjk98.xyz.com"</span>&gt;</span>This is a link<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>图片</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"image.jpg"</span> <span class="attr">alt</span>=<span class="string">"图片"</span> <span class="attr">width</span>=<span class="string">"104"</span> <span class="attr">height</span>=<span class="string">"142"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>空元素 br用来换行</p><p>meta标签用来标明一些信息，SEO的时候可能用到</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"author"</span> <span class="attr">content</span>=<span class="string">"Zhang.j.k"</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 这是一个注释（comments） --&gt;</span></span><br></pre></td></tr></table></figure><p>格式标签（formatting）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span> Defines bold text</span><br><span class="line"><span class="tag">&lt;<span class="name">em</span>&gt;</span> Defines emphasized text</span><br><span class="line"><span class="tag">&lt;<span class="name">i</span>&gt;</span> Defines italic text</span><br><span class="line"><span class="tag">&lt;<span class="name">small</span>&gt;</span> Defines smaller text</span><br><span class="line"><span class="tag">&lt;<span class="name">strong</span>&gt;</span> Defines important text</span><br><span class="line"><span class="tag">&lt;<span class="name">sub</span>&gt;</span> Defines subscripted text</span><br><span class="line"><span class="tag">&lt;<span class="name">sup</span>&gt;</span> Defines superscripted text</span><br><span class="line"><span class="tag">&lt;<span class="name">ins</span>&gt;</span> Defines inserted text</span><br><span class="line"><span class="tag">&lt;<span class="name">del</span>&gt;</span> Defines deleted text</span><br><span class="line"><span class="tag">&lt;<span class="name">mark</span>&gt;</span> Defines marked/highlighted text</span><br></pre></td></tr></table></figure><p>引用标签（Quotation）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">abbr</span>&gt;</span> Defines an abbreviation or acronym</span><br><span class="line"><span class="tag">&lt;<span class="name">blockquote</span>&gt;</span> Defines a section that is quoted from another source</span><br><span class="line"><span class="tag">&lt;<span class="name">q</span>&gt;</span> Defines a short inline quotation</span><br></pre></td></tr></table></figure><p>html的字符在markdown中会有渲染的问题，如果像显示为纯文本，可以引用或者使用\进行转义</p><h3 id="使用css"><a class="markdownIt-Anchor" href="#使用css"></a> 使用CSS</h3><p>有三种方式，Inline, internal, external<br />Inline就是style那样的加属性<br />internal用style标签：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-tag">body</span> &#123;<span class="attribute">background-color</span>: powderblue;&#125;</span></span><br><span class="line"><span class="css"><span class="selector-tag">h1</span>   &#123;<span class="attribute">color</span>: blue;&#125;</span></span><br><span class="line"><span class="css"><span class="selector-tag">p</span>    &#123;<span class="attribute">color</span>: red;&#125;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>external是独立出来一个css文件，html进行调用。</p><h3 id="使用javascript"><a class="markdownIt-Anchor" href="#使用javascript"></a> 使用javascript</h3><p>在html中使用script标签引入js进行交互和产生动态效果。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.getElementById(<span class="string">"demo"</span>).innerHTML = <span class="string">"Hello JavaScript!"</span>;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>出于安全问题，有些浏览器禁用js脚本，此时用 noscripts 标签展示相应的替代html内容。</p><h2 id="css"><a class="markdownIt-Anchor" href="#css"></a> CSS</h2><p>CSS（Cascading Style Sheets）用来指定html的格式。有selector和declaration两个部分。<br />像这样:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*注释这样写*/</span></span><br><span class="line"><span class="selector-tag">p</span> &#123;<span class="attribute">color</span>:red;<span class="attribute">text-align</span>:center;&#125;</span><br></pre></td></tr></table></figure><p>CSS在html中的定位有选择id（#后加id）选择class属性（ . 号后加class）两种方式</p><h2 id="javascript"><a class="markdownIt-Anchor" href="#javascript"></a> Javascript</h2><p>这种格式：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myFunction</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"> <span class="built_in">document</span>.getElementById(<span class="string">"demo"</span>).innerHTML = <span class="string">"Paragraph changed."</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用scripts标签放到html的head或者body里面</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"myScript.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="console控制台调试"><a class="markdownIt-Anchor" href="#console控制台调试"></a> Console控制台调试</h3><p>调试的时候F12打开控制台，可以看到console输出的信息</p><h3 id="json"><a class="markdownIt-Anchor" href="#json"></a> JSON</h3><p>用JSON.stringify和JSON.parse转成字符串和还原</p><h3 id="线程"><a class="markdownIt-Anchor" href="#线程"></a> 线程</h3><p>javascript是用的单线程（在浏览器上）,使用异步</p><p>主要是用回调函数、事件监听来实现异步</p><h3 id="变量和类"><a class="markdownIt-Anchor" href="#变量和类"></a> 变量和类</h3><p>放在函数里加var就是内部变量，否则就是外部变量<br />类使用new来新建</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> objectSample = <span class="keyword">new</span> <span class="built_in">Array</span>();</span><br></pre></td></tr></table></figure><h3 id="dom"><a class="markdownIt-Anchor" href="#dom"></a> DOM</h3><p>Document Object Model</p><p>HTML树形结构，元素被视为节点（node）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.getElementById()</span><br></pre></td></tr></table></figure><p>这样获取元素。<br />节点有Document节点（作用于整个HTML）和Element节点</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;开始补习&lt;/p&gt;
    
    </summary>
    
    
      <category term="笔记" scheme="https://zhangjk98.xyz/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="https://zhangjk98.xyz/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>不要尝试sudo apt remove iptables</title>
    <link href="https://zhangjk98.xyz/a7d1/"/>
    <id>https://zhangjk98.xyz/a7d1/</id>
    <published>2019-11-18T05:35:20.000Z</published>
    <updated>2020-01-30T13:19:15.465Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><img data-src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/emmm.jpg" alt="Picture" style="zoom:80%;" /><a id="more"></a>在Ubuntu和Debian里卸载iptables会发生严重的后果（大佬请无视）一开始我们觉得是防火墙把443端口给办了用不了https，结果我用UFW设置不管用，怀疑是iptables的问题，问了花花师兄，也不清楚，我们决定先把iptables禁用了。随手一谷歌，也忘了哪个神仙说的<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt remove iptables # 不要乱试！</span><br></pre></td></tr></table></figure><p>感觉对的嘛，卸个防火墙能出什么问题嘛<br />然后提示是否卸载我选了y，然后突然在卸载的log发现一堆Docker，瞬间感觉不对劲。然后，然后Docker直接不能用了！<br />血泪教训啊，防火墙卸了Docker就不能用了！</p><p>随手一搜发现不止我一个人中招啊</p><img data-src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/iptables-docker.png" alt="Picture" style="zoom:80%;" /><p>我现在心中一万头草泥马飘过</p><img data-src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/cnm.png" alt="Picture" style="zoom:80%;" /><p>行吧，一堆依赖比python2还多</p><p>不说了，准备重装系统了<img data-src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/mmm.jpg" alt="Picture" style="zoom:80%;" /></p><hr /><p>停用iptables请使用<code>chkconfig iptables off</code>命令</p><hr /><p>更新，试图垂死挣扎使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install network-manager</span><br></pre></td></tr></table></figure><p>既然把网卡配置删了那就再配置一遍<br />等会，装了NetworkManager选了默认配置之后连22端口也连不上了。。。<br />行吧，准备重装<br /><img data-src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/wa.jpg" alt="Picture" style="zoom:80%;" /></p>]]></content>
    
    <summary type="html">
    
      &lt;img data-src=&quot;https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/emmm.jpg&quot; alt=&quot;Picture&quot; style=&quot;zoom:80%;&quot; /&gt;
    
    </summary>
    
    
      <category term="102网吧日常" scheme="https://zhangjk98.xyz/categories/102%E7%BD%91%E5%90%A7%E6%97%A5%E5%B8%B8/"/>
    
    
      <category term="iptables" scheme="https://zhangjk98.xyz/tags/iptables/"/>
    
      <category term="删库跑路" scheme="https://zhangjk98.xyz/tags/%E5%88%A0%E5%BA%93%E8%B7%91%E8%B7%AF/"/>
    
      <category term="服务器" scheme="https://zhangjk98.xyz/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>教研室服务器维护</title>
    <link href="https://zhangjk98.xyz/d6da/"/>
    <id>https://zhangjk98.xyz/d6da/</id>
    <published>2019-11-14T09:37:07.000Z</published>
    <updated>2020-01-30T13:19:15.538Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>教研室要倒闭啦，师兄毕业跑路啦！</p><a id="more"></a><h2 id="写在前面的话"><a class="markdownIt-Anchor" href="#写在前面的话"></a> 写在前面的话</h2><p>不想用vim又不得不在linux下改东西，不要再用nano了，这有个<span class="exturl" data-url="aHR0cHM6Ly93bWRwZC5jb20vcWlhbmctbGllLXR1aS1qaWFuLWxpbnV4emhvbmctZHVhbi13ZW4tYmVuLWJpYW4tamktcWktbWljcm8v" title="https://wmdpd.com/qiang-lie-tui-jian-linuxzhong-duan-wen-ben-bian-ji-qi-micro/">micro<i class="fa fa-external-link"></i></span>, 拿好</p><p>安装：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/bin; curl https://getmic.ro | sudo bash</span><br></pre></td></tr></table></figure><p>或者用snap装，装好后开箱即用</p><h2 id="安全问题"><a class="markdownIt-Anchor" href="#安全问题"></a> 安全问题</h2><p>教研室的服务器之前就被黑过<br />老师兄装的Ubuntu，默认端口默认用户名超简单密码直接远程登录，行吧<br />教研室出现了断层，现在的师兄们（以及并夕夕40万却没用过Linux的师姐）Linux都还没我熟，行吧<br />服务器以后就扔给我了，行吧</p><p>之前折腾Docker的时候看日志发现一堆乱七八糟的</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">grep "Accepted password for root" /var/log/auth.log | awk '&#123;print $11&#125;' | sort | uniq -c | sort -nr | more</span><br><span class="line">grep "Failed password for root" /var/log/auth.log | awk '&#123;print $11&#125;' | sort | uniq -c | sort -nr | more</span><br></pre></td></tr></table></figure><p>发现一堆可疑ip几千次登录尝试,哇,又被当小鸡扫了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">3073 Failed</span><br><span class="line">  2593 112.85.42.185</span><br><span class="line">  2471 218.92.0.168</span><br><span class="line">   714 112.85.42.187</span><br><span class="line">   363 218.92.0.188</span><br><span class="line">   261 112.85.42.188</span><br><span class="line">   103 222.186.175.220</span><br><span class="line">   103 222.186.175.148</span><br><span class="line">    86 222.186.180.41</span><br><span class="line">    81 222.186.173.180</span><br><span class="line">    78 222.186.180.8</span><br><span class="line">    78 222.186.180.223</span><br><span class="line">    74 222.186.173.154</span><br><span class="line">    69 222.186.175.161</span><br><span class="line">    65 49.88.112.55</span><br><span class="line">    59 222.186.180.9</span><br><span class="line">    59 222.186.175.182</span><br><span class="line">    57 222.186.180.17</span><br><span class="line">    57 222.186.175.167</span><br><span class="line">    55 222.186.175.202</span><br><span class="line">    55 185.164.72.251</span><br><span class="line">    53 222.186.175.215</span><br><span class="line">    51 222.186.169.194</span><br></pre></td></tr></table></figure><p>改一下密码和SSH端口</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i "s/Port .*/Port 你的端口/g" /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure><p>安装sshfilter或者flai2ban，这里我用的fail2ban。<sup id="fnref:1"><a href="#fn:1" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="[使用 Fail2Ban 加固你的 Linux 服务器](https://isister.cc/posts/Fail2ban-Basic) ">[1]</span></a></sup></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install fail2ban</span><br><span class="line">sudo cp /etc/fail2ban/fail2ban.conf /etc/fail2ban/fail2ban.local</span><br><span class="line">sudo cp /etc/fail2ban/jail.conf /etc/fail2ban/jail.local</span><br></pre></td></tr></table></figure><p>配置文件修改.local, 会像next.yml一样把.conf文件自动覆盖掉（直接修改那两个conf下次更新可能会覆盖掉）。</p><p>主要参数就是那个bantime和maxretry，这里我设成2小时和10次</p><p>然后启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start fail2ban</span><br><span class="line">systemctl <span class="built_in">enable</span> fail2ban</span><br></pre></td></tr></table></figure><p>其他操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">fail2ban-client <span class="built_in">set</span> sshd addignoreip &lt;IP&gt; <span class="comment"># IP白名单</span></span><br><span class="line">fail2ban-client <span class="built_in">set</span> sshd unbanip &lt;IP&gt; <span class="comment"># 解封IP</span></span><br></pre></td></tr></table></figure><p>还要配置一下防火墙<br />iptables很繁琐，不涉及太多配置的情况下可以用UFW</p><h3 id="防火墙端口"><a class="markdownIt-Anchor" href="#防火墙端口"></a> 防火墙端口</h3><p>端口用的时候要打开，不然会出各种烦人的问题，比如wget下载没开443就会<code>443... failed: Connection refused.</code>，如果你加了~–no-check-certificate`还是failed，那八成是防火墙的问题<br />查看端口开放状态</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -ntlp</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">telnet ip port</span><br></pre></td></tr></table></figure><p>Ubuntu里用ufw查看状态</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw status</span><br></pre></td></tr></table></figure><p>查看指定端口的状态（没输出可能是没开）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -ntlp|grep 443</span><br></pre></td></tr></table></figure><p>打开443端口</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">iptables -I INPUT -p tcp --dport 443 -j ACCEPT</span><br><span class="line">service iptables save</span><br><span class="line">service iptables restart</span><br></pre></td></tr></table></figure><p>使用UFW, 直接</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw allow 443</span><br></pre></td></tr></table></figure><p>用iptables打开指定端口, 一般开80，443，53，22，其他按需打开</p><p>可以安装这个来永久保存配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install iptables-persistent</span><br></pre></td></tr></table></figure><h3 id="docker默认修改iptables规则"><a class="markdownIt-Anchor" href="#docker默认修改iptables规则"></a> Docker默认修改iptables规则</h3><p>Docker不设置会默认修改iptables规则，将端口暴露在外面，导致端口映射在安全上并没有什么卵用，要设置一下一下，可以看这里<br /><span class="exturl" data-url="aHR0cHM6Ly93d3cuYmluc3MubWUvYmxvZy9kb2NrZXItcGFzcy10aHJvdWdoLXN5c3RlbS1maXJld2FsbC8=" title="https://www.binss.me/blog/docker-pass-through-system-firewall/">https://www.binss.me/blog/docker-pass-through-system-firewall/<i class="fa fa-external-link"></i></span></p><h2 id="https"><a class="markdownIt-Anchor" href="#https"></a> HTTPs</h2><p>申请SSL证书</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install ssl-cert</span><br></pre></td></tr></table></figure><p>然后搞一个自己的域名，因为境内服务器要备案，此计划中道崩殂</p><h2 id="运行sudo-apt-get-update报错"><a class="markdownIt-Anchor" href="#运行sudo-apt-get-update报错"></a> 运行<code>sudo apt-get update</code>报错</h2><p>写在前面，我看到有的镜像源示例配置都是走的HTTPS，似乎没有必要<br />详见<span class="exturl" data-url="aHR0cHM6Ly93aHlkb2VzYXB0bm90dXNlaHR0cHMuY29tLw==" title="https://whydoesaptnotusehttps.com/">Why does APT not use HTTPS?<i class="fa fa-external-link"></i></span>。<br />至于某Debian镜像源上说的什么安装apt-transport-https更是没有必要，画蛇添足</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Get:1 http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu xenial InRelease [454 B]</span><br><span class="line">Get:2 http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu xenial-updates InRelease [454 B]</span><br><span class="line">Get:3 http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu xenial-backports InRelease [454 B]</span><br><span class="line">Get:4 http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu xenial-security InRelease [454 B]</span><br><span class="line">Err:1 http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu xenial InRelease</span><br><span class="line">  Clearsigned file isn&#39;t valid, got &#39;NOSPLIT&#39; (does the network require authentication?)</span><br><span class="line">Err:2 http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu xenial-updates InRelease</span><br><span class="line">  Clearsigned file isn&#39;t valid, got &#39;NOSPLIT&#39; (does the network require authentication?)</span><br><span class="line">Err:3 http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu xenial-backports InRelease</span><br><span class="line">  Clearsigned file isn&#39;t valid, got &#39;NOSPLIT&#39; (does the network require authentication?)</span><br><span class="line">Err:4 http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu xenial-security InRelease</span><br><span class="line">  Clearsigned file isn&#39;t valid, got &#39;NOSPLIT&#39; (does the network require authentication?)</span><br></pre></td></tr></table></figure><p>查了一下说是代理的问题，看了一下教研室的工作站竟然还有酸酸乳和bbr，一问师兄说是老板外出的时候想上学校网用这个，行吧</p><p>设置一下apt的代理</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;etc&#x2F;apt$ cat apt.conf</span><br><span class="line"></span><br><span class="line">Acquire::http::proxy &quot;http:&#x2F;&#x2F;&lt;proxy&gt;&quot;;</span><br><span class="line">Acquire::https::proxy &quot;https:&#x2F;&#x2F;&lt;proxy&gt;&quot;;</span><br><span class="line">Acquire::ftp::proxy &quot;ftp:&#x2F;&#x2F;&lt;proxy&gt;&quot;;</span><br><span class="line">Acquire::socks::proxy &quot;socks:&lt;proxy&gt;&quot;;</span><br></pre></td></tr></table></figure><p>这里我切进目录没找到，发现有个apt.conf.d文件夹，是表示缺省的配置文件，删掉换成apt.conf<br />比如代理是1.2.3.4，端口1234<br />就改成<code>Acquire::http::proxy &quot;http://1.2.3.4:1234</code></p><p>改了一下发现不对，这边是服务端应该没开代理啊</p><p>把代理都删了</p><p>感觉可能DNS有问题,切到<code>etc/resolv.conf</code>看了一下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nameserver 202.112.14.21</span><br><span class="line">nameserver 202.112.14.11</span><br></pre></td></tr></table></figure><p>这个学校的DNS服务不行啊，别的都直通互联网，这个上不了谷歌不说，还经常不对外网提供解析服务<br />(能ping通,但是nslookup发现不对外网提供服务)<br />又看了一下工作站的DNS, 果然换过了<br />校园网暂时也没什么好的DNS，就先换了清华的<br />(那个DNS不是<code>/etc/resolv.conf</code>下的，要改<code>/etc/resolvconf/resolv.conf.d</code>下的<code>base</code>文件,第一个只是临时的DNS)</p><p>还要刷新一下DNS：<code>sudo service networking restart</code></p><p>运行<code>sudo apt-get upgrade</code>又报了这个错<code>Hash Sum mismatch</code></p><p>查了一下发现就是阿里云镜像源在教育网下的问题</p><p>算了,改镜像源吧,换了清华的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Err:1 https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu xenial InRelease</span><br><span class="line">  Failed to connect to mirrors.tuna.tsinghua.edu.cn port 443: Connection timed out</span><br></pre></td></tr></table></figure><p>依然不行, 决定明天重装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">E: Some index files failed to download. They have been ignored, or old ones used instead.</span><br></pre></td></tr></table></figure><p>看了一下，工作站那台DNS是<code>cat /etc/resolv.conf</code>是127.0.0.1，是DNSmasq托管的，而服务器上的还是你电的DNS，决定改了。<br />工作站上应该是这样的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># &#x2F;etc&#x2F;network&#x2F;interfaces</span><br><span class="line">dns-nameservers 8.8.8.8</span><br></pre></td></tr></table></figure><p>改了之后服务器的<code>resolv.conf</code>也是<code>127.0.0.1</code>了<br />又上大清的网站看了一下，发现居然在维护</p><img data-src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/20191115103425.png" alt="Picture" style="zoom:80%;" /><p>换成你电的，好了，收工</p><img data-src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/ubuntu-apt.png" alt="Picture" style="zoom:80%;" /><p>又报了<code>Target Translations (main/i18n/Translation-en) is configured multiple times in</code>, 查了一下是指定apt源冲突了，删掉一个就好了</p><h2 id="查看配置"><a class="markdownIt-Anchor" href="#查看配置"></a> 查看配置</h2><p>本来想用neofetch查看一下服务器的配置，结果apt装不了。<br />看了一下官方文档发现16.10要这样</p><p>Add PPA<br /><code>sudo add-apt-repository ppa:dawidd0811/neofetch</code><br />Update repositories<br /><code>sudo apt update</code><br />Install the package<br /><code>sudo apt install neofetch</code><br />（安装neofetch还能下载编译，可能还快一点）</p><p>算了，好慢啊，直接用<code>sudo dmidecode</code>看吧，screenfetch也行<br />英特尔的e5 2630 v4，20核CPU，没显卡。这CPU平时居然没人用，空跑,居然还有公网ip，我仿佛发现了宝藏。不出意外就留给我挥（bei）霍（guo）了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">                         .&#x2F;+o+-       root@labserver</span><br><span class="line">                 yyyyy- -yyyyyy+      OS: Ubuntu 16.04 xenial</span><br><span class="line">              :&#x2F;&#x2F;+&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;-yyyyyyo      Kernel: x86_64 Linux 4.12.14-041214-generic</span><br><span class="line">          .++ .:&#x2F;++++++&#x2F;-.+sss&#x2F;&#96;      Uptime: 21h 36m</span><br><span class="line">        .:++o:  &#x2F;++++++++&#x2F;:--:&#x2F;-      Packages: 718</span><br><span class="line">       o:+o+:++.&#96;..&#96;&#96;&#96;.-&#x2F;oo+++++&#x2F;     Shell: bash 4.3.48</span><br><span class="line">      .:+o:+o&#x2F;.          &#96;+sssoo+&#x2F;    WM: Not Found</span><br><span class="line"> .++&#x2F;+:+oo+o:&#96;             &#x2F;sssooo.   CPU: Intel Xeon CPU E5-2630 v4 @ 3.1GHz</span><br><span class="line">&#x2F;+++&#x2F;&#x2F;+:&#96;oo+o               &#x2F;::--:.   RAM: 1348MiB &#x2F; 32074MiB</span><br><span class="line">\+&#x2F;+o+++&#96;o++o               ++&#x2F;&#x2F;&#x2F;&#x2F;.</span><br><span class="line"> .++.o+++oo+:&#96;             &#x2F;dddhhh.</span><br><span class="line">      .+.o+oo:.          &#96;oddhhhh+</span><br><span class="line">       \+.++o+o&#96;&#96;-&#96;&#96;&#96;&#96;.:ohdhhhhh+</span><br><span class="line">        &#96;:o+++ &#96;ohhhhhhhhyo++os:</span><br><span class="line">          .o:&#96;.syhhhhhhh&#x2F;.oo++o&#96;</span><br><span class="line">              &#x2F;osyyyyyyo++ooo+++&#x2F;</span><br><span class="line">                  &#96;&#96;&#96;&#96;&#96; +oo+++o\:</span><br><span class="line">                         &#96;oo++.</span><br></pre></td></tr></table></figure><h2 id="更新"><a class="markdownIt-Anchor" href="#更新"></a> 更新</h2><p>发现不是镜像源的问题，是你电的镜像源没安排上https，这个服务器好像是证书的问题，https全都用不了，wget也不行。</p><h2 id="滚动升级"><a class="markdownIt-Anchor" href="#滚动升级"></a> 滚动升级</h2><p>不存在的，这又不是arch系，不要乱升，乱升级滚挂了是要背锅的<br />要升可以用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo do-release-upgrade</span><br></pre></td></tr></table></figure><p>升完记得把apt源给换了<br />看到有安全更新，说</p><blockquote><p><em><strong>System restart required</strong></em></p></blockquote><p>reboot一下就行了</p><h2 id="网络问题"><a class="markdownIt-Anchor" href="#网络问题"></a> 网络问题</h2><p>很迷，有的地方很快，有的地方就几乎慢到断线。我的联通就经常ping不同。<br />据说老蔡师兄他那里也经常ping不通</p><img data-src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/ping-ubuntu.jpg" alt="Picture" style="zoom:60%;" /><p>测试了一下服务器的下载速度，50M/s</p><!-- 查看实时网速NetHogs --><h2 id="备份和恢复"><a class="markdownIt-Anchor" href="#备份和恢复"></a> 备份和恢复</h2><p>师兄也没装什么东西，用的cp直接备份了点文件，一言不合重装系统。<br />先暂时用cp备份一次<br />挂载一下盘(比如挂到/mnt/mydata)，用cp复制<br />(挂载看这里<sup id="fnref:3"><a href="#fn:3" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="[细说linux挂载——mount，及其他……](https://forum.ubuntu.org.cn/viewtopic.php?f=120&t=257333) ">[3]</span></a></sup>)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mount /dev/sdb7 /mnt</span><br><span class="line">nohup cp -pdr /srv /mnt/mydata &gt;&gt; logs.out 2&gt;&amp;1 &amp;</span><br><span class="line">umount /dev/sdb7</span><br></pre></td></tr></table></figure><p>这样将/srv目录下的文件全部拷贝到mydata下面.<br />文件很大，cp没有进度条，以后试试gcp之类的命令，先这样吧</p><p>看了一下，有接近300G的数据，用cp命令太慢了<br />用dd，把\srv目录底下的迁过去,整盘拷贝（dd命令不要乱用，一不小心就删库了）</p><p>拷贝完<code>umount /mydata</code>再拔</p><p>下次试试rsync同步，据说能断点续传和md5验证</p><h2 id="使用教研室服务器下载"><a class="markdownIt-Anchor" href="#使用教研室服务器下载"></a> 使用教研室服务器下载</h2><p>教研室的服务器有一个单独的猫和ip，网速绝大多数时候不低于50M/s，今天才发现比我的小破工位上的网速快不少。<br />以后下数据集和数据库文件之类的大东西就用它了！</p><h2 id="使用tmux"><a class="markdownIt-Anchor" href="#使用tmux"></a> 使用Tmux</h2><p>（其实MobaXterm有一个叫Multiexec的功能）<br />正在备份文件结果网断了（没办法，校园网就是这么…）<br />这时就要用tmux之类的工具了</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install tmux</span><br></pre></td></tr></table></figure><h2 id="图形界面"><a class="markdownIt-Anchor" href="#图形界面"></a> 图形界面</h2><p>MobaXterm内嵌有Xserver，可以调出图形化窗口。<br />比如nedit,Emacs之类的<br /><img data-src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/xserver.png" alt="Picture" style="zoom:80%;" /><br />已经足够应付简单的图形化界面需求了<br />完整的桌面需求请直接VNC或teamviewer到工作站操作。</p><h2 id="卸载遗留的docker并重装"><a class="markdownIt-Anchor" href="#卸载遗留的docker并重装"></a> 卸载遗留的Docker并重装</h2><p>目前还报这样的错</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Cannot connect to the Docker daemon at unix:&#x2F;&#x2F;&#x2F;var&#x2F;run&#x2F;docker.sock. Is the docker daemon running?</span><br></pre></td></tr></table></figure><p>似乎重装iptables的时候会直接把那个Docker的一部分依赖卸掉<br />（Docker好像还会直接修改默认的防火墙规则，emmmm)</p><p>更新，解决了，是网络问题，离线装就好了</p><h2 id="教研室的阿里云"><a class="markdownIt-Anchor" href="#教研室的阿里云"></a> 教研室的阿里云</h2><p>真的，有毒哇<br /><img data-src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/apt.png" alt="Picture" style="zoom:80%;" /><br />是的，师兄跟我说没有apt。。。<strong>行吧</strong></p><p>装一个</p><p>等等，不对劲，这是Centos啊</p><img data-src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/centos.png" alt="Picture" style="zoom:80%;" /><p>行吧…那没事了。师兄真的…我感觉我上了贼船</p><h2 id="报备"><a class="markdownIt-Anchor" href="#报备"></a> 报备</h2><p>按学校信息中心的要求，固定IP都需要申请报备，还有一堆乱七八糟的事</p><h3 id="系统日志和杀毒"><a class="markdownIt-Anchor" href="#系统日志和杀毒"></a> 系统日志和杀毒</h3><p>学校信息中心要求备份系统日志和杀软。<br />然而这Linux有什么装杀软的必要吗？防火墙就完事了。<br />行吧，交差还是要装模做样的应付一下</p><p>安装ClamAV：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install clamav</span><br></pre></td></tr></table></figure><p>直接扫描报错了，要升级病毒库<code>sudo freshclam</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">LibClamAV Error: cli_loaddbdir(): No supported database files found in &#x2F;var&#x2F;lib&#x2F;clamav</span><br><span class="line">ERROR: Can&#39;t open file or directory</span><br></pre></td></tr></table></figure><p>然后扫一下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">clamscan -r --bell -i /</span><br></pre></td></tr></table></figure><p>系统安装日志，不知道要交什么，索性把apt和dpkg的日志交了,在<code>/var/log/</code>和<code>/var/log/apt/</code>目录下面</p><h3 id="端口报备"><a class="markdownIt-Anchor" href="#端口报备"></a> 端口报备</h3><p>一般22，80，443，再加上几个常用的端口就够了<br />实在不行还有端口转发</p><p>看一下开了的端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -znv 211.XXX.XXX.XXX 1-10000  2&gt;&amp;1 | grep succeeded</span><br></pre></td></tr></table></figure><h3 id="域名"><a class="markdownIt-Anchor" href="#域名"></a> 域名</h3><p>暂时还没有，备案麻烦没弄</p><h2 id="清理trash"><a class="markdownIt-Anchor" href="#清理trash"></a> 清理Trash</h2><p>工作站桌面变得非常卡，clamscan扫描home目录也扫了整整两天，看了一下发现有前前任师兄几百个G的数据。使用rm之后跑到了.local文件夹下。使用跑路命令把它们删掉。(最好不要把 .local全删了，只删Trash就行了<code>.local/share/Trash</code>)</p><h2 id="使用smartdns"><a class="markdownIt-Anchor" href="#使用smartdns"></a> 使用SmartDNS</h2><p>今天SmartDNS 开源了，决定试试，安装看这里<span class="exturl" data-url="aHR0cHM6Ly9weW11bXUuZ2l0aHViLmlvL3NtYXJ0ZG5zLw==" title="https://pymumu.github.io/smartdns/">https://pymumu.github.io/smartdns/<i class="fa fa-external-link"></i></span>,Docker版本用这个<sup id="fnref:2"><a href="#fn:2" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="[smartdns的Docker镜像](https://hub.docker.com/u/ghostry)">[2]</span></a></sup></p><p>看到有教程说Ubuntu还要设置一下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">disable</span> systemd-resolved</span><br><span class="line">sudo systemctl stop systemd-resolved</span><br><span class="line">sudo vi /etc/resolv.conf</span><br><span class="line">nameserver 127.0.0.1</span><br></pre></td></tr></table></figure><p>选DNS参考这里<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLnNray5tb2UvcG9zdC93aGljaC1wdWJsaWMtZG5zLXRvLXVzZQ==" title="https://blog.skk.moe/post/which-public-dns-to-use">https://blog.skk.moe/post/which-public-dns-to-use<i class="fa fa-external-link"></i></span></p><h2 id="其他"><a class="markdownIt-Anchor" href="#其他"></a> 其他</h2><p>Gitlab占用过高的问题等见瞎折腾记录(其实没有特殊需求可以用Gogs，小声逼逼)<br />在服务器上部署jupyter参考<span class="exturl" data-url="aHR0cHM6Ly9iaXRtaW5ndy5jb20vMjAxNy8wNy8wOS9ydW4tanVweXRlci1ub3RlYm9vay1zZXJ2ZXIv" title="https://bitmingw.com/2017/07/09/run-jupyter-notebook-server/">搭建 ipython/jupyter notebook 服务器<i class="fa fa-external-link"></i></span></p><h2 id="远程开发"><a class="markdownIt-Anchor" href="#远程开发"></a> 远程开发</h2><p>为什么要远程呢，因为我的电脑是小破i5，8G内存，装双系统不太行，虚拟机更不行。用wsl真的不如直接上服务器20核CPU、工作站两块1080pi（还有单独的网线和公网IP）。配合SSH端口转发和VSCode、JB全家桶，还是很舒服的。</p><h3 id="python多版本管理"><a class="markdownIt-Anchor" href="#python多版本管理"></a> python多版本管理</h3><p>python的包管理是个很麻烦的事，坑不少，尤其是在大家都用的服务器上。（这上面有2.7，3.5，3.6和师兄炼丹装的conda3.7、3.6，不要问我为什么linux装conda，师兄干的）</p><p>我用自己的linux用户可以避开root用户底下一些混乱环境（比如conda）<br />主要的问题是切换python版本和python包管理，切换python版本一般用pyenv；包管理选择很多，一直没发现特别完美的工具。</p><h4 id="pyenv"><a class="markdownIt-Anchor" href="#pyenv"></a> pyenv</h4><p>pyenv用来切换python版本，配合其他工具管理包</p><h4 id="venv"><a class="markdownIt-Anchor" href="#venv"></a> venv</h4><p>python3官方的包管理工具</p><h4 id="pipenv"><a class="markdownIt-Anchor" href="#pipenv"></a> pipenv</h4><p>一个类似Ruby的Bundler的东西<br />纯指定依赖，使用体验比上面那个好，有一点慢<br />（不推荐在win上用）</p><p>就跟npm差不多，和node_modules差不多的Pipfile（存放本地包），和npm的package-lock.json差不多的Pipfile.lock（版本锁）</p><h4 id="poetry"><a class="markdownIt-Anchor" href="#poetry"></a> Poetry</h4><p>这个和上面那个很像，这几个工具在逼乎、v2ex以及外网等地有很多撕逼和纷争，此处不评价。</p><p>poetry还能用来打包</p><h4 id="docker虚拟机"><a class="markdownIt-Anchor" href="#docker虚拟机"></a> Docker&amp;虚拟机</h4><p>可以，一般没有必要，真机就挺好。<br />Docker的镜像有官方的python，但是非常大，上G。如果自己写Dockerfile构建一个，缩减镜像，调度每个容器的内存，都是远比前面那几个东西麻烦的事情。<br />Docker并不适合个人开发环境，直接跑真机它香吗。<br />Docker在调试的时候真的难受，不理解为什么会有人把它<br />虽然Docker本身并不吃你太多内存，但是Docker容器跑起来，如果不调度和限制，吃内存还是很猛的。</p><p>但是这么一配置，怎么比原来麻烦多了，Docker教徒吹嘘的部署方便这里在需要调试的时候并没有什么优势。</p><h2 id="部署项目"><a class="markdownIt-Anchor" href="#部署项目"></a> 部署项目</h2><h3 id="python项目"><a class="markdownIt-Anchor" href="#python项目"></a> python项目</h3><p>这里以开源标注工具doccano为例（该项目提供了Docker镜像和直接部署的方法以及docker-compose示例文件，还给了aws等一键部署脚本）</p><p>我们clone下来，修改settings.py文件</p><p>最简单的方法就是直接用官方的镜像</p><p>这里用新建虚拟环境运行项目的方式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ virtualenv venv --python=python3.6</span><br></pre></td></tr></table></figure><h2 id="一次被黑记录"><a class="markdownIt-Anchor" href="#一次被黑记录"></a> 一次被黑记录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CPU  [||||||||||||||||                 51.8%]   CPU -    51.8%  nice:     0.0%  ctx_sw:    8K   MEM -   21.7%  active:    5.31G   SWAP -    0.0%   LOAD    20-core</span><br><span class="line">MEM  [|||||||                          21.7%]   user:    51.3%  irq:      0.0%  inter:   5508   total:  31.3G  inactive:  4.27G   total:    976M  </span><br><span class="line">····</span><br><span class="line">lo                         0b     0b   999.5  0.0   2.34G 2.44M   2654 root        67h8:58 16    0 S    ? ?    .&#x2F;cron</span><br><span class="line">2020-01-15 16:17:54 CST</span><br></pre></td></tr></table></figure><p>症状：昨天root上不去了，rsa密钥也挂了，以为是网的问题，今天一试还不行。用自己的另一个账号登了一下，发现<code>su root</code>居然permission denied了。怀疑是被黑了，一看系统占用，有挖矿程序在跑。看了一下系统日志，是13号被黑的，照着网上清了一遍。从此禁用密码登录（之前就想禁，师兄嫌麻烦）。MySQL也禁用密码改ssl</p><p>clamav再扫一遍</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup clamscan -r /root 2 &gt;&gt; err.out &amp;</span><br></pre></td></tr></table></figure><h2 id="注"><a class="markdownIt-Anchor" href="#注"></a> 注</h2><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><span class="exturl" data-url="aHR0cHM6Ly9pc2lzdGVyLmNjL3Bvc3RzL0ZhaWwyYmFuLUJhc2lj" title="https://isister.cc/posts/Fail2ban-Basic">使用 Fail2Ban 加固你的 Linux 服务器<i class="fa fa-external-link"></i></span><a href="#fnref:1" rev="footnote"> ↩</a></span></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">2.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><span class="exturl" data-url="aHR0cHM6Ly9odWIuZG9ja2VyLmNvbS91L2dob3N0cnk=" title="https://hub.docker.com/u/ghostry">smartdns的Docker镜像<i class="fa fa-external-link"></i></span><a href="#fnref:2" rev="footnote"> ↩</a></span></li><li id="fn:3"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">3.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><span class="exturl" data-url="aHR0cHM6Ly9mb3J1bS51YnVudHUub3JnLmNuL3ZpZXd0b3BpYy5waHA/Zj0xMjAmYW1wO3Q9MjU3MzMz" title="https://forum.ubuntu.org.cn/viewtopic.php?f=120&amp;t=257333">细说linux挂载——mount，及其他……<i class="fa fa-external-link"></i></span><a href="#fnref:3" rev="footnote"> ↩</a></span></li></ol></div></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;教研室要倒闭啦，师兄毕业跑路啦！&lt;/p&gt;
    
    </summary>
    
    
      <category term="102网吧日常" scheme="https://zhangjk98.xyz/categories/102%E7%BD%91%E5%90%A7%E6%97%A5%E5%B8%B8/"/>
    
    
      <category term="Linux" scheme="https://zhangjk98.xyz/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Nginx部署网站</title>
    <link href="https://zhangjk98.xyz/1609/"/>
    <id>https://zhangjk98.xyz/1609/</id>
    <published>2019-11-05T02:36:05.000Z</published>
    <updated>2020-01-30T13:19:15.459Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>等待填坑</p><a id="more"></a><p>部署教研室的小项目的时候接触了一点Nginx，好像Nginx适合部署静态资源和反向代理，决定把博客也试着用Nginx迁到我的VPS上。Netlify在国内的访问速度实在是…</p><p>先把Nginx、npm包、git、hexo之类的都装好<br />（可能还要装gcc和g++用来make）</p><p>然后用 Hexo s 试试，其实这时候就启动了。每日浏览量不破千，瞬时浏览量不破百的小博客其实用不着Nginx，用<span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=" title="https://hexo.io/docs/server.html">hexo自带的server<i class="fa fa-external-link"></i></span>完全应付得过来</p><p>这里有一个Nginx的配置网站</p><p><span class="exturl" data-url="aHR0cHM6Ly9uZ2lueGNvbmZpZy5pby8=" title="https://nginxconfig.io/">https://nginxconfig.io/<i class="fa fa-external-link"></i></span></p><p>我无需多言了</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;等待填坑&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Nginx" scheme="https://zhangjk98.xyz/tags/Nginx/"/>
    
      <category term="Hexo" scheme="https://zhangjk98.xyz/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>清水寺生存指北</title>
    <link href="https://zhangjk98.xyz/40f3/"/>
    <id>https://zhangjk98.xyz/40f3/</id>
    <published>2019-11-03T03:25:11.000Z</published>
    <updated>2020-01-30T13:19:15.462Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>你说我一个渣渣，硬件不精，软件不熟，边缘学院，劝退专业，没有国奖，没有论文，现在刚大四保完研都还没毕业，怎么就有脸来写生存指南了呢？</p><a id="more"></a><p>当年看到上交的那个上海交通大学生存手册，还是在大一。三年一晃而过，现在再看，我是笑不出来，我眼泪在肚子里流。</p><p>国内理工科都有不少相似的问题，我感觉至少有七成问题是相似的（上交的那份生存指南也有十年了，只有小部分政策变化，大部分情况几乎没怎么变，放在今天依然是合适的）。但是每个学校都需要一个生存指南，剩下的三成大一新生是不太容易从报喜不报忧的学校官方账号、各怀鬼胎的老师、辅导员、坑蒙拐骗装腔作势狐假虎威的学长学姐那里打听到的。</p><p>看到大一大二的一些同学年复一年在走弯路，于心不忍，还是写点东西，罢了。</p><h2 id="写在前面的话"><a class="markdownIt-Anchor" href="#写在前面的话"></a> 写在前面的话</h2><ul><li>大佬就不用看了，出门右转去打电赛/ACM/科研</li><li>出国的同学也不用看了，出门左转河畔《成电飞跃手册》</li><li>本文不具有时效性，大新闻实时放送看这里<span class="exturl" data-url="aHR0cHM6Ly91ZXN0Yy5pY3Uv" title="https://uestc.icu/">UESTC.icu<i class="fa fa-external-link"></i></span></li></ul><h2 id="成电笑话"><a class="markdownIt-Anchor" href="#成电笑话"></a> 成电笑话</h2><ul><li><p>建校初年，苏联援建，师承苏系（看到那个苏式主楼了吗），笑话当然也一脉相承啦。</p></li><li><p>一个川农的男生，一个西交的男生，一个川大的男生和一个成电的男生一起去请教一一个西财的男生怎么找女朋友。西财的说:“很简单，邀请你喜欢的女生，在周末到市里逛逛，买点礼物，请她吃饭，久而久之她就对你有好感了。”川大的问: &quot;什么是周末?”西交的问:“什么是女生?”川农的问:“什么是市里？”<br />成电的问：“什么是周末？什么是女生？什么是市里？”</p></li><li><p>“同学，请问您在支持课程改革方面动摇过🐴”<br />“我和课程改革一起动摇”</p></li><li><p>“拉宾诺维奇，你关注成电新闻吗”<br />“当然，不然我怎么知道我们在课程改革”</p></li><li><p>问：教育改革和科学有什么区别？<br />“如果教育改革是科学的，那他们应该先拿成教学生当小白鼠”</p></li><li><p>校领导：“我们要教育改革，培养条理清晰地写作和连贯的表达能力！”<br />同学们：“太好了，那要怎么做呢”<br />教务处：“增加马原毛概思修的课时和考试要求，开卷全部改为闭卷”</p></li><li><p>教务处：我们要进行教育改革，请大家在 指 定 时 间 之内将您的宝贵意见、建议反馈至教务处。<br />（温馨提醒，文件尚未正式发布，请勿外传）<br />全校师生：什么时候?<br />教务处：10<br />全校师生：10什么？10个月？还是10天?<br />教务处：9，8，7…</p></li></ul><h2 id="一入ee深似海条条大路转cs"><a class="markdownIt-Anchor" href="#一入ee深似海条条大路转cs"></a> 一入EE深似海，条条大路转CS</h2><p>你电的专业设置非常繁杂，吹的天花乱坠，但是我觉得可以全砍了（尤其是什么光电、生医，国内既没有足够的工作岗位，也不像数学那样出来转行也不会太废），就把工科的本科设置并成EE/CS。当然了，现在EE八成也是打算转CS的（10年前并不是这样，通信很火，土木很火，计算机冷淡，搞计算机视觉和自然语言处理就业惨淡）<br />没办法，16年后成都房价经历了限购等几波上涨，留给大家的选择不多了，要恰饭的嘛<br />（家里有矿请随意）<br />我知道很多同学心怀梦想，但是四年后基本都出国/读研/考公、教师</p><h2 id="上课"><a class="markdownIt-Anchor" href="#上课"></a> 上课</h2><h3 id="学会水课"><a class="markdownIt-Anchor" href="#学会水课"></a> 学会水课</h3><blockquote><p><strong>天变不足惧，人言不足恤，祖宗之法不足守</strong></p></blockquote><p>你电有很多课，就是在拿着N年以前的课本/PPT浪费学生的生命。<sup id="fnref:1"><a href="#fn:1" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="不是说N年前的书不好，奥本海姆的信号与系统、高德纳的计算机程序设计艺术、k&r的C程序设计语言、TCP/IP协议、朗道、铃木雅臣的模电，都是经典的好书。但是你电的EE/CS行业基本都变化很快，N年前的书基本落后工业界至少N+5年了，而很多变化很快的选修课恰恰喜欢用N年不改的教材（很多还是本校老师自编的垃圾教材）。而且你电不少课本的质量就算没落伍也不比谭某人强（尤其是那些什么电子科大出版社、科学出版社的自编教材），你看多了这种书基本就废了。">[1]</span></a></sup>要是真傻不拉几地上课跟着老师听，三年时间基本就废了<br />另外，你电很多老师的水平（这里仅仅指教的课相关领域水平），并不比学完这门课的你高</p><p>当你很喜欢一门选修课/老师但是给分低/考试难，不选，旁听</p><p>当你遇到一门水课，水</p><p>当你遇到一门课不水，但是对你没用/老师不好，水</p><p>当你遇到一门课不水，老师挺好，但是对你以后工作/出国没用，水</p><h3 id="c语言"><a class="markdownIt-Anchor" href="#c语言"></a> C语言</h3><p>大一大多数学院都要学C语言，但是基本都用的谭浩强（计院用的自编教材，约等于魔改版谭浩强；格院用的C Primer Plus）。大部分任课老师的水平嘛，你懂的。我大一还在用VC6，不知现在怎样了，貌似已经换成vs2010那些，完 美 对 标 计 算 机 二 级。</p><p>如果搞硬件，C51、stm32、其他的嵌入式板子，C是很重要的，以后就算转软，学好C打底也是很重要的。但是大多数老师只讲些语法和循环以及<ins><ins>i</ins></ins>之类的鬼才操作，指针啊内存啊都不好好讲的（也可能是课时太少，来不及讲）</p><p>下面这些是我班主任c老师（<s>什么？班主任？别问我为什么你电一所大学居然还有班主任，你电就是这么没天理，忍了吧</s>）班会的时候说他要教大一C语言了，问我有什么建议，我就写了下面这些给他。额，偶滴班主任是搞生物心理学实验之类的，也做过一点脑电采集电路，可能10年没自己写过C了，水平你懂的。对了，他上学期还被强行指派去教一门Unix操作系统的课，他之前还给我们上过精密仪器和生物心理学实验；水平嘛，嗯，这水平问题好像也不怪他。（<s>什么？他为什么要教这么多课？没办法，他是苦逼的讲师，那些大教授忙于捞钱，又不愿意给我们上课。虽然学校规定教授必须上课，实际上嘛，比如某y院长，挂个名，扔给别的老师</s>）</p><p>扯多了，下面是当时应班主任邀请写给大一新生的建议。<br />老师很虚心听取建议的，我还是成功劝退了你电SM学院一半新生使用谭浩强和VS2010，改用k&amp;r，善哉，善哉。<br />(教材质量赶超计院和格院一刚！)</p><h4 id="书籍推荐"><a class="markdownIt-Anchor" href="#书籍推荐"></a> 书籍推荐</h4><h5 id="c程序设计语言"><a class="markdownIt-Anchor" href="#c程序设计语言"></a> 《C程序设计语言》</h5><p>The C Programming Language, C语言之父写的，豆瓣和亚马逊评分最高的一本。习题也很经典, 有一本配套的习题解答。github上也有很多习题解答，比如<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2NjcGFsZXR0ZXMvdGhlLWMtcHJvZ3JhbW1pbmctbGFuZ3VhZ2Utc2Vjb25kLWVkaXRpb24tc29sdXRpb25z" title="https://github.com/ccpalettes/the-c-programming-language-second-edition-solutions">ccpalettes/the-c-programming-language-second-edition-solutions<i class="fa fa-external-link"></i></span></p><h5 id="c-primer-plus"><a class="markdownIt-Anchor" href="#c-primer-plus"></a> <span class="exturl" data-url="aHR0cHM6Ly9ib29rLmRvdWJhbi5jb20vc3ViamVjdC8xMjQwMDAyLw==" title="https://book.douban.com/subject/1240002/">C Primer Plus<i class="fa fa-external-link"></i></span></h5><p>格拉斯哥学院在用的教材，但是非常详细（啰嗦）</p><h5 id="c语言入门更简单的书籍"><a class="markdownIt-Anchor" href="#c语言入门更简单的书籍"></a> <span class="exturl" data-url="aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8xOTY5NDgyMw==" title="https://zhuanlan.zhihu.com/p/19694823">C语言入门更简单的书籍<i class="fa fa-external-link"></i></span></h5><p>这个文章里有适合入门的几本书,比k&amp;r那本更简单一点</p><h5 id="c专家编程-c陷阱与指针等"><a class="markdownIt-Anchor" href="#c专家编程-c陷阱与指针等"></a> C专家编程、C陷阱与指针等</h5><p>适合进阶阅读，大一课多</p><h5 id="如果还是要用谭浩强"><a class="markdownIt-Anchor" href="#如果还是要用谭浩强"></a> 如果还是要用谭浩强</h5><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL21hcnRpbnd1NDIvZmstdGhx" title="https://github.com/martinwu42/fk-thq">https://github.com/martinwu42/fk-thq<i class="fa fa-external-link"></i></span></p><p>哪本书好这种问题, 我建议去图书馆翻一下看看,不同人适合不同风格,找一本适合自己的</p><h4 id="编程环境"><a class="markdownIt-Anchor" href="#编程环境"></a> 编程环境</h4><p>这种问题见仁见智,一般有IDE（integrated development enviroment）和命令行记事本两种选择。只是上课IDE就够了，真想学好c，建议类unix环境下学习，linux/wsl+命令行+vim/VScode，IDE虽好，不要过于依赖<span class="exturl" data-url="aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC81NDE2OTgyNw==" title="https://zhuanlan.zhihu.com/p/54169827">什么都帮你做了一键运行会让你忽略很多底层的东西<i class="fa fa-external-link"></i></span></p><p>学习c语言的时候参照官方通用的c99/c98/c11标准, 差别也不太大,编译器的选择clang或gcc都行,对于初学者而言初学者较少涉及系统和底层,差别也不大(clang可能对初学者更友好些)</p><h5 id="vs2010-vc2010"><a class="markdownIt-Anchor" href="#vs2010-vc2010"></a> vs2010、vc2010</h5><p>成电计算机学院上机考试用的vs2010，c语言计算机二级考试用的vc2010。<br />但是作为ide，现在（2019年）非常古老，功能远不如vs2019。而且正版是收费的。<br />(虽然有破解版，但这两个老软件在win7和win10上兼容问题非常多。)</p><h5 id="codeblocks"><a class="markdownIt-Anchor" href="#codeblocks"></a> codeblocks</h5><p>vs系列都过于臃肿，初学者只是学个c语言用这个几乎就是杀鸡用牛刀，<strong>codeblocks</strong>是非常好的一款开源IDE。不少ACM选手都用这个,很多人刷leetcode也用这个。配置省心，功能够用，简单粗暴，还免费，支持标准的c/c++语法。（唯一的缺点就是丑）最适合不想在配置和新建工程以及兼容问题上折腾的初学者。<strong>c-free</strong> 也行。</p><h5 id="vscode"><a class="markdownIt-Anchor" href="#vscode"></a> VSCode</h5><p>这几年很火的微软家开源编辑器<strong>VSCode</strong>，是<em>宇宙第一IDE的亲儿子</em>，颜值比codoblock和vc6.0高到不知哪里去了，虽然本质还是个atom那样的notepad，但配置也不麻烦，装个插件也能像IDE那样一键运行(不过还是推荐你试试命令行)。这种现代编辑器比vim对新手有好多了</p><h5 id="vs2019vs2017vs2015"><a class="markdownIt-Anchor" href="#vs2019vs2017vs2015"></a> vs2019/vs2017/vs2015</h5><p>微软家的<em>宇宙第一IDE</em>，不多解释。而且vs2017 community版免费，功能完全够初学者使用。一个问题是臃肿（也就十几个G吧），另一个问题是<em>vs2017以后不完全支持c99</em>，配置起来很麻烦，不建议c语言初学者使用,适合c<ins>开发！（*不写上万行的c</ins>项目就别用宇宙第一IDE了*）</p><h5 id="clion"><a class="markdownIt-Anchor" href="#clion"></a> clion</h5><p>Mac和16G以上内存win/linux系统下强烈推荐clang+<strong>clion</strong>，Jetbrains全家桶真香，有教育优惠，学生免费。跟微软的vs不相上下，而且对c的支持非常好!<br />但是很吃内存，配置不好就别用了</p><h5 id="vim"><a class="markdownIt-Anchor" href="#vim"></a> vim</h5><p>clang/gcc/mingw + 命令行 + VSCode/sublime/notepad++ /vim喜爱折腾的同学可以尝试.跨平台开发请试试cmake</p><h4 id="其他"><a class="markdownIt-Anchor" href="#其他"></a> 其他</h4><p>多动手, 多调试, 不会问谷歌, 编程要多练习,不然会变成<span class="exturl" data-url="aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzMyNjU2MjExMy9hbnN3ZXIvNzE0MDMzNzk4" title="https://www.zhihu.com/question/326562113/answer/714033798">计算机报告文学<i class="fa fa-external-link"></i></span></p><h3 id="高树大雾"><a class="markdownIt-Anchor" href="#高树大雾"></a> 高树大雾</h3><p>你可能从学长那里听说过杨物运动的传说，不过现在杨物运动已经彻底流产了。<br />现在高数大物的难度几乎越来越水，电分和模电也越来越水（17级貌似都直接合并了）</p><h3 id="思修马原毛概军理形势与政策"><a class="markdownIt-Anchor" href="#思修马原毛概军理形势与政策"></a> 思修马原毛概军理形势与政策</h3><p>从17年开始加大力度，改为了闭卷，然而问题不大（你要是遇上侯伦广当我没说），上课不用听，期末会划一点重点，搞到往年的题刷一下，原题很多</p><h3 id="通识课程"><a class="markdownIt-Anchor" href="#通识课程"></a> 通识课程</h3><p>个人认为是L校长的一大败笔，全员水课<br />核心通识交叉通识是要计入保研和GPA的，这就导致了素质教育和刷分不可调和的矛盾。水课大受欢迎，硬课无人问津甚至因为选课人数过少停课。</p><h3 id="未完待续等待填坑"><a class="markdownIt-Anchor" href="#未完待续等待填坑"></a> 未完待续，等待填坑</h3><h2 id="注意安全"><a class="markdownIt-Anchor" href="#注意安全"></a> 注意安全</h2><h3 id="流浪猫狗"><a class="markdownIt-Anchor" href="#流浪猫狗"></a> 流浪猫狗</h3><p>你电不负责任的猫奴狗奴小动保还是很多的，流浪猫狗也是很多的。保卫处也是并不怎么负责仁的，大家自求多福。下面引用一段helaso的话：</p><blockquote><p>学姐昨天去银桦在门口被狗追，那疯狗追上去用嘴擦到了一下。虽然没流血还是建议学姐去打狂犬疫苗了，也联系了保卫处。今天好了，4只流浪狗在组团门口耍。<br />打电话给保卫处，他们说最近爱狗人士多不能打狗？？？<br />是不是保卫处领导学辅导员和稀泥上瘾了？<br />在此我要推荐一款异烟肼神药给保卫处大爷，对人几乎无毒，肺结核病人的救命药，塞到香肠里一两片就能搞死一只狗。早上趁圣母婊学生还没起床让阿姨扫地时撒，晚上天色一暗就能让阿姨收尸了。铁棍打狗还不带枪那是lowb才用的方法了，俄罗斯之前肃清流浪狗就在街上狂撒这药。<br />保卫处大爷再护着狗爹迟早会有学生被咬出重伤，到时知乎热门等着瞧。</p></blockquote><h3 id="食堂"><a class="markdownIt-Anchor" href="#食堂"></a> 食堂</h3><p>腐败变质的食品很多（早上的包子、饼），还有烟头假牙钢丝球瓷砖大礼包随机放送。如果你去学子一楼，恭喜你，拉肚子几率加倍。</p><h2 id="注"><a class="markdownIt-Anchor" href="#注"></a> 注</h2><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">不是说N年前的书不好，奥本海姆的信号与系统、高德纳的计算机程序设计艺术、k&amp;r的C程序设计语言、TCP/IP协议、朗道、铃木雅臣的模电，都是经典的好书。但是你电的EE/CS行业基本都变化很快，N年前的书基本落后工业界至少N+5年了，而很多变化很快的选修课恰恰喜欢用N年不改的教材（很多还是本校老师自编的垃圾教材）。而且你电不少课本的质量就算没落伍也不比谭某人强（尤其是那些什么电子科大出版社、科学出版社的自编教材），你看多了这种书基本就废了。<a href="#fnref:1" rev="footnote"> ↩</a></span></li></ol></div></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;你说我一个渣渣，硬件不精，软件不熟，边缘学院，劝退专业，没有国奖，没有论文，现在刚大四保完研都还没毕业，怎么就有脸来写生存指南了呢？&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="你电" scheme="https://zhangjk98.xyz/tags/%E4%BD%A0%E7%94%B5/"/>
    
  </entry>
  
  <entry>
    <title>MySQL从入门到跑路</title>
    <link href="https://zhangjk98.xyz/45b9/"/>
    <id>https://zhangjk98.xyz/45b9/</id>
    <published>2019-11-01T09:09:46.000Z</published>
    <updated>2020-01-30T13:19:15.462Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>用了这么久数据库，现在还只会增删查改，开个坑学学优化。</p><a id="more"></a><p>等待填坑</p><p>看到clickhouse的速度很快，有空看一下</p><h2 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h2><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2RiY2xpL215Y2xp" title="https://github.com/dbcli/mycli">mycli<i class="fa fa-external-link"></i></span> MySQL的cli工具，能高亮和自动补全</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;用了这么久数据库，现在还只会增删查改，开个坑学学优化。&lt;/p&gt;
    
    </summary>
    
    
      <category term="笔记" scheme="https://zhangjk98.xyz/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="MySQL" scheme="https://zhangjk98.xyz/tags/MySQL/"/>
    
      <category term="Database" scheme="https://zhangjk98.xyz/tags/Database/"/>
    
  </entry>
  
  <entry>
    <title>λ演算&amp;函数式编程</title>
    <link href="https://zhangjk98.xyz/a10f/"/>
    <id>https://zhangjk98.xyz/a10f/</id>
    <published>2019-10-29T13:59:33.000Z</published>
    <updated>2020-01-30T13:19:15.509Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>等待填坑</p><a id="more"></a><h2 id="摸鱼一时爽"><a class="markdownIt-Anchor" href="#摸鱼一时爽"></a> 摸鱼一时爽</h2><p>函数式编程(Functional Programming)好像比面向对象抽象程度更高。但是之前折腾硬件的时候都没有用到过，可能是不太适合处理IO接口和操作时序吧。<br />之前在图书馆乱翻，看到一本七周七语言的书，翻到函数式，感觉还挺有意思，教研室的摸鱼生活就搞点这个吧，反正干正事是不可能干正事的<br />正在进JavaScript的坑，将就着用js来练练手吧。</p><h2 id="λ演算λ-calculus"><a class="markdownIt-Anchor" href="#λ演算λ-calculus"></a> λ演算(λ-calculus)</h2><ul><li>是匿名的</li><li>只有一个输入</li></ul><p>多输入的函数要转成多个只有一个输入的函数的嵌套调用，也就是柯里化（currying）</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>λ</mi></mrow><annotation encoding="application/x-tex">\lambda</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">λ</span></span></span></span>项</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;等待填坑&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="λ-calcus" scheme="https://zhangjk98.xyz/tags/%CE%BB-calcus/"/>
    
      <category term="js" scheme="https://zhangjk98.xyz/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>Docker笔记</title>
    <link href="https://zhangjk98.xyz/69d4/"/>
    <id>https://zhangjk98.xyz/69d4/</id>
    <published>2019-10-18T13:31:55.000Z</published>
    <updated>2020-01-30T13:19:15.444Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>开始折腾Docker，等待填坑</p><a id="more"></a><p>容器化好像挺有意思，开始学学（指照着网上教程乱用<sup id="fnref:1"><a href="#fn:1" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="[Docker从入门到实践](https://yeasy.gitbooks.io/docker_practice/)">[1]</span></a></sup>）。<br />VPS(Virtual Private Server)用的就是虚拟化技术，Docker比各种虚拟机、云服务虚拟程度低。大概相当于一个沙盒？一般用来打包安装环境，这样部署方便一些。（有很多安装脚本，但是CentOS、Ubuntu、Debian经常不一样，打成Docker image，就可以通用了）。Docker还带一层隔离，大概相当于加强版的chroot（并没有隔离硬件）</p><p>Docker好像还可以套娃，Docker里面跑Docker</p><h2 id="win10下使用docker"><a class="markdownIt-Anchor" href="#win10下使用docker"></a> win10下使用Docker</h2><p>下载Docker Desktop，安装，重启。打开hyper-v，进BIOS开启虚拟化，重启。<br />一般这样就直接装好了，看到小鲸鱼，试一下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run hello-world</span><br></pre></td></tr></table></figure><p>更换镜像源，你电的镜像源还没有安排上，这里先用<span class="exturl" data-url="aHR0cHM6Ly9sdWcudXN0Yy5lZHUuY24vd2lraS9taXJyb3JzL2hlbHAvZG9ja2Vy" title="https://lug.ustc.edu.cn/wiki/mirrors/help/docker">中科大的<i class="fa fa-external-link"></i></span>好了，在<code>C:\ProgramData\Docker</code>新建一个config\daemon.json</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"registry-mirrors"</span>: [<span class="string">"https://docker.mirrors.ustc.edu.cn"</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后就可以获取镜像了</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull [选项] [Docker Registry 地址[:端口号]/]仓库名[:标签]</span><br></pre></td></tr></table></figure><p>用<code>docker ps</code>查看容器，用<code>Docker run</code>运行，<code>docker logs</code>查看日志。<br />这里推荐使用VSCode Docker插件和Docker Compose插件<br />记得在设置里打开Expose daemon on tcp://localhost:2375 without TLS</p><h3 id="wsl下使用docker"><a class="markdownIt-Anchor" href="#wsl下使用docker"></a> wsl下使用Docker</h3><p>在官网上看到了Docker for wsl2，等待填坑。(虽然我现在直接强行apt装了)<br />（家庭版貌似并不可以，要专业版）</p><h2 id="linux下的docker"><a class="markdownIt-Anchor" href="#linux下的docker"></a> Linux下的Docker</h2><p>一定要先启动, 不然有可能<code>Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service docker start</span><br></pre></td></tr></table></figure><p>使用<code>docker exec -it XXXXXX bash</code>进入容器的命令界面，输入exit退出</p><p>同步Docker容器和宿主机的时间：<code>docker cp /etc/localtime &lt;container id&gt;:/etc/localtime</code></p><p>加当前用户到用户组里面</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gpasswd -a <span class="variable">$&#123;USER&#125;</span> docker</span><br></pre></td></tr></table></figure><h2 id="docker-compose-部署"><a class="markdownIt-Anchor" href="#docker-compose-部署"></a> Docker Compose 部署</h2><p>当部署多个Docker容器，它们之间还有关联的时候，就用Compose代替Docker run，比如师兄Flask写的标注工具，就是前后端分别一个Docker容器</p><p>运行：<code>docker-compose up</code>自动创建</p><h2 id="docker镜像"><a class="markdownIt-Anchor" href="#docker镜像"></a> Docker镜像</h2><p>Docker镜像（image）也是一堆文件，可以自己建或者从远程pull别人建好的<br />有了Docker镜像，再写好Dockerfile就可以跑起来了（跑起来之后就是个容器container）</p><h2 id="dockerfile"><a class="markdownIt-Anchor" href="#dockerfile"></a> Dockerfile</h2><p>大概相当于一个脚本之类的东西，填写好之后启动会根据文件里面的配置逐步执行</p><h2 id="常用命令"><a class="markdownIt-Anchor" href="#常用命令"></a> 常用命令</h2><table><thead><tr><th>Command</th><th>功能</th></tr></thead><tbody><tr><td>Docker build</td><td>创建镜像</td></tr><tr><td>Docker create</td><td>创建镜像（并不启动）</td></tr><tr><td>Docker exec</td><td>在Docker里面执行命令</td></tr><tr><td>Docker images</td><td>查看镜像</td></tr><tr><td>Docker pull/push</td><td>下载/上传镜像</td></tr><tr><td>Docker rm/rmi</td><td>删除容器/镜像</td></tr><tr><td>Docker export/import</td><td>导出导入容器</td></tr><tr><td>Docker import/load</td><td>导出导入镜像</td></tr><tr><td>Docker start/stop/restart/pause/unpause/kill</td><td>略</td></tr></tbody></table><h2 id="报错"><a class="markdownIt-Anchor" href="#报错"></a> 报错</h2><p><code>Failed to enable unit: Unit file /etc/systemd/system/docker.service is masked.</code></p><p>执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl unmask docker.service</span><br><span class="line">systemctl unmask docker.socket</span><br><span class="line">systemctl start docker.service</span><br></pre></td></tr></table></figure><p>出现 <code>Job for docker.service failed because the control process exited with error code. See &quot;systemctl status docker.service&quot; and &quot;journalctl -xe&quot; for details.</code></p><p>出现<code>Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?</code></p><p>出现<code>systemd[1]: Failed to start LSB: Create lightweight, portable, self-sufficie</code></p><p>Docker pull出现<code>Error response from daemon: Get https://registry-1.docker.io/v2/: dial tcp 34.201.196.144:443: connect: connection refused</code></p><p>是镜像源或者DNS的问题，参照这里<sup id="fnref:2"><a href="#fn:2" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="[镜像加速器](https://yeasy.gitbooks.io/docker_practice/install/mirror.html)">[2]</span></a></sup>改了。（阿里的和中科大的我这网根本不稳，建议换华为的）</p><p>出现<code>pkg_resources.DistributionNotFound: The 'docker-compose==1.8.0' distribution was not found and is required by the application</code></p><p>想用Docker-compose结果报了一堆python的错</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;bin&#x2F;docker-compose&quot;, line 5, in &lt;module&gt;</span><br><span class="line">    from pkg_resources import load_entry_point</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;lib&#x2F;python3&#x2F;dist-packages&#x2F;pkg_resources&#x2F;__init__.py&quot;, line 2927, in &lt;module&gt;</span><br><span class="line">    @_call_aside</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;lib&#x2F;python3&#x2F;dist-packages&#x2F;pkg_resources&#x2F;__init__.py&quot;, line 2913, in _call_aside</span><br><span class="line">    f(*args, **kwargs)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;lib&#x2F;python3&#x2F;dist-packages&#x2F;pkg_resources&#x2F;__init__.py&quot;, line 2940, in _initialize_master_working_set</span><br><span class="line">    working_set &#x3D; WorkingSet._build_master()</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;lib&#x2F;python3&#x2F;dist-packages&#x2F;pkg_resources&#x2F;__init__.py&quot;, line 635, in _build_master</span><br><span class="line">    ws.require(__requires__)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;lib&#x2F;python3&#x2F;dist-packages&#x2F;pkg_resources&#x2F;__init__.py&quot;, line 943, in require</span><br><span class="line">    needed &#x3D; self.resolve(parse_requirements(requirements))</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;lib&#x2F;python3&#x2F;dist-packages&#x2F;pkg_resources&#x2F;__init__.py&quot;, line 829, in resolve</span><br><span class="line">    raise DistributionNotFound(req, requirers)</span><br><span class="line">pkg_resources.DistributionNotFound: The &#39;docker-compose&#x3D;&#x3D;1.8.0&#39; distribution was not found and is required by the application</span><br></pre></td></tr></table></figure><p>看到网上的解决方案说</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install backports.ssl_match_hostname --upgrade</span><br></pre></td></tr></table></figure><p>结果pip3居然又报错了了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">pip is configured with locations that require TLS&#x2F;SSL, however the ssl module in Python is not available.</span><br><span class="line">Collecting backports.ssl_match_hostname</span><br><span class="line">  Retrying (Retry(total&#x3D;4, connect&#x3D;None, read&#x3D;None, redirect&#x3D;None, status&#x3D;None)) after connection broken by &#39;SSLError(&quot;Can&#39;t connect to HTTPS URL because the SSL module is not available.&quot;,)&#39;: &#x2F;simple&#x2F;backports-ssl-match-hostname&#x2F;</span><br><span class="line">  Retrying (Retry(total&#x3D;3, connect&#x3D;None, read&#x3D;None, redirect&#x3D;None, status&#x3D;None)) after connection broken by &#39;SSLError(&quot;Can&#39;t connect to HTTPS URL because the SSL module is not available.&quot;,)&#39;: &#x2F;simple&#x2F;backports-ssl-match-hostname&#x2F;</span><br><span class="line">  Retrying (Retry(total&#x3D;2, connect&#x3D;None, read&#x3D;None, redirect&#x3D;None, status&#x3D;None)) after connection broken by &#39;SSLError(&quot;Can&#39;t connect to HTTPS URL because the SSL module is not available.&quot;,)&#39;: &#x2F;simple&#x2F;backports-ssl-match-hostname&#x2F;</span><br><span class="line">  Retrying (Retry(total&#x3D;1, connect&#x3D;None, read&#x3D;None, redirect&#x3D;None, status&#x3D;None)) after connection broken by &#39;SSLError(&quot;Can&#39;t connect to HTTPS URL because the SSL module is not available.&quot;,)&#39;: &#x2F;simple&#x2F;backports-ssl-match-hostname&#x2F;</span><br></pre></td></tr></table></figure><p>哇，又是SSL证书的问题</p><p>参照<span class="exturl" data-url="aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvNDU5NTQ1MjgvcGlwLWlzLWNvbmZpZ3VyZWQtd2l0aC1sb2NhdGlvbnMtdGhhdC1yZXF1aXJlLXRscy1zc2wtaG93ZXZlci10aGUtc3NsLW1vZHVsZS1pbg==" title="https://stackoverflow.com/questions/45954528/pip-is-configured-with-locations-that-require-tls-ssl-however-the-ssl-module-in">stackoverflow的解决方案<i class="fa fa-external-link"></i></span></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo -s</span><br><span class="line"></span><br><span class="line">apt install libssl-dev libncurses5-dev libsqlite3-dev libreadline-dev libtk8.5 libgdm-dev libdb4o-cil-dev libpcap-dev</span><br></pre></td></tr></table></figure><p>切到<code>the folder with the Python 3.X library source code</code>，一般在<code>/usr/local/bin</code>底下的python文件夹<br />运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>依然不行<br />怀疑是SSL证书的问题，curl使用ssl也报错<br />但是openssl、libssl-dev都装了的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install ca-certificates</span><br></pre></td></tr></table></figure><p>证书没过期</p><p>又运行了一下openssh居然报错connect:errno=111</p><p>查了一下</p><blockquote><p>This has nothing to do with SSL. Connection refused means that either there is no server or the connection is blocked by firewall. In your case (before your edit) the server is also plain wrong, i.e. “:443” is no valid server name (hostname missing).</p></blockquote><p>难道就是防火墙的问题吗？</p><p>查看了一下网络状态</p><p>没问题的工作站<br />tcp        0      0 211.83.111.221:40294    211.83.111.224:443      ESTABLISHED 1825/telnet<br />有问题的服务器<br />tcp6       0      0 :::443                  ::😗                    LISTEN      101411/apache2<br />tcp6       0      0 211.83.111.224:443      211.83.111.221:40294    ESTABLISHED 101415/apache2</p><p>难道学校的ipv6又炸了？</p><p>试试<code>nc -l 443</code></p><p>emmm，被占用了</p><p>不对，我傻逼了，这是对外的端口啊。。。。</p><p>等吧</p><p><strong>更新</strong>是网费没了没充钱的问题…<br />老蔡师兄不是校内的网连不上也是没充钱学校网管给断外网了…<br />前几天那个Ubuntu Desktop的工作站最近也没钱了，但是http在终端可以用，镜像源什么的也能连，但是那个浏览器一打开就提示我登录账号。<br />突然意识到了不对，怀疑服务器的网也没钱了。<br />其实之前一直怀疑是被制裁了，但是工作站就是好的，才一直以为是SSL证书之类的问题<br />充钱之后，神奇的都能用了<br />看来是http神奇的逃脱了没钱的制裁<br />行吧，在这里排查了四五天，期间还重装过好几次Ubuntu Server<br />果然还是得充钱啊</p><img data-src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/jiaqian.png" alt="Picture" style="zoom:60%;" /><h2 id="离线装docker镜像"><a class="markdownIt-Anchor" href="#离线装docker镜像"></a> 离线装Docker镜像</h2><p>教研室服务器的网一直出问题<br />决定离线搞Docker镜像<br />发现Docker有离线的方法，就是直接在别的机子上pull，然后</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker save -o mysql.tar mysql</span><br></pre></td></tr></table></figure><p>把生成的tar文件拷到服务器上</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker load -i  mysql.tar</span><br></pre></td></tr></table></figure><h2 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h2><h2 id="再看docker"><a class="markdownIt-Anchor" href="#再看docker"></a> 再看Docker</h2><p>被人骗入坑Docker，甚至教研室服务器上基本全是Docker跑的一个个容器，甚至MySQL都是跑在Docker上的</p><p><span class="exturl" data-url="aHR0cDovL2RvY2tvbmUuaW8vYXJ0aWNsZS82NjA=" title="http://dockone.io/article/660">http://dockone.io/article/660<i class="fa fa-external-link"></i></span><br /><span class="exturl" data-url="aHR0cHM6Ly9qaW1teXNvbmcuaW8vZG9ja2VyLWhhbmRib29rLw==" title="https://jimmysong.io/docker-handbook/">https://jimmysong.io/docker-handbook/<i class="fa fa-external-link"></i></span><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><span class="exturl" data-url="aHR0cHM6Ly95ZWFzeS5naXRib29rcy5pby9kb2NrZXJfcHJhY3RpY2Uv" title="https://yeasy.gitbooks.io/docker_practice/">Docker从入门到实践<i class="fa fa-external-link"></i></span><a href="#fnref:1" rev="footnote"> ↩</a></span></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">2.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><span class="exturl" data-url="aHR0cHM6Ly95ZWFzeS5naXRib29rcy5pby9kb2NrZXJfcHJhY3RpY2UvaW5zdGFsbC9taXJyb3IuaHRtbA==" title="https://yeasy.gitbooks.io/docker_practice/install/mirror.html">镜像加速器<i class="fa fa-external-link"></i></span><a href="#fnref:2" rev="footnote"> ↩</a></span></li></ol></div></div></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;开始折腾Docker，等待填坑&lt;/p&gt;
    
    </summary>
    
    
      <category term="笔记" scheme="https://zhangjk98.xyz/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Docker" scheme="https://zhangjk98.xyz/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>推荐系统笔记</title>
    <link href="https://zhangjk98.xyz/bccd/"/>
    <id>https://zhangjk98.xyz/bccd/</id>
    <published>2019-10-18T01:52:43.000Z</published>
    <updated>2020-01-30T13:19:15.511Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>等待填坑</p><a id="more"></a><p>大概分为用户建模模块、推荐对象建模模块、推荐算法模块</p><h2 id="主要算法"><a class="markdownIt-Anchor" href="#主要算法"></a> 主要算法</h2><h3 id="协同过滤算法"><a class="markdownIt-Anchor" href="#协同过滤算法"></a> 协同过滤算法</h3><p>最老最经典的一个算法了，大概是给用户推荐兴趣和关注点相似用户的感兴趣内容。</p><p>协同过滤有基于领域的方法(neighborhood methods)和隐语义模型(latent factor models)，基于图的随机游走算法(random walk on graph)<br />下面两个是基于邻域的方法：</p><h4 id="基于物品的协同过滤"><a class="markdownIt-Anchor" href="#基于物品的协同过滤"></a> 基于物品的协同过滤</h4><p>（item-based collaborative filtering，ItemCF）<br />找到物品之间的属性关联，向用户推荐属性相似的物品<br />设N(i)是喜欢i物品的用户数<br />相似度：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>=</mo><mfrac><mrow><mi mathvariant="normal">∣</mi><mi>N</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo><mo>∩</mo><mi>N</mi><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi></mrow><mrow><mi mathvariant="normal">∣</mi><mi>N</mi><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">w_{ij}=\frac{|N(i)\cap N(j)|}{|N(j)|}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mord">∣</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mord">∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>避免热门物品干扰，改为</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>=</mo><mfrac><mrow><mi mathvariant="normal">∣</mi><mi>N</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo><mo>∩</mo><mi>N</mi><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi></mrow><msqrt><mrow><mi mathvariant="normal">∣</mi><mi>N</mi><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>N</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi></mrow></msqrt></mfrac></mrow><annotation encoding="application/x-tex">w_{ij}=\frac{|N(i)\cap N(j)|}{\sqrt{|N(j)||N(i)|}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.557em;vertical-align:-1.13em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.175em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.935em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mord">∣</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mclose">)</span><span class="mord">∣</span></span></span><span style="top:-2.8950000000000005em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z M1001 80H40000v40H1012z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.30499999999999994em;"><span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mord">∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.13em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><h4 id="基于用户的协同过滤"><a class="markdownIt-Anchor" href="#基于用户的协同过滤"></a> 基于用户的协同过滤</h4><p>（User-based collaborative filtering，UserCF）<br />找到和用户相似的其他用户，将其他用户感兴趣的产品推荐给用户。还有一种是“购买过XXX等用户也XXX”，算是这个方法的一个变种</p><p>计算相似度，N(u)是用户正反馈的集合，N(v)是用户负反馈物品的集合<br />Jaccard相似度：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mrow><mi>u</mi><mo separator="true">,</mo><mi>v</mi></mrow></msub><mo>=</mo><mfrac><mrow><mi mathvariant="normal">∣</mi><mi>N</mi><mo stretchy="false">(</mo><mi>u</mi><mo stretchy="false">)</mo><mo>∩</mo><mi>N</mi><mo stretchy="false">(</mo><mi>v</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi></mrow><mrow><mi mathvariant="normal">∣</mi><mi>N</mi><mo stretchy="false">(</mo><mi>u</mi><mo stretchy="false">)</mo><mo>∪</mo><mi>N</mi><mo stretchy="false">(</mo><mi>v</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">w_{u,v}= \frac{|N(u)\cap N(v)|}{|N(u)\cup N(v)|}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">u</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mord">∣</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mord">∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>余弦相似度：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mrow><mi>u</mi><mo separator="true">,</mo><mi>v</mi></mrow></msub><mo>=</mo><mfrac><mrow><mi mathvariant="normal">∣</mi><mi>N</mi><mo stretchy="false">(</mo><mi>u</mi><mo stretchy="false">)</mo><mo>∩</mo><mi>N</mi><mo stretchy="false">(</mo><mi>v</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi></mrow><msqrt><mrow><mi mathvariant="normal">∣</mi><mi>N</mi><mo stretchy="false">(</mo><mi>u</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>N</mi><mo stretchy="false">(</mo><mi>v</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi></mrow></msqrt></mfrac></mrow><annotation encoding="application/x-tex">w_{u,v}= \frac{|N(u)\cap N(v)|}{\sqrt{|N(u)||N(v)|}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">u</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.557em;vertical-align:-1.13em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.175em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.935em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mclose">)</span><span class="mord">∣</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mord">∣</span></span></span><span style="top:-2.8950000000000005em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z M1001 80H40000v40H1012z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.30499999999999994em;"><span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mord">∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.13em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><h2 id="冷启动问题"><a class="markdownIt-Anchor" href="#冷启动问题"></a> 冷启动问题</h2><p>等待填坑，利用用户注册信息，人工标注等</p><h2 id="大众行为个性化推荐"><a class="markdownIt-Anchor" href="#大众行为个性化推荐"></a> 大众行为/个性化推荐</h2><p>等待填坑</p><h2 id="imdb电影评论推荐例子"><a class="markdownIt-Anchor" href="#imdb电影评论推荐例子"></a> imdb电影评论推荐例子</h2><p>这里使用<span class="exturl" data-url="aHR0cDovL2ZpbGVzLmdyb3VwbGVucy5vcmcvZGF0YXNldHMvbW92aWVsZW5zLw==" title="http://files.grouplens.org/datasets/movielens/">movielens数据集<i class="fa fa-external-link"></i></span>，<br />数据集的rating.csv包括用户id，物品id，评分，评论时间。(这个csv文件第一行是userid，movieid，·····，把第一行直接删掉或者从第二行开始读取，不然会报TypeError: unsupported operand type(s) for -: ‘str’ and 'int’的错)<br />使用的算法是SVD矩阵分解。构建一个用户-物品矩阵，每一项的值是评分，这是一个极其稀疏的矩阵<br />我们导入数据集并分割：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">header = [<span class="string">'user_id'</span>, <span class="string">'item_id'</span>, <span class="string">'rating'</span>, <span class="string">'timestamp'</span>]  <span class="comment"># 用户id，物品id，评分，评论时间</span></span><br><span class="line"></span><br><span class="line">df = pd.read_csv(<span class="string">'../data/u.data'</span>, sep=<span class="string">'\t'</span>, names=header)</span><br><span class="line">n_users = df.user_id.unique().shape[<span class="number">0</span>]  <span class="comment">#用户数量</span></span><br><span class="line">n_items = df.item_id.unique().shape[<span class="number">0</span>]  <span class="comment">#物品数量</span></span><br><span class="line">print(<span class="string">'Number of users = '</span> + str(n_users) + <span class="string">' | Number of movies = '</span> + str(n_items))</span><br><span class="line"><span class="comment"># 数据集分割——训练集：测试集 = 3:1</span></span><br><span class="line">train_data,test_data = train_test_split(df, test_size = <span class="number">0.25</span>)</span><br></pre></td></tr></table></figure><p>建立评分矩阵</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">train_data_matrix = np.zeros((n_users, n_items))</span><br><span class="line">test_data_matrix = np.zeros((n_users, n_items))</span><br><span class="line"><span class="comment">#使用 pandas 遍历行数据</span></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> train_data.itertuples():</span><br><span class="line">    <span class="comment">#训练集评分矩阵</span></span><br><span class="line">    train_data_matrix[line[<span class="number">1</span>]<span class="number">-1</span>, line[<span class="number">2</span>]<span class="number">-1</span>] = line[<span class="number">3</span>]</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> test_data.itertuples():</span><br><span class="line">    <span class="comment">#测试集评分矩阵</span></span><br><span class="line">    test_data_matrix[line[<span class="number">1</span>]<span class="number">-1</span>, line[<span class="number">2</span>]<span class="number">-1</span>] = line[<span class="number">3</span>]</span><br></pre></td></tr></table></figure><p>计算余弦相似度：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">user_similarity = pairwise_distances(train_data_matrix, metric = <span class="string">"cosine"</span>)  <span class="comment"># 计算余弦距离</span></span><br><span class="line">item_similarity = pairwise_distances(train_data_matrix.T, metric = <span class="string">"cosine"</span>)</span><br></pre></td></tr></table></figure><p>基于用户和基于物品的协同过滤</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">predict</span><span class="params">(rating, similarity, type = <span class="string">'user'</span>)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> type == <span class="string">'user'</span>:</span><br><span class="line">        <span class="comment"># </span></span><br><span class="line">        mean_user_rating = rating.mean(axis = <span class="number">1</span>)    <span class="comment">#mean函数：压缩列，对各行求均值，返回 m *1 矩阵</span></span><br><span class="line">        <span class="comment"># print(mean_user_rating)</span></span><br><span class="line">        rating_diff = (rating - mean_user_rating[:,np.newaxis])</span><br><span class="line">        pred = mean_user_rating[:,np.newaxis] + similarity.dot(rating_diff) / np.array([np.abs(similarity).sum(axis=<span class="number">1</span>)]).T</span><br><span class="line">        <span class="comment">#dot函数：矩阵相乘；np.abs()：矩阵元素的绝对值  .T:转置</span></span><br><span class="line">        <span class="comment"># print('test',pred.min())</span></span><br><span class="line">    <span class="keyword">elif</span> type == <span class="string">'item'</span>:</span><br><span class="line">        pred = rating.dot(similarity) / np.array([np.abs(similarity).sum(axis=<span class="number">1</span>)])</span><br><span class="line">        <span class="comment"># print('test2',pred.max())</span></span><br><span class="line">    <span class="keyword">return</span> pred</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">item_prediction = predict(train_data_matrix, item_similarity, type = <span class="string">'item'</span>)</span><br><span class="line">user_prediction = predict(train_data_matrix, user_similarity, type = <span class="string">'user'</span>)</span><br><span class="line">print(len(item_prediction))</span><br><span class="line">print(len(item_prediction[<span class="number">0</span>]))</span><br><span class="line">print(np.argsort(item_prediction[<span class="number">0</span>]))</span><br></pre></td></tr></table></figure><p>计算均方误差</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rmse</span><span class="params">(prediction, ground_truth)</span>:</span></span><br><span class="line">    <span class="comment"># 计算均方误差</span></span><br><span class="line">    <span class="comment">#nonzero(a)返回数组a中值不为零的元素的下标</span></span><br><span class="line">    <span class="comment">#flatten()创建矩阵</span></span><br><span class="line">    prediction = prediction[ground_truth.nonzero()].flatten()</span><br><span class="line">    ground_truth = ground_truth[ground_truth.nonzero()].flatten()</span><br><span class="line">    <span class="keyword">return</span> sqrt(mean_squared_error(prediction, ground_truth))</span><br><span class="line">print(<span class="string">'User based CF RMSE: '</span> + str(rmse(user_prediction, test_data_matrix)))</span><br><span class="line">print(<span class="string">'Item based CF RMSE: '</span> + str(rmse(item_prediction, test_data_matrix)))</span><br></pre></td></tr></table></figure><p>SVD分解的方法，其中k是特征值个数，指定将分解为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>∗</mo><mi>k</mi></mrow><annotation encoding="application/x-tex">m*k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi><mo>∗</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">k*n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>，中间的对角矩阵有k个特征值</p><blockquote><p>k: int, optional,Number of singular values and vectors to compute. Must be 1 &lt;= k &lt; min(A.shape)</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">u, s, vt = svds(train_data_matrix, k=<span class="number">500</span>)</span><br><span class="line">s_diag_matrix = np.diag(s)</span><br><span class="line">X_pred = np.dot(np.dot(u, s_diag_matrix), vt)</span><br><span class="line"></span><br><span class="line">print(<span class="string">'User-based CF MSE: '</span> + str(rmse(X_pred, test_data_matrix)))</span><br></pre></td></tr></table></figure><p>参考</p><p><span class="exturl" data-url="aHR0cHM6Ly9sdW1pbmdkb25nLmNuL3JlY29tbWVuZGF0aW9uLWFsZ29yaXRobS1iYXNlZC1vbi1tYXRyaXgtZGVjb21wb3NpdGlvbi5odG1s" title="https://lumingdong.cn/recommendation-algorithm-based-on-matrix-decomposition.html">基于矩阵分解的推荐算法<i class="fa fa-external-link"></i></span><br /><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3FjeW1reHljL1JlY1N5cw==" title="https://github.com/qcymkxyc/RecSys">项亮的《推荐系统实践》的代码实现<i class="fa fa-external-link"></i></span></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;等待填坑&lt;/p&gt;
    
    </summary>
    
    
      <category term="笔记" scheme="https://zhangjk98.xyz/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="炼丹" scheme="https://zhangjk98.xyz/tags/%E7%82%BC%E4%B8%B9/"/>
    
      <category term="推荐系统" scheme="https://zhangjk98.xyz/tags/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>沙河夜市</title>
    <link href="https://zhangjk98.xyz/f641/"/>
    <id>https://zhangjk98.xyz/f641/</id>
    <published>2019-10-15T14:05:12.000Z</published>
    <updated>2020-01-30T13:19:15.548Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>这几天走过泥电沙河边上的建设路，早上晨光熹微，夜间车马喧嚣，仿佛回到了高二高三在一中上学的日子。</p><a id="more"></a><p>晚上路过建设路，卖小吃的沿街店铺生意似乎很火爆。到底还是网红街，比清水河西门外一片濒临倒闭的冷清店铺红火多了，显不出一点稳中向好共克时艰的样子。然而我这几天却没看到多少麻雀在路边找吃的，可能是人实在太多不太敢来吧。沙河校内倒是有些珠颈斑鸠和白颊噪鹛在路边捡樟树果子吃。鸟没看到，不到一周的时间却见了三次老鼠行色匆匆，穿梭在摊位间，可能是要回家养四个龟<br />不喜欢辣的我路过建设路，没有胃口，每次大晚上的走过去居然一点也不饿。</p><p>今天实习回来的师姐请我们吃螺蛳粉，不习惯嗦粉并不知道哪里好吃。<br />听说建设路吃的自从炒作过度就不如以前了，我也不晓得，反正没有市井气息，像旅游区。看那个某签签土豆每天都有那么多人在排队，我就好奇一个土豆到底有什么好吃的。反正去了西伯利亚，天天都有土豆吃。<br />这些跟我一个低端人口又有什么关系呢<br />浮世繁华，与我无关。<br />16年涨了房价的成都不像是那首不知道怎么火的《成都》，倒像是《北京北京》。<br />咖啡馆离广场有三个街区，仿佛霓虹灯到月亮的距离，哦，不对，成都看不到月亮。</p><p>晚上回到租的房子，八二信箱家属区，老房子刷了一层屎黄色的漆，那感觉，和当年我长大的物探小区刷了一层红色的漆一样难受。我果然还是喜欢老小区。</p><p>成都夜雨，点点滴滴到天明</p><p><em><strong>对了，泥电的镜像源要上了，不来试试吗</strong></em><br /><span class="exturl" data-url="aHR0cDovL21pcnJvcnMudWVzdGMuY24=" title="http://mirrors.uestc.cn">电子科技大学开源镜像站<i class="fa fa-external-link"></i></span>    ~~202.115.22.207 ~~（需要校内IP）<br />电子科大镜像源自从凝聚的凉了以后终于要续上了</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">ping 202.115.22.207</span><br><span class="line"></span><br><span class="line">正在 Ping 202.115.22.207 具有 32 字节的数据:</span><br><span class="line">来自 202.115.22.207 的回复: 字节=32 时间=2ms TTL=60</span><br><span class="line">来自 202.115.22.207 的回复: 字节=32 时间&lt;1ms TTL=60</span><br><span class="line">来自 202.115.22.207 的回复: 字节=32 时间=1ms TTL=60</span><br><span class="line">来自 202.115.22.207 的回复: 字节=32 时间&lt;1ms TTL=60</span><br><span class="line"></span><br><span class="line">202.115.22.207 的 Ping 统计信息:</span><br><span class="line">    数据包: 已发送 = 4，已接收 = 4，丢失 = 0 (0% 丢失)，</span><br><span class="line">往返行程的估计时间(以毫秒为单位):</span><br><span class="line">    最短 = 0ms，最长 = 2ms，平均 = 0ms</span><br></pre></td></tr></table></figure><img data-src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/mirrors.png" alt="Picture" style="zoom:80%;" />*请忽略现在还妹有前端这个问题，据说已经在做了.jpg*<p>更新，前端已经安排上了<br /><img data-src="https://raw.githubusercontent.com/Archaeoraptor/image_resources/ImageofBlog/mirrors1.png" alt="Picture" style="zoom:80%;" /></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这几天走过泥电沙河边上的建设路，早上晨光熹微，夜间车马喧嚣，仿佛回到了高二高三在一中上学的日子。&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Leetcode刷题</title>
    <link href="https://zhangjk98.xyz/6aa3/"/>
    <id>https://zhangjk98.xyz/6aa3/</id>
    <published>2019-10-13T11:40:29.000Z</published>
    <updated>2020-01-30T13:19:15.509Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>我就每天当瓜子嗑了，不刷题练练手真的要成一个废人了</p><a id="more"></a><p>生活所迫，开始刷题练手</p><p>装上了VSCode，开始在教研室摸鱼式刷题，再次感受到了VSCode本质上是一个浏览器。</p><p>现在还有点纠结拿什么语言刷，哎，不行就先把那本算法竞赛入门经典刷一遍吧。大一学的数据结构都快忘光了。(⊙﹏⊙)</p><h2 id="vscode-remotedevelopment插件连接wsl"><a class="markdownIt-Anchor" href="#vscode-remotedevelopment插件连接wsl"></a> VSCode RemoteDevelopment插件连接wsl</h2><p>教研室分给我的坑位上那台即将报废回收破主机是个14年的i5，并没有独显，虚拟机和双系统是跑不太动了，而且我想用Docker，打开hyper-v之后VMware也不兼容，就弃坑VM了。<br />开始想在win10下装clang和gcc，后来发现用VSCode直接上wsl更省事，安装Remote Development插件就行了<br />在wsl新建目录输入<code>code-insiders .</code>或者<code>code .</code><br />或者在VSCode里按F1，选择<code>Remote-WSL: New Window</code>，再打开文件夹就行了，看到左下角有个绿色的wsl标志就可以了<br />git还会有点小问题，要禁用换行符自动转换，不然win下面和linux下面不一样每次git的repo明明没改动，却显示新的变化，问题看<span class="exturl" data-url="aHR0cHM6Ly9jb2RlLnZpc3VhbHN0dWRpby5jb20vZG9jcy9yZW1vdGUvd3Ns" title="https://code.visualstudio.com/docs/remote/wsl">这里<i class="fa fa-external-link"></i></span></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global core.autocrlf false</span><br></pre></td></tr></table></figure><p>wsl的Debian应该是buster版本的，镜像源选buster（Debian10）</p><p>wsl里cd进<code>\mnt</code>目录就能和win10交换文件，win10下的wsl文件目录在<code>C:\Users\Username\AppData\Local\Packages\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\LocalState\rootfs</code></p><p>wsl里的shell换成oh my zsh，哎，舒服<br />配置问题请参考<span class="exturl" data-url="aHR0cHM6Ly9jb2RlLnZpc3VhbHN0dWRpby5jb20vZG9jcy9jcHAvY29uZmlnLXdzbA==" title="https://code.visualstudio.com/docs/cpp/config-wsl">官方文档<i class="fa fa-external-link"></i></span>，可以装code runner插件像IDE一样直接运行<br /><span class="exturl" data-url="aHR0cHM6Ly9wcmludGVtcHcuZ2l0aHViLmlvL3ZzY29kZS1jLWNwcC1jb25maWd1cmF0aW9uLWZvci1hY20tb2ov" title="https://printempw.github.io/vscode-c-cpp-configuration-for-acm-oj/">看这里<i class="fa fa-external-link"></i></span><br />更新，由于巨硬的VSCode频繁更新，json配置格式乱改，折腾来折腾去非常麻烦，请直接使用别人打包好的便携版或者直接转投Clion（有教育邮箱的我就转投Clion了，JB全家桶真香）<br />据说wsl2已经在20H1预览版上了，但是win10这个样子我又不敢乱更新，等等看吧，观望一下再决定黑巨硬还是微软真香。</p><h2 id="leetcode"><a class="markdownIt-Anchor" href="#leetcode"></a> leetcode</h2><p>看了一下leetcode对语言的支持<br />C++：g++ 8.2，C++14 标准，C：gcc 8.2</p><p>[69] sqrt(x)</p><p>二分法或者牛顿法</p><p>[231] Power of Two</p><p>不断除以二就行了，或者按位与</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">num &amp; (num<span class="number">-1</span>)</span><br></pre></td></tr></table></figure><p>[193] Valid Phone Numbers<br />美国地区电话号码，直接用正则就好了<code>^(\d{3}-|\(\d{3}\) )\d{3}-\d{4}$</code></p><h2 id="其他"><a class="markdownIt-Anchor" href="#其他"></a> 其他</h2><p>努力不写不求甚解的谭++</p><blockquote><p>有一些很简单的鉴别方法 比如创建obj用的Type()而不是Type{}, 到处是类型声明, 各种子类继承叠罗汉 都是谭++的标志</p></blockquote><h3 id="alloca和malloc函数"><a class="markdownIt-Anchor" href="#alloca和malloc函数"></a> alloca和malloc函数</h3><p>C/C++里面的alloca函数动态分配内存, 从栈申请内存，自动释放。alloca是最快的动态内存分配，对应的汇编只有一条指令 sub rsp, size。<br />C还支持可变长数组（variable-length array， VLA）（C99以后）<br />malloc从堆中申请内存，需要手动释放（free）</p><h3 id="c和stl"><a class="markdownIt-Anchor" href="#c和stl"></a> C++和STL</h3><p>等待填坑</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我就每天当瓜子嗑了，不刷题练练手真的要成一个废人了&lt;/p&gt;
    
    </summary>
    
    
      <category term="笔记" scheme="https://zhangjk98.xyz/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="算法" scheme="https://zhangjk98.xyz/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="leetcode" scheme="https://zhangjk98.xyz/tags/leetcode/"/>
    
  </entry>
  
  <entry>
    <title>Flask开坑记</title>
    <link href="https://zhangjk98.xyz/ff2b/"/>
    <id>https://zhangjk98.xyz/ff2b/</id>
    <published>2019-10-12T07:58:43.000Z</published>
    <updated>2020-01-30T13:19:15.445Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>动态语言一时爽，维护重构火葬场</p><a id="more"></a><h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><p>国庆假期之后开始了偶滴搬砖生活，教研室有个师兄在拿Flask做微信公众号的文章推送后端。为了读祖传代码，准备折腾Flask。<br />据说Flask和Django差不了太多，之前Django用的很菜，也不打算拿Django或node之类的重构一边，索性就跳Flask的坑吧</p><h2 id="配置"><a class="markdownIt-Anchor" href="#配置"></a> 配置</h2><p>[1] 开启Debug模式。1.0之后直接在Pycharm的Configuration里勾选开启就好了。或者</p><pre><code>export Flask_Debug = 1 # win系统使用set命令</code></pre><p>[2] 使用装饰器，在指定url或修改请求方式时常用，如</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route('/hello')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'Hello, World'</span></span><br></pre></td></tr></table></figure><p>指定请求方式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route('/login', methods=['GET', 'POST'])</span></span><br></pre></td></tr></table></figure><p>[3] 处理请求、文件传输和cookies等<br />都在flask的request库里</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> request</span><br></pre></td></tr></table></figure><p>[4] 数据库用SQLAlchemy可以像Django一样用python操作数据库，建表查询调用。</p><h2 id="蓝图"><a class="markdownIt-Anchor" href="#蓝图"></a> 蓝图</h2><p>我们项目再大一些，就要拆分模块，Flask一般使用蓝图(Blueprint)<br />这样注册</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> yourapplication.simple_page <span class="keyword">import</span> simple_page</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.register_blueprint(simple_page, url_prefix=<span class="string">'/pages'</span>)</span><br></pre></td></tr></table></figure><p>这样引用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> yourapplication.simple_page <span class="keyword">import</span> simple_page</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.register_blueprint(simple_page)</span><br></pre></td></tr></table></figure><p>也可以作为资源放置静态文件，详见官方文档</p><h2 id="视图和模板"><a class="markdownIt-Anchor" href="#视图和模板"></a> 视图和模板</h2><p>Flask的模板(template)用的Jinja2，基本都是标签的形式，和Django的模板非常像，类似这种</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% block title %&#125;&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure><p>(我刚刚又查了一下，Django的自带模板就是基于Jinja的魔改版，应该是Django模板像Jinja2，说反了)</p><p>视图函数一般用来处理入站请求，我们用装饰器把函数注册为事件处理程序，大概这个样子</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route('/user/&lt;name&gt;')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">usr</span><span class="params">(name)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'Hello World,&#123;&#125;!'</span>.format(name)</span><br></pre></td></tr></table></figure><h2 id="项目填坑"><a class="markdownIt-Anchor" href="#项目填坑"></a> 项目填坑</h2><p>要搞一个微信公众号推送内容，用Flask作为后端，微信接口的大坑等会再填<br />申请公众号，测试号之类的略过不表。（GRD腾讯真的烦啊，还要身份证号一堆乱七八糟的，开了个人号还一堆权限不给，文档也差，更新慢还经常404打不开，那个什么Telegram Channel，就是比微信高到不知哪里去了。算了，甲方有需求，那就忍了）<br /><s>先提前祝愿微信早日倒闭</s></p><h2 id="其他"><a class="markdownIt-Anchor" href="#其他"></a> 其他</h2><p>跨域请求：安装flask-cors, 设置一下就行了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask_cors <span class="keyword">import</span> CORS</span><br><span class="line">···</span><br><span class="line">CORS(app, supports_credentials=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>在chrome的新特性中，使用Same-Site Cookies来解决CSRF跨域攻击的问题，没设置会报这种警告, 在未来的版本中，没设置是不允许跨域的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">A cookie associated with a cross-site resource at http:&#x2F;&#x2F;··· was set without the &#96;SameSite&#96; attribute. A future release of Chrome will only deliver cookies with cross-site requests if they are set with &#96;SameSite&#x3D;None&#96; and &#96;Secure&#96;.</span><br></pre></td></tr></table></figure><p>设置一下属性就好了</p><p>生成和导入requirements</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip freeze &gt; requirements.txt</span><br><span class="line">pip install -r requirements.txt</span><br></pre></td></tr></table></figure><p>使用哈希值存储用户密码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> werkzeug.security <span class="keyword">import</span> generate_password_hash, check_password_hash</span><br></pre></td></tr></table></figure><h2 id="flask部署"><a class="markdownIt-Anchor" href="#flask部署"></a> Flask部署</h2><p>这里我用的Docker。照着<span class="exturl" data-url="aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC83ODQzMjcxOQ==" title="https://zhuanlan.zhihu.com/p/78432719">这里<i class="fa fa-external-link"></i></span>部署的<br />这里没有用Nginx，直接上的gunicorn，回头看一下Nginx怎么搞<br />这里有个<span class="exturl" data-url="aHR0cDovL2RvY3MuZ3VuaWNvcm4ub3JnL2VuL3N0YWJsZS9kZXBsb3kuaHRtbA==" title="http://docs.gunicorn.org/en/stable/deploy.html">官方文档<i class="fa fa-external-link"></i></span></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;动态语言一时爽，维护重构火葬场&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Flask" scheme="https://zhangjk98.xyz/tags/Flask/"/>
    
  </entry>
  
  <entry>
    <title>Linux从入门到入土</title>
    <link href="https://zhangjk98.xyz/193/"/>
    <id>https://zhangjk98.xyz/193/</id>
    <published>2019-10-11T08:48:51.000Z</published>
    <updated>2020-01-30T13:19:15.510Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>等待填坑</p><a id="more"></a><h2 id="基本的shell命令"><a class="markdownIt-Anchor" href="#基本的shell命令"></a> 基本的Shell命令</h2><h3 id="系统状态"><a class="markdownIt-Anchor" href="#系统状态"></a> 系统状态</h3><table><thead><tr><th>Command</th><th>Function</th></tr></thead><tbody><tr><td>reboot</td><td>重启</td></tr><tr><td>poweroff</td><td>关机</td></tr><tr><td>weget</td><td>下载文件</td></tr><tr><td>ps</td><td>监视进程</td></tr><tr><td>top</td><td>动态监视进程</td></tr><tr><td>kill</td><td>终止进程</td></tr><tr><td>free</td><td>查看内存</td></tr><tr><td>history</td><td>查看历史命令</td></tr></tbody></table><p>这里推荐用glances代替top，<code>pip3 install glances</code></p><h3 id="文件操作"><a class="markdownIt-Anchor" href="#文件操作"></a> 文件操作</h3><p>cd, ls, mkdir, ls, mv， rm这些不说了</p><table><thead><tr><th>Command</th><th>Function</th></tr></thead><tbody><tr><td>pwd</td><td>查看当前目录</td></tr><tr><td>stat</td><td>查看文件信息</td></tr><tr><td>diff</td><td>比较差异</td></tr><tr><td>touch</td><td>创建空白文件</td></tr><tr><td>tar</td><td>打包文件</td></tr></tbody></table><p>tar -c 创建压缩， -x 解压缩(-xvzf)<br />如：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -czvf filemane.tar.gz</span><br></pre></td></tr></table></figure><p>查看目录下文件大小（包括文件夹）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">du -sh *</span><br></pre></td></tr></table></figure><p>备份同步rsync, -a（archive）递归并同步时间戳和权限，-v显示详细信息，-z压缩</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsync -avz <span class="built_in">source</span> destination</span><br></pre></td></tr></table></figure><h3 id="查找"><a class="markdownIt-Anchor" href="#查找"></a> 查找</h3><p>grep查找文件内的内容，支持正则表达式（但是需要加<code>-P</code>参数支持perl正则，否则支持程度有限）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -n include test.c</span><br></pre></td></tr></table></figure><p>显示行号和查找结果1:#include&lt;stdio.h&gt;</p><p>find查找文件</p><p>（这里建议用fd和ripgrep代替find和grep）</p><h2 id="vim基础操作"><a class="markdownIt-Anchor" href="#vim基础操作"></a> Vim基础操作</h2><p><s>不得不用linux命令界面编辑文件又不喜欢vim直接nano就好了</s></p><p>Vim有Normal（普通模式），Insert（插入模式）和 Visual（可视模式）</p><p>打开是Normal模式，按i进入插入模式，按v进入Visual模式，按ESC返回Normal模式</p><p>输入vi test.c创建文件并进入vim，按i进入insert模式，写完保存退出按ESC，:wq保存退出，:q! 不保存退出</p><p>文件写入可能需要sudo，不然会E212错误，退出获取管理员权限再保存即可</p><h2 id="简单的脚本"><a class="markdownIt-Anchor" href="#简单的脚本"></a> 简单的脚本</h2><p>脚本文件通常是.sh后缀，在执行的时候<code>bash filename.sh</code> 。在第一行声明执行的shell解释器路径，如#!/bin/bash 。<br />接收参数用$, $1,$2,$3为第1、2、3个参数，$?为上一个参数的返回值。<br />使用逻辑判断&amp;&amp;和||, 输出用户是否管理员：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[ ! $USER = root ] &amp;&amp; echo "user" || echo "root"</span><br></pre></td></tr></table></figure><p>if 语句, 判断是否存在文件路径，不存在就创建：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">DIR="/media/cdrom"</span><br><span class="line">if [ ! -e $DIR ]</span><br><span class="line">then</span><br><span class="line">mkdir -p $DIR</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p>while语句:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">while</span><br><span class="line">do</span><br><span class="line">---</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p>猜数字</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">PRICE=$(expr <span class="variable">$RANDOM</span> %1000)</span><br><span class="line">TIMES=0</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Guess a number between 0 and 999"</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">        <span class="built_in">read</span> -p <span class="string">"Input your number"</span> INT</span><br><span class="line">        <span class="built_in">let</span> TIMES++</span><br><span class="line">        <span class="keyword">if</span> [ <span class="variable">$INT</span> -eq <span class="variable">$PRICE</span> ] ; <span class="keyword">then</span></span><br><span class="line">                <span class="built_in">echo</span> <span class="string">"Congratulations, you are right, the number is <span class="variable">$PRICE</span>"</span></span><br><span class="line">                <span class="built_in">echo</span><span class="string">"You have guessed <span class="variable">$TIMES</span>"</span></span><br><span class="line">                <span class="built_in">exit</span> 0</span><br><span class="line">        <span class="keyword">elif</span> [ <span class="variable">$INT</span> -gt <span class="variable">$PRICE</span> ] ; <span class="keyword">then</span></span><br><span class="line">                <span class="built_in">echo</span><span class="string">"Too High"</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">echo</span><span class="string">"Too low"</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h2 id="不建议轻易尝试的作死行为"><a class="markdownIt-Anchor" href="#不建议轻易尝试的作死行为"></a> 不建议轻易尝试的作死行为</h2><p>下列行为如果你读到这里试了出了麻烦，<em>本人概不负责</em>, 在虚拟机和非生产环境里也可以试着玩<br />卸载自带python:<code>sudo apt uninstall python</code><br />在wsl中安装KDE桌面<br />卸载iptables使用<code>sudo apt remove iptables</code></p><h2 id="各版本体验"><a class="markdownIt-Anchor" href="#各版本体验"></a> 各版本体验</h2><h3 id="ubuntu"><a class="markdownIt-Anchor" href="#ubuntu"></a> Ubuntu</h3><p>中规中矩，听说19都出了，没试过，在用18，教研室服务器是16的</p><h3 id="wsl"><a class="markdownIt-Anchor" href="#wsl"></a> wsl</h3><p>暂时不支持GPU，指望跑个tensorflow暂时没希望<br />wsl2已经出了，但我还没升级，到时候再试试2吧</p><h3 id="manjaro"><a class="markdownIt-Anchor" href="#manjaro"></a> Manjaro</h3><p>听说不错，也没有Arch那么恐怖，感觉体验比Ubuntu还好啊</p><h3 id="debian"><a class="markdownIt-Anchor" href="#debian"></a> Debian</h3><p>VPS上跑的是这个，感觉也还好，用的也不多</p><h2 id="文件系统"><a class="markdownIt-Anchor" href="#文件系统"></a> 文件系统</h2><p>“一切皆文件”, 这是UNIX最初的构想，但是Linux里面并不是，比如socket，真正实现了一切皆文件是贝尔实验室的Plan9,然而已经凉了<sup id="fnref:2"><a href="#fn:2" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="[Plan9效应](http://www.di.unipi.it/~nids/docs/the_plan-9_effect.html)">[2]</span></a></sup>, <strong>真·入土</strong><br />虽然入土了，那个Plan9的风格影响后来很多东西，了也影响了Go，你看LOGO，多像啊<br />（不得不说贝尔实验室那帮人当年搞出来那一堆东西真的有点意思，形式化验证和Lisp之类的也让人仰望，但是没能商用推广，曲高和寡，<s>其实也不是他们的问题，是大多是人都太菜了，比如我</s>现在一个个都入土了）</p><p>创建文件链接(硬链接和符号链接)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ln &lt;source&gt; &lt;target&gt;</span><br><span class="line">ln -s &lt;source&gt; &lt;target&gt;</span><br></pre></td></tr></table></figure><p>加 -s 是符号链接，就像一个指针，源文件删除，符号链接会指向不存在的位置</p><p>装载文件（将一个设备添加到文件系统中）<br />一开始会将/root或者/boot自动装载，装载其他的设备一般用mount命令，比如<br /><code>mount /mnt/cdrom</code></p><h2 id="其他"><a class="markdownIt-Anchor" href="#其他"></a> 其他</h2><h3 id="支持中文和utf-8"><a class="markdownIt-Anchor" href="#支持中文和utf-8"></a> 支持中文和UTF-8</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install language-pack-zh-hans</span><br><span class="line">sudo vim /etc/environment</span><br></pre></td></tr></table></figure><p>写入</p><blockquote><p>LANG=“zh_CN.UTF-8”<br />LANGUAGE=“zh_CN:zh:en_US:en”</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /var/lib/locales/supported.d/local</span><br></pre></td></tr></table></figure><p>写入</p><blockquote><p>en_US.UTF-8 UTF-8<br />zh_CN.UTF-8 UTF-8<br />zh_CN.GBK GBK<br />zh_CN GB2312</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo locale-gen</span><br><span class="line">sudo apt-get install fonts-droid-fallback ttf-wqy-zenhei ttf-wqy-microhei fonts-arphic-ukai fonts-arphic-uming</span><br></pre></td></tr></table></figure><h3 id="保持ssh连接不自动退出"><a class="markdownIt-Anchor" href="#保持ssh连接不自动退出"></a> 保持SSH连接不自动退出</h3><p>用的Mobaxterm，直接在settings&gt;SSH&gt;SSH keepalive<br />当然通常的做法是每隔一定时间向服务器发送心跳<sup id="fnref:1"><a href="#fn:1" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="[Linux使用ssh超时断开连接的真正原因](http://bluebiu.com/blog/linux-ssh-session-alive.html)">[1]</span></a></sup>，应该是防止防火墙把SSH干掉，通常SSH不会自己断的<br />在<code>/etc/ssh/sshd_config</code>里面设置ClientAliveInterval和ClientAliveInterval<br />也可以修改<code>.ssh/config</code>文件，设置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Host Server</span><br><span class="line">    ServerAliveInterval 20</span><br><span class="line">    ServerAliveCountMax 9</span><br></pre></td></tr></table></figure><h3 id="设置用户组和权限"><a class="markdownIt-Anchor" href="#设置用户组和权限"></a> 设置用户组和权限</h3><p>root用户UID为0，有生杀大权（我们教研室居然每人都有root用户密码，还日常root权限运行命令，可还行（虽然一共也没几个人用）），也有背锅重任，不想背黑锅是不能乱用的<br />添加用户（root添加其他用户）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd -u 1998 zjk</span><br></pre></td></tr></table></figure><p>这样就在/home/zjk创建了一个名为zjk的用户<br />切换用户的时候使用su命令就行了(Substitute User)<br />将用户加到root用户组(需要root权限)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">usermod -G root zjk</span><br></pre></td></tr></table></figure><p>更新，改了之后发现并不好使，要这样</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">chmod u+w /etc/sudoers</span><br><span class="line">vi /etc/sudoers</span><br><span class="line"><span class="meta">#</span><span class="bash"> 加一行</span></span><br><span class="line">zjk ALL=(ALL) ALL</span><br></pre></td></tr></table></figure><h2 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h2><p><span class="exturl" data-url="aHR0cHM6Ly92aW0tY2hpbmEub3JnLw==" title="https://vim-china.org/">Vim中文社区<i class="fa fa-external-link"></i></span><br /><span class="exturl" data-url="aHR0cHM6Ly9saW51eHRvb2xzLXJzdC5yZWFkdGhlZG9jcy5pby96aF9DTi9sYXRlc3QvaW5kZXguaHRtbA==" title="https://linuxtools-rst.readthedocs.io/zh_CN/latest/index.html">Linux工具快速教程<i class="fa fa-external-link"></i></span><br /><span class="exturl" data-url="aHR0cHM6Ly9saW51eHRvb2xzLXJzdC5yZWFkdGhlZG9jcy5pby96aF9DTi8=" title="https://linuxtools-rst.readthedocs.io/zh_CN/">Linux工具快速教程<i class="fa fa-external-link"></i></span><br /><span class="exturl" data-url="aHR0cHM6Ly9leHBsYWluc2hlbGwuY29tLw==" title="https://explainshell.com/">explainshell<i class="fa fa-external-link"></i></span> 一个解释shell语句的网站</p><h2 id="注"><a class="markdownIt-Anchor" href="#注"></a> 注</h2><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><span class="exturl" data-url="aHR0cDovL2JsdWViaXUuY29tL2Jsb2cvbGludXgtc3NoLXNlc3Npb24tYWxpdmUuaHRtbA==" title="http://bluebiu.com/blog/linux-ssh-session-alive.html">Linux使用ssh超时断开连接的真正原因<i class="fa fa-external-link"></i></span><a href="#fnref:1" rev="footnote"> ↩</a></span></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">2.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><span class="exturl" data-url="aHR0cDovL3d3dy5kaS51bmlwaS5pdC9+bmlkcy9kb2NzL3RoZV9wbGFuLTlfZWZmZWN0Lmh0bWw=" title="http://www.di.unipi.it/~nids/docs/the_plan-9_effect.html">Plan9效应<i class="fa fa-external-link"></i></span><a href="#fnref:2" rev="footnote"> ↩</a></span></li></ol></div></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;等待填坑&lt;/p&gt;
    
    </summary>
    
    
      <category term="笔记" scheme="https://zhangjk98.xyz/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="linux" scheme="https://zhangjk98.xyz/tags/linux/"/>
    
  </entry>
  
</feed>
