<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>止息的碎碎念</title>
  
  <subtitle>阴，气温20℃至32℃</subtitle>
  <link href="https://zhangjk98.xyz/atom.xml" rel="self"/>
  
  <link href="https://zhangjk98.xyz/"/>
  <updated>2020-12-31T12:44:19.000Z</updated>
  <id>https://zhangjk98.xyz/</id>
  
  <author>
    <name>Zhang.jk</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>别了，2020</title>
    <link href="https://zhangjk98.xyz/farewell-2020-hello-2021/"/>
    <id>https://zhangjk98.xyz/farewell-2020-hello-2021/</id>
    <published>2020-12-31T12:44:19.000Z</published>
    <updated>2020-12-31T12:44:19.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><p>民亦劳止 汔可小康</p></blockquote><a id="more"></a><p><del>2020，消灭贫困人口</del></p><p>又老了一岁。</p><p>这一年经历了很多，从年初疫情到返校毕业滚蛋，9月又滚回来正式变成一个每天不务正业的研究生，到了年底又赶上了成都一波疫情封校。</p><p>这一年里，Firefox大裁员，AMD收购Xilinx，梁孟松从中芯离职，手机厂商号称环保取消充电线了，5G群魔乱舞，运营商掏不出电费，Telegram可能会倒闭但绝不会变质.....</p><p>这一年看到太多开源社区和一些还不错的公司分崩离析，人走茶凉....</p><p>唯一开心的是就是最讨厌的CentOS稳定版要无了，看戏.webp</p><p>好在Arch社区依然热闹，肥猫在武汉也平安度过了疫情</p><p>本来有很多想说的，但是元旦没什么想写的，等春节在爆竹声中再写吧</p><p>新年计划没有，鬼知道今年会发生什么</p><p>晚唐光景，也好，也好</p><blockquote class="blockquote-center"><p>夕阳无限好，只是近黄昏</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;blockquote class=&quot;blockquote-center&quot;&gt;
&lt;p&gt;民亦劳止 汔可小康&lt;/p&gt;

&lt;/blockquote&gt;</summary>
    
    
    
    
    <category term="Flag" scheme="https://zhangjk98.xyz/tags/Flag/"/>
    
  </entry>
  
  <entry>
    <title>AUR打包指北</title>
    <link href="https://zhangjk98.xyz/create-aur-packages/"/>
    <id>https://zhangjk98.xyz/create-aur-packages/</id>
    <published>2020-12-20T08:36:47.000Z</published>
    <updated>2020-12-20T08:36:47.000Z</updated>
    
    <content type="html"><![CDATA[<p>（长期施工中，未完待续） <a id="more"></a></p><blockquote class="blockquote-center"><p>快来当AUR打包工具人/打包苦力吧(笑</p></blockquote><p>其实还是建议你去先看看官方文档</p><h2 id="大致流程">大致流程</h2><h3 id="新建一个测试环境">新建一个测试环境</h3><p>在本机上直接打包可能会把你自己的机子环境搞乱搞崩，或者忽略了已经在自己电脑上装了了但是没有的依赖，又或者你想... 反正弄一个干净的测试环境是有必要的。可以参考官方Wiki：<span class="exturl" data-url="aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvaW5kZXgucGhwL0RldmVsb3Blcldpa2k6QnVpbGRpbmdfaW5fYV9jbGVhbl9jaHJvb3Q=">DeveloperWiki:Building in a clean chroot<i class="fa fa-external-link-alt"></i></span>, 或者看肥猫这篇：<span class="exturl" data-url="aHR0cHM6Ly9mZWxpeGMuYXQvMjAxNy8wOC9pbnRyb2R1Y3Rpb24tdG8tYXJjaC1saW51eC1kZXZ0b29scy1idWlsZC1wYWNrYWdlcy1mcm9tLWEtY2xlYW4tY2hyb290Lw==">Arch Linux devtools 简介 – 在干净的环境里编译软件包<i class="fa fa-external-link-alt"></i></span></p><p>当然打包一些很简单、依赖很明确的东西，确定没必要也可以不要这一步。</p><h3 id="编写pkgbuild">编写PKGBUILD</h3><p>最快的方法是去找找有没有和你要打包的东西类似的包，然后抄一下它的PKGBUILD。</p><h3 id="检查">检查</h3><p>先用namcap检查一下，有没有语法错误或者其他不符合规范的地方</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">namcap PKGBUILD<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="编译">编译</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">makepkg -s<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>生成的<code>XXX.tar.xz</code>可以再用<code>namcap</code>检查一下</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">namcap XXX.tar.xz<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="上传和分享">上传和分享</h3><h4 id="aur">AUR</h4><p>如果想分享出来，你可以上传到AUR仓库里面。AUR帐号随便就能注册几乎没有审查的（所以传点恶意代码上去也能传的），但是尽量不要把有版权问题之类的东西传上去（虽然出了事应该是你自己负责）</p><p>新建一个账号，然后上传你的SSH公钥和密钥指纹。</p><p>用<code>git clone</code>拉取一个</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>AUR软件仓库需要<span class="exturl" data-url="aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvaW5kZXgucGhwLy5TUkNJTkZPXyjnroDkvZPkuK3mlocp">SRCINFO<i class="fa fa-external-link-alt"></i></span>,不然会拒绝你的提交</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">makepkg --printsrcinfo <span class="token operator">></span> .SRCINFO<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="非官方软件仓库">非官方软件仓库</h4><p>或者你可以去其他非官方的仓库，这有一大堆：<span class="exturl" data-url="aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvaW5kZXgucGhwL1Vub2ZmaWNpYWxfdXNlcl9yZXBvc2l0b3JpZXNfKOeugOS9k+S4reaWhyk=">Unofficial user repositories<i class="fa fa-external-link-alt"></i></span></p><p>中文用户人最多的是ArchlinuxCN，我猜你很熟悉这个了。</p><p>其他的还有chaotic-aur（里面的包不少，但是国内速度很慢，镜像都在国外，直接访问可能比从AUR拉下来编译还慢），arch4edu（一些教育软件和包，清华的弄得，国内速度还行），blackarch（这个包也很多，约等于arch系的kali源）</p><p>要添加到这些非官方仓库里，可以请求打包，或者跟仓库管理员py。</p><p>或者可以自建一个仓库。</p><p>可参考：</p><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuYWxveGFmLmNvbS8yMDIwLzA2L2J1aWxkX2F1cl93aXRoX2dpdGh1Yl9hY3Rpb25zLw==">利用 GitHub Actions 编译 AUR 包并建立自己的软件源<i class="fa fa-external-link-alt"></i></span></p><h2 id="一些工具">一些工具</h2><h3 id="namcap">namcap</h3><p>用来检查打包是否正确</p><h3 id="devtools">devtools</h3><p>可以干很多事情，最常用的是新建一个干净的环境用来测试你的包。</p><p>还有很多用法去看文档吧，</p><h3 id="debtap">debtap</h3><p>大多数情况下可以快速把deb包转成aur包 有些deb的包或者rpm的包可以拆包然后重新手动打包一下。一般的用debtap可以解决大部分deb包，有些依赖可能没办法需要手动处理。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yay -Syu debtap<span class="token function">sudo</span> debtap -u <span class="token comment">#同步数据库，可能比较慢</span>debtap -p XXX.deb <span class="token comment"># -p 选项生成PKGBUILD</span><span class="token comment">## 然后根据提示输入包名和协议等</span><span class="token comment">## 然后稍等一会，会比较慢</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后<code>pacman -U XXX.tar.xz</code>可以装到你的电脑上试一下。</p><h3 id="pip2pkgbuilds">pip2pkgbuilds</h3><p>将pip的包转成aur的包，这个工具很久没更新了（But it works）</p><h2 id="自动化">自动化</h2><p>人肉测试每个包然后传上去给大家用是最好的，不过有的上游更新太勤测试不过来，或者一些<span class="exturl" data-url="aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvaW5kZXgucGhwL1ZDU19wYWNrYWdlX2d1aWRlbGluZXNfKOeugOS9k+S4reaWhyk=">用版本控制紧跟上游的包<i class="fa fa-external-link-alt"></i></span> <del>又或者有的时候你想让用户当小白鼠</del></p><p>可以试试Travis CI、Github Action 之类的CI/CD工具，不过最好还是更新之前人肉测试一下</p><h3 id="github-action">Github Action</h3><p>Github Action的好处是可以白嫖（划掉</p><p>可以用Github Action自动生成PKGBUILD： <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL21hcmtldHBsYWNlL2FjdGlvbnMvcHVibGlzaC1hdXItcGFja2FnZQ==">publish-aur-package<i class="fa fa-external-link-alt"></i></span></p><p>鸭鸭的<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0R1Y2tTb2Z0L2J1aWxkLWF1ci1hY3Rpb24=">build-aur-action<i class="fa fa-external-link-alt"></i></span>,用Github Action编译一个AUR包（有时候你不想在自己电脑上编译可以试试这个）</p><p>使用见：<span class="exturl" data-url="aHR0cHM6Ly92aWZseXRoaW5rLmNvbS9Vc2VfR2l0SHViQWN0aW9uc190b19idWlsZF9BVVIv">GitHub Actions 打造 AUR 打包下载一条龙服务<i class="fa fa-external-link-alt"></i></span></p><h2 id="一些小问题">一些小问题</h2><h3 id="aur的依赖包makepkg无法自动识别">AUR的依赖包makepkg无法自动识别</h3><p>打包的时候如果依赖AUR的包，在<code>makepkg -s</code>pacman是不会自动安装的需要手动安装</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">error: target not found: python-django-cors-headers<span class="token operator">==</span><span class="token operator">></span> ERROR: <span class="token string">'pacman'</span> failed to <span class="token function">install</span> missing dependencies.<span class="token operator">==</span><span class="token operator">></span> ERROR: Could not resolve all dependencies.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>如果依赖太多装不过来，可以加<code>makepkg -d</code>参数忽略依赖，然后对生成的<code>XXX.tar.xz</code>使用yay或者pikaur之类的AUR helper</p><h3 id="git初次commit不包含srcinfo导致拒绝提交">git初次commit不包含SRCINFO导致拒绝提交</h3><p>可以用<code>git filter branch</code></p><p>（其实直接删了重新<code>git init</code>可能更快）</p><h2 id="常见写法和命令">常见写法和命令</h2><h3 id="install命令">install命令</h3><p>用过<code>cmake</code>等编译工具的人应该对<code>make install</code>很熟了，它在PKGBUILD里面大概像这样</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function-name function">package</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token function">make</span> -C <span class="token string">"<span class="token variable">$pkgname</span>-<span class="token variable">$pkgver</span>"</span> <span class="token assign-left variable">DESTDIR</span><span class="token operator">=</span><span class="token string">"<span class="token variable">$pkgdir</span>"</span> <span class="token function">install</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>在PKGBUILD里面，还经常用它把文件安装到制定目录，并指定权限（一般不用<code>cp</code>来干这种事）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function-name function">package</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token builtin class-name">cd</span> <span class="token string">"<span class="token variable">$srcdir</span>/<span class="token variable">$pkgname</span>"</span>  <span class="token function">install</span> -vDm <span class="token number">644</span> <span class="token variable">$&#123;pkgname<span class="token operator">%</span>-git&#125;</span><span class="token punctuation">&#123;</span>,.plugin<span class="token punctuation">&#125;</span>.zsh <span class="token punctuation">\</span>    -t <span class="token string">"<span class="token variable">$&#123;pkgdir&#125;</span>/usr/share/zsh/plugins/<span class="token variable">$&#123;pkgname&#125;</span>/"</span>  <span class="token function">install</span> -Dm644 LICENSE <span class="token string">"<span class="token variable">$pkgdir</span>"</span>/usr/share/licenses/<span class="token variable">$pkgname</span>/LICENSE<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>将可执行文件和LICENSE分别放到指定目录，像LICENSE或者doc权限644就好了，其他的可执行文件酌情给个755权限。</p><p>如果有需要打印详细安装信息方便调试，可以加<code>-v</code>选项，像这样<code>install -Dvm755</code></p><h3 id="常见写法">常见写法</h3><p>获取Github Release</p><h2 id="练手推荐">练手推荐</h2><p>上手AUR打包基本只需要一点bash脚本的知识就可以了。当然最好还要对打包的项目和所用的语言、框架、依赖比较熟悉。</p><p>反正我感觉比deb和rpm的打包简单太多了，而且由于包管理的机制，虽然容易挂，但是依赖一般不会特别麻烦（除了有些要拆包的东西）</p><p>你看看依赖问题<span class="exturl" data-url="aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzI5MTYwNjEyOC9hbnN3ZXIvMTE5NDU5NjU5MQ==">都把隔壁deb系的老哥逼成什么样了<i class="fa fa-external-link-alt"></i></span>。</p><p>可以看这个<span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIuaWJtLmNvbS96aC9hcnRpY2xlcy9sLWxvLXJwbS1idWlsZC1wYWNrYWdlLw==">Linux 中 RPM 的构建与打包<i class="fa fa-external-link-alt"></i></span>感受一下打包流程 （当然rpm包用<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2pvcmRhbnNpc3NlbC9mcG0=">fpm<i class="fa fa-external-link-alt"></i></span>之类的打包工具也没有那么麻烦）</p><p>官方的打包示例是要用到make编译c/c++包的例子，但是一些c/c++的包，运行环境和依赖会比较麻烦，而且在x86和arm等不同架构下面也会有很多问题。拿来熟悉打包流程对萌新不太友好。</p><p>练手打包建议用从自己最熟悉的项目和语言开始。如果你什么语言都不熟悉呢，推荐用一些主题或者可以用debtap之类的工具方便的转成AUR包的东西来熟悉一下打包。</p><p>有的系统主题、grub主题、输入法主题之类的包比较好打包，一般来说依赖也少，不会搞出什么大问题。而且主题的文件存放位置和PKGBUILD里面的其他东西可以找AUR里面打包好的其他主题参考，基本大同小异，上手打包不会有太太高难度和坑，不太熟悉流程的可以先用一些主题练手熟悉一下打包流程。（主要是这个依赖也少，破坏性比较小，萌新打出低质量的AUR包也不至于把装这个包的人一波带走闯下大祸）</p><p>而且他们不需要编译，也没有依赖报错，总之非常的适合熟悉一下PKGBUILD的流程</p><p>当然打包不能包揽所有工作，一些设置需要用户手动启用或者修改的（比如一些配置，又比如systemd之类的daemon），比如我这里打包了一个GRUB的Cyberpunk主题，需要用户手动修改</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> /etc/default/grub<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">GRUB_THEME</span><span class="token operator">=</span><span class="token string">"/usr/share/grub/themes/Cyberpunk/theme.txt"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">grub-mkconfig</span> -o /boot/grub/grub.cfg<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>需要用户手动修改设置来启用（基本上主题、桌面挂件之类的包都是这么做的）</p><h2 id="闲话">闲话</h2><p>暑假的时候打了十几个野包，当时水平也菜，刚洗手变成Arch玩家没多久，打的十几个包都没放到AUR上丢人。虽然现在还是真蒟蒻在群里围观各路大佬卖弱不敢说话，看到中文的打包教程这么少，决定还是写点什么。</p><p>当时搜AUR打包相关的资料，发现相关的文章、博客、资料并不多（尤其是中文的）。中文资料保守估计不到Archlinux安装教程的百分之一，也不到deb、rpm、Flatpak打包教程的百分之一。</p><p>Archlinux安装弄的这么难初衷可能是为了筛掉一部分小白和伸手党，不过网上各路保姆级安装教程（一步一步手把手教的视频演示那种）和各种一键安装脚本和 Arch based 的发行版基本上快让<span class="exturl" data-url="aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvaW5kZXgucGhwL0FyY2hfTGludXhfKOeugOS9k+S4reaWhyk=">Arch的理念<i class="fa fa-external-link-alt"></i></span>流产了(特别是广为诟病的Manjaro和网上一大堆不负责任的教程，一口一个适合小白，动不动就教人添加ArchlinuxCN源，搞得很多打包者不堪骚扰)</p><p>小白倒没什么，主要是被伸手党搞怕了。</p><p>独立打一个包应该不会比独立装一个Archlinux难（不考虑Nvidia双显卡博通网卡阴间主板诡异驱动等....）。<br />如果一个用户能参照ArchWiki独立装好、配置好自己的Arch，那就应该有能力自己打包。<br />Arch没有Mac、Windows、ChromeOS那样的财大气粗的公司和掏钱买服务的客户，甚至不能跟RHEL和Ubuntu比，社区纯靠热情。而且由于deb系和rpm系用户众多，基本大部分软件如果支持Linux会给出deb或者rpm的包，有的可能会给个appimage的包，Arch的支持基本没太多上游会管，很多包都是Arch的维护者和用户自行编译打包的（不少还是deb拆包转的）。 伸手党太多而打包者太少，那就离凉凉不远了。<br />下次看到没有包当伸手党可不好，没有包就自己打一个吧。</p><h2 id="参考和推荐阅读">参考和推荐阅读</h2><p><span class="exturl" data-url="aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvaW5kZXgucGhwL0RldmVsb3Blcldpa2k6SW5kZXg=">DeveloperWiki<i class="fa fa-external-link-alt"></i></span> 里面关于打包的部分可以看看<br /><span class="exturl" data-url="aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvaW5kZXgucGhwL0FyY2hfcGFja2FnZV9ndWlkZWxpbmVz">Arch package guidelines<i class="fa fa-external-link-alt"></i></span> Arch官方的打包指南<br />[PKGBUILD_(简体中文)]https://wiki.archlinux.org/index.php/PKGBUILD_(简体中文) PKGBUILD的简要介绍<br /><span class="exturl" data-url="aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvaW5kZXgucGhwL01ha2Vwa2dfKOeugOS9k+S4reaWhyk=">Makepkg_(简体中文)<i class="fa fa-external-link-alt"></i></span> Makepkg也比较重要，有需要可以参考维基修改一下参数<br /><span class="exturl" data-url="aHR0cHM6Ly9mZWxpeGMuYXQvMjAxNy8wOC9tYWtlLWFuLWFyY2gtcGFja2FnZS1mb3ItcHl0aG9uLW1vZHVsZS8=">给 Arch 打一个包 – Python 模块篇<i class="fa fa-external-link-alt"></i></span> python的包经常没什么人愿意打（确实依赖比较麻烦，好在有肥猫，打了一大堆python包），希望多来点熟悉python的大佬<br /><span class="exturl" data-url="aHR0cHM6Ly9tYW4uYXJjaGxpbnV4Lm9yZy9tYW4vUEtHQlVJTEQuNQ==">PKGBUILD参考手册<i class="fa fa-external-link-alt"></i></span> Arch官网的参考手册，话说Arch最近新上的<span class="exturl" data-url="aHR0cHM6Ly9tYW4uYXJjaGxpbnV4Lm9yZy8=">手册索引<i class="fa fa-external-link-alt"></i></span>挺香的（btw I use tldr）<br /><span class="exturl" data-url="aHR0cHM6Ly93d3cudnVsdHIuY29tL2RvY3MvYnVpbGRpbmctcGFja2FnZXMtb24tYXJjaC1saW51eA==">Building Packages on Arch Linux (Including the AUR)<i class="fa fa-external-link-alt"></i></span> Vultr的教程（我也不知道Vultr怎么会有这种东西）<br /><span class="exturl" data-url="aHR0cHM6Ly9qdW55dXNzaC5naXRodWIuaW8vcC9hcmNoLWxpbnV4LXBhY2thZ2UtcXVpY2stc3RhcnQv">Arch Linux 第一次打包就上手<i class="fa fa-external-link-alt"></i></span> 新手可以看看这个</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;（长期施工中，未完待续）</summary>
    
    
    
    <category term="不务正业系列" scheme="https://zhangjk98.xyz/categories/%E4%B8%8D%E5%8A%A1%E6%AD%A3%E4%B8%9A%E7%B3%BB%E5%88%97/"/>
    
    
    <category term="AUR" scheme="https://zhangjk98.xyz/tags/AUR/"/>
    
    <category term="Archlinux" scheme="https://zhangjk98.xyz/tags/Archlinux/"/>
    
  </entry>
  
  <entry>
    <title>Linux新一代音视频服务Pipewire尝鲜</title>
    <link href="https://zhangjk98.xyz/pipewire/"/>
    <id>https://zhangjk98.xyz/pipewire/</id>
    <published>2020-12-03T07:58:26.000Z</published>
    <updated>2020-12-03T07:58:26.000Z</updated>
    
    <content type="html"><![CDATA[<p>听说fedora都上Pipiwire了，正好这几天有点空，那就试试吧 <a id="more"></a></p><p>Pipewire是红帽造的新一代音视频轮子，主要是用来取代PulseAudio、jack还有gstreams什么的。 <strong>据说</strong>延迟补偿还不错，<strong>据说</strong>能统一音视频框架还兼容PulseAudio和Jack，据说是朝着专业级音效去的。据说支持Wayland和平板，据说支持Flatpak之类的容器内使用，据说有类似PolKit的权限管理，不需要像PulseAudio那样新建音频用户组和添加用户了。。。。</p><blockquote><p>It provides a low-latency, graph based processing engine on top of audio and video devices that can be used to support the use cases currently handled by both pulseaudio and JACK. PipeWire was designed with a powerful security model that makes interacting with audio and video devices from containerized applications easy, with supporting Flatpak applications being the primary goal. Alongside Wayland and Flatpak we expect PipeWire to provide a core building block for the future of Linux application development.</p></blockquote><p>都是据说啊，被Wayland骗了一次之后我已经不敢信这些宣传了，先试试实际效果再说。</p><p>当然这个目前貌似只正经适配了GNOME和Fedora，不过据说兼容PulseAudio，Arch上的坑已经有人踩了好久了，现在还有点小问题，不过可以考虑上了。 昨天刚把Arch和笔记本的EndeavourOS更了python 3.9，除了autojump出了点小问题外一切正常。索性直接上Pipewire看看吧，反正笔记本那个全损音质也跟没有一样，换了说不定能抢救一下。</p><h2 id="安装">安装</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S pipewire<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>要替代PulseAudio和Jack装这两个包<code>pipewire-pulse</code>、<code>pipewire-jack-dropin</code>。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yay -S pipewire-jack-dropin pipewire-pulse<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后systemd设置一下（archwiki说蓝牙设备需要手动设置一下，编辑<code>/etc/pipewire/pipewire.conf</code>，我手头没蓝牙耳机就不弄了）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl <span class="token builtin class-name">enable</span> --user pipewire-pulse<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后退出登录或重启。</p><p>运行<code>pactl info</code>，如果看到</p><pre class="line-numbers language-log" data-language="log"><code class="language-log">Server Name: PulseAudio (on PipeWire 0.3.17)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>说明正常。</p><h3 id="蓝牙设备">蓝牙设备</h3><p>感谢室友赞助的一个索尼蓝牙音箱用于测试</p><p>pipewire自带了蓝牙的模块，不需要像PulseAudio那样安装<code>pulseaudio-bluetooth</code>之类的包</p><p>安装了pipewire-pulse之后编辑<code>/etc/pipewire/pipewire.conf</code>在<code>exec /usr/bin/pipewire-media-session</code>后面加上<code>-e bluez5</code>就可以使用了。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">exec</span> /usr/bin/pipewire-media-session -e bluez5<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="卸载">卸载</h2><p>换回PulseAudio或者Jack可以用这个<span class="exturl" data-url="aHR0cHM6Ly9naXRsYWIuZnJlZWRlc2t0b3Aub3JnL3BpcGV3aXJlL3BpcGV3aXJlLy0vc25pcHBldHMvMTE2NA==">脚本<i class="fa fa-external-link-alt"></i></span></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /usr/lib64/<span class="token function">sudo</span> <span class="token function">rm</span> /usr/lib64/libpulse-mainloop-glib.so.0.999.0<span class="token function">sudo</span> <span class="token function">rm</span> /usr/lib64/libpulse-simple.so.0.999.0<span class="token function">sudo</span> <span class="token function">rm</span> /usr/lib64/libpulse.so.0.999.0<span class="token function">sudo</span> <span class="token function">rm</span> /usr/lib64/libjack.so.0.999.0<span class="token function">sudo</span> <span class="token function">rm</span> /usr/lib64/libjacknet.so.0.999.0<span class="token function">sudo</span> <span class="token function">rm</span> /usr/lib64/libjackserver.so.0.999.0<span class="token function">sudo</span> ldconfig<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="更新一点实测">更新一点实测</h2><h3 id="人耳效果和使用体验">人耳效果和使用体验</h3><p>昨天回到宿舍，发现笔记本的EndeavourOS更新python 3.9 Optimus-manager 出问题了，好在很快解决了。 然后在工具人室友的帮助下测试了绿联的外接声卡一块、某大法耳机一个音响一个，傻多戴显示器自带小音箱一个，均工作正常。</p><p><img src="/pipewire/1607053618.png" /> <img src="/pipewire/1607053601.png" /></p><p>两种音质人耳都听不出差别，室友把两段音频放到Adobe Audition也看不出什么大区别</p><p>笔记本自带外放在KDE的设置中从其他音频播放设备切换过去之后出现没有声音的状况，经检查其实是有的，只是非常小，将声音调整到最大还是几乎要被笔记本的风扇声音盖住（这貌似不是pipewire的锅，），重启后外放音量恢复正常。 除了笔记本自带外放，在笔记本上音频切换KDE设置都没有出现卡死的状况，，声音也播放正常，没出现切换之后没声了的状况。</p><h3 id="面板参数">面板参数</h3><p>笔记本使用原来的PulseAudio详情：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml">Server String<span class="token punctuation">:</span> /run/user/1000/pulse/nativeLibrary Protocol Version<span class="token punctuation">:</span> <span class="token number">34</span>Server Protocol Version<span class="token punctuation">:</span> <span class="token number">34</span>Is Local<span class="token punctuation">:</span> yesClient Index<span class="token punctuation">:</span> <span class="token number">16</span>Tile Size<span class="token punctuation">:</span> <span class="token number">65472</span>User Name<span class="token punctuation">:</span> zjkHost Name<span class="token punctuation">:</span> zjk<span class="token punctuation">-</span><span class="token number">7591</span>Server Name<span class="token punctuation">:</span> pulseaudioServer Version<span class="token punctuation">:</span> <span class="token number">14.0</span>Default Sample Specification<span class="token punctuation">:</span> s16le 2ch 44100HzDefault Channel Map<span class="token punctuation">:</span> front<span class="token punctuation">-</span>left<span class="token punctuation">,</span>front<span class="token punctuation">-</span>rightDefault Sink<span class="token punctuation">:</span> alsa_output.pci<span class="token punctuation">-</span>0000_00_1f.3<span class="token punctuation">-</span>platform<span class="token punctuation">-</span>skl_hda_dsp_generic.HiFi__hw_sofhdadsp__sinkDefault Source<span class="token punctuation">:</span> combined.monitor<span class="token key atrule">Cookie</span><span class="token punctuation">:</span> 94e6<span class="token punctuation">:</span>e6bf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>更换pipewire-pulse之后：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml">Server String<span class="token punctuation">:</span> /run/user/1000/pulse/nativeLibrary Protocol Version<span class="token punctuation">:</span> <span class="token number">34</span>Server Protocol Version<span class="token punctuation">:</span> <span class="token number">34</span>Is Local<span class="token punctuation">:</span> yesClient Index<span class="token punctuation">:</span> <span class="token number">69</span>Tile Size<span class="token punctuation">:</span> <span class="token number">65472</span>User Name<span class="token punctuation">:</span> zjkHost Name<span class="token punctuation">:</span> zjk<span class="token punctuation">-</span><span class="token number">7591</span>Server Name<span class="token punctuation">:</span> PulseAudio (on PipeWire 0.3.17)Server Version<span class="token punctuation">:</span> 14.0.0Default Sample Specification<span class="token punctuation">:</span> float32le 2ch 48000HzDefault Channel Map<span class="token punctuation">:</span> front<span class="token punctuation">-</span>left<span class="token punctuation">,</span>front<span class="token punctuation">-</span>rightDefault Sink<span class="token punctuation">:</span> <span class="token key atrule">alsa_output.pci-0000:00:1f.3-platform-skl_hda_dsp_generic.HiFi</span><span class="token punctuation">:</span> hw<span class="token punctuation">:</span>sofhdadsp<span class="token punctuation">,</span><span class="token key atrule">5</span><span class="token punctuation">:</span> sinkDefault Source<span class="token punctuation">:</span> <span class="token key atrule">alsa_input.pci-0000:00:1f.3-platform-skl_hda_dsp_generic.HiFi</span><span class="token punctuation">:</span> <span class="token key atrule">hw:sofhdadsp</span><span class="token punctuation">:</span> source<span class="token key atrule">Cookie</span><span class="token punctuation">:</span> 6242<span class="token punctuation">:</span><span class="token number">4425</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>看起来参数是好了一点，实测听不出来。</p><h3 id="其他">其他</h3><p>据说pipewire音视频延迟低了，手头没有专业设备没法测。其他的混响、均衡、采样手头没有专业设备也测不出来。</p><p>视频的话，浏览器HTML5播放器和本地VLC能正常播放。笔记本播放youtube4k视频外接4k显示器硬解没有大问题。VLC播放用N卡（笔记本的1650）解码也没有问题，驱动正常。</p><p>其他的视频方面和屏幕共享之类的功能暂时还没有测试。我也找不到熟悉视频的工具人了，等找到了再说吧，自己瞎测估计也测不出什么来。</p><h2 id="体验">体验</h2><h3 id="音质">音质</h3><p><code>pw-cli</code>显示的台式机面板参数</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ pw-cli info <span class="token number">0</span>        id: <span class="token number">0</span>        permissions: rwxm        type: PipeWire:Interface:Core/3        cookie: <span class="token number">653542227</span>        user-name: <span class="token string">"zjk"</span>        host-name: <span class="token string">"zjk-allseries"</span>        version: <span class="token string">"0.3.17"</span>        name: <span class="token string">"pipewire-0"</span>*       properties:*               core.name <span class="token operator">=</span> <span class="token string">"pipewire-0"</span>*               context.profile.modules <span class="token operator">=</span> <span class="token string">"none"</span>*               core.daemon <span class="token operator">=</span> <span class="token string">"true"</span>*               link.max-buffers <span class="token operator">=</span> <span class="token string">"16"</span>*               default.clock.rate <span class="token operator">=</span> <span class="token string">"48000"</span>*               default.clock.quantum <span class="token operator">=</span> <span class="token string">"1024"</span>*               default.clock.min-quantum <span class="token operator">=</span> <span class="token string">"32"</span>*               default.clock.max-quantum <span class="token operator">=</span> <span class="token string">"8192"</span>*               default.video.width <span class="token operator">=</span> <span class="token string">"640"</span>*               default.video.height <span class="token operator">=</span> <span class="token string">"480"</span>*               default.video.rate.num <span class="token operator">=</span> <span class="token string">"25"</span>*               default.video.rate.denom <span class="token operator">=</span> <span class="token string">"1"</span>*               mem.allow-mlock <span class="token operator">=</span> <span class="token string">"true"</span>*               cpu.max-align <span class="token operator">=</span> <span class="token string">"32"</span>*               object.id <span class="token operator">=</span> <span class="token string">"0"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>教研室的Arch台式机的老声卡接耳机和外接绿联声卡接耳机看不出什么大的区别。 Arch开Virtualbox里的win7能用，但是音质不知道为什么变差了特别多。</p><p>只有笔记本外放音质确实好了一点，我的笔记本外放能听出差别的那种，然而还是比win10差了不少（这个没有参考价值，我的笔记本Realtek驱动太阴间了）。<br />据说延迟低了，这个听不出来，手头上也没有专业设备。</p><p>其他的等我的校交响乐团的工具人室友回来了再说。</p><h3 id="遇到的问题">遇到的问题</h3><p>目前使用的问题大概有：</p><ol type="1"><li><code>systemctl status --user pipewire-pulse</code>报错</li></ol><pre class="line-numbers language-log" data-language="log"><code class="language-log">● pipewire-pulse.service - PipeWire PulseAudio     Loaded: loaded (&#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;user&#x2F;pipewire-pulse.service; enabled; vendor preset: enabled)     Active: active (running) since Thu 2020-12-03 17:10:09 CST; 12min agoTriggeredBy: ● pipewire-pulse.socket   Main PID: 1787 (pipewire-pulse)     CGroup: &#x2F;user.slice&#x2F;user-1000.slice&#x2F;user@1000.service&#x2F;app.slice&#x2F;pipewire-pulse.service             └─1787 &#x2F;usr&#x2F;bin&#x2F;pipewire-pulse12月 03 17:17:02 zjk-allseries pipewire-pulse[1787]: core 0x55fc6c39e410: proxy 0x55fc6c39e410 id:0: bound:-1 seq:1272 res:-32 (Broken pipe) msg:&quot;connection error&quot;12月 03 17:17:25 zjk-allseries pipewire-pulse[1787]: pulse-server 0x55fc6c30c300: [Google Chrome] ERROR command:42 (FLUSH_PLAYBACK_STREAM) tag:168 error:5 (No such file or directory)12月 03 17:17:25 zjk-allseries pipewire-pulse[1787]: pulse-server 0x55fc6c30c300: [Google Chrome] ERROR command:41 (CORK_PLAYBACK_STREAM) tag:169 error:5 (No such file or directory)12月 03 17:17:26 zjk-allseries pipewire-pulse[1787]: pulse-server 0x55fc6c30c300: [Google Chrome] ERROR command:41 (CORK_PLAYBACK_STREAM) tag:170 error:5 (No such file or directory)12月 03 17:19:16 zjk-allseries pipewire-pulse[1787]: pulse-server 0x55fc6c3deb80: [code] ERROR command:18 (PLAY_SAMPLE) tag:3 error:5 (No such file or directory)12月 03 17:19:16 zjk-allseries pipewire-pulse[1787]: pulse-server 0x55fc6c3deb80: [code] ERROR command:18 (PLAY_SAMPLE) tag:4 error:5 (No such file or directory)12月 03 17:19:16 zjk-allseries pipewire-pulse[1787]: pulse-server 0x55fc6c3deb80: [code] ERROR command:18 (PLAY_SAMPLE) tag:5 error:5 (No such file or directory)12月 03 17:19:17 zjk-allseries pipewire-pulse[1787]: pulse-server 0x55fc6c3deb80: [code] ERROR command:18 (PLAY_SAMPLE) tag:6 error:5 (No such file or directory)12月 03 17:19:18 zjk-allseries pipewire-pulse[1787]: pulse-server 0x55fc6c3deb80: [code] ERROR command:18 (PLAY_SAMPLE) tag:7 error:5 (No such file or directory)12月 03 17:19:18 zjk-allseries pipewire-pulse[1787]: pulse-server 0x55fc6c3deb80: [code] ERROR command:18 (PLAY_SAMPLE) tag:8 error:5 (No such file or directory)***12月 03 18:58:02 zjk-allseries pipewire-pulse[1787]: pulse-server 0x55fc6c37c6f0: [VirtualBox] ERROR command:23 (GET_SOURCE_INFO) tag:249 error:5 (No such file or directory)12月 03 19:00:16 zjk-allseries pipewire-pulse[1787]: pulse-server 0x55fc6c37c6f0: [VirtualBox] ERROR command:23 (GET_SOURCE_INFO) tag:376 error:5 (No such file or directory)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>不过貌似都不影响使用</p><ol start="2" type="1"><li>KDE调节音量的按钮换了之后经常卡死（KDE下面整个任务栏都卡死了），恢复之后调节音量无效</li></ol><p><img src="/pipewire/1606991672.png" /></p><ol start="3" type="1"><li>KDE音频切换设置偶尔卡死</li></ol><p>下图这个</p><p><img src="/pipewire/1606992266.png" /> <img src="/pipewire/1606992430.png" /></p><p>点终止之后整个plasma桌面都无了</p><p><img src="/pipewire/1606992508.png" /></p><ol start="4" type="1"><li><p>上图中的Build-in Audio切换之后耳机没有声音</p></li><li><p>切换外放麦克风和耳机之后再切回来没声了</p></li><li><p>有几个人之前说virtualbox会冲突，我这暂时没遇到</p></li></ol><!-- 如果需要屏幕共享，chrome需要启用WebRTC PipWire支持`chrome://flags/#enable-webrtc-pipewire-capturer`，可能需要用`libpipewire02` --><h2 id="参见">参见</h2><p><span class="exturl" data-url="aHR0cHM6Ly9waXBld2lyZS5vcmcv">https://pipewire.org/<i class="fa fa-external-link-alt"></i></span><br /><span class="exturl" data-url="aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvaW5kZXgucGhwL1BpcGVXaXJl">https://wiki.archlinux.org/index.php/PipeWire<i class="fa fa-external-link-alt"></i></span><br /><span class="exturl" data-url="aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvUHVsc2VBdWRpbw==">https://zh.wikipedia.org/wiki/PulseAudio<i class="fa fa-external-link-alt"></i></span><br /><span class="exturl" data-url="aHR0cHM6Ly9sd24ubmV0L0FydGljbGVzLzczNDEwMy8=">https://lwn.net/Articles/734103/<i class="fa fa-external-link-alt"></i></span><br /><span class="exturl" data-url="aHR0cHM6Ly9ibG9ncy5nbm9tZS5vcmcvdXJhZXVzLzIwMjAvMDkvMDQvcGlwZXdpcmUtbGF0ZS1zdW1tZXItdXBkYXRlLTIwMjAv">https://blogs.gnome.org/uraeus/2020/09/04/pipewire-late-summer-update-2020/<i class="fa fa-external-link-alt"></i></span><br /><span class="exturl" data-url="aHR0cHM6Ly9naXRsYWIuZnJlZWRlc2t0b3Aub3JnL3BpcGV3aXJlL3BpcGV3aXJlLy0vd2lraXMvTGltaXRhdGlvbnMtaW4tMC4z">pipewire 0.3的一些局限和问题<i class="fa fa-external-link-alt"></i></span></p><h2 id="番外arch滚动更新pyhton3.9">番外：Arch滚动更新pyhton3.9</h2><p>昨天晚上回去本来想直接装上pipewire试一下的，结果发现我笔记本外接4k显示器只有一个最高2k的显示选项。而且开机的混合驱动变成只有Intel集显了。</p><p>检查了一下是更新python3.9后optimus-manager坏了。</p><p>到群里看了一下好多都是因为Optimus Manger更新出了问题，貌似这此升级python3.9的桌面用户黑屏进不去的基本都是Nvidia显卡，Optimus-manager出问题直接SDDM进不去了。</p><p>本来以为出问题的只有一个autojump</p><pre class="line-numbers language-log" data-language="log"><code class="language-log">  File &quot;&#x2F;usr&#x2F;bin&#x2F;autojump&quot;, line 39, in &lt;module&gt;    from autojump_argparse import ArgumentParserModuleNotFoundError: No module named &#39;autojump_argparse&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>然后检查了一下python 3.8 升级 python 3.9 失败的包</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /usr/lib/python3.8/site-packages<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">/usr/lib/python3.8/site-packages $ <span class="token function">ls</span>optimus_manager  optimus_manager-1.3-py3.8.egg-info  __pycache__  tcping-0.1.1rc1-py3.8.egg-info  tcping.py<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>只有Optimus,autojump和tcping，还好。</p><p>重新rebuild编译一下然后再重启Optimus Manager就好了，其他几个同理（如果还不行就用python 3.8 rebuild）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yay -Rsc optimus-manager-qtyay -S optimus-manager-qt <span class="token comment"># package to clean build 选 ALL</span><span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> optimus-manager<span class="token function">sudo</span> systemctl start optimus-manager<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>相关issue见 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0Fza2Fubnovb3B0aW11cy1tYW5hZ2VyL2lzc3Vlcy8xNzQ=">https://github.com/Askannz/optimus-manager/issues/174<i class="fa fa-external-link-alt"></i></span></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;听说fedora都上Pipiwire了，正好这几天有点空，那就试试吧</summary>
    
    
    
    <category term="不务正业系列" scheme="https://zhangjk98.xyz/categories/%E4%B8%8D%E5%8A%A1%E6%AD%A3%E4%B8%9A%E7%B3%BB%E5%88%97/"/>
    
    
    <category term="pipewire" scheme="https://zhangjk98.xyz/tags/pipewire/"/>
    
  </entry>
  
  <entry>
    <title>HTTPS二三事</title>
    <link href="https://zhangjk98.xyz/https-in-some-specific-scene/"/>
    <id>https://zhangjk98.xyz/https-in-some-specific-scene/</id>
    <published>2020-11-26T15:08:43.000Z</published>
    <updated>2020-11-26T15:08:43.000Z</updated>
    
    <content type="html"><![CDATA[<p>未完待续 <a id="more"></a></p><p>诸如<code>git clone</code> 、 <code>apt/yum/pacman</code>下载公开文件，到底有没有必要用HTTPS(或者SSH之类的其他加密方式)？一些不传输帐号密码之类的隐私的不怎么改变网页内容的静态网站有必要吗？</p><p>以前我也觉得没有必要，结果就被险恶的世道教做人了。 差不多可以盖棺定论了，如果处于运营商和防火墙的慈祥关爱中，有必要，那可太有必要了。</p><p>咋说，本来HTTPS是拿来给你们防范FBI、CIA、黑皮、灰产人士、高雅人士针对某个、某些特定目标搞中间人攻击偷你密码、篡改你获取的数据啥的。这种用途下载公开的包、镜像、一些仓库里的代码倒是没必要上HTTPS，普通人下个安装包也没啥东西值得攻击的，而且连到服务器下一个体积不太小的压缩包/二进制文件也不太好掺砂子，而且下完了之后还有GPG校验，传输的时候多套一个HTTPS大部分时候。而且HTTPS两边都有带宽、加解密之类的成本损耗，下载大文件是不太划算的。</p><p>可能他们也妹想到某些运营商和防火墙能这么流氓，直接公然大范围污染。</p><h2 id="目前使用https的一些小牺牲">目前使用HTTPS的一些小牺牲</h2><h3 id="成本">成本</h3><p>一般来说：</p><p>需要证书，证书要给签发机构交钱<br />延迟相比HTTP略高，不过TLS1.3之后 加密解密吃资源</p><p>上面那些在今天看来问题都不是特别大，现在有很多 Let's Encrypt 之类的免费的（收费的CA证书也比十年前便宜太多了），现在的CPU性能对于看网页肯定是过剩的，延迟在TLS1.3以后也不是太大问题</p><h3 id="有些工具没有https支持">有些工具没有HTTPS支持</h3><p>比如OpenWRT那个官方固件一开始就没有HTTPS支持，你得自己装一个。</p><h3 id="很多老网站对https的支持也不太好">很多老网站对HTTPS的支持也不太好</h3><p>用了 HTTPS Everywhere 插件之后经常会发现很多网站体验极差，强制HTTPS之后各种资源加载不出来（关键是很多时候你还意识不到）</p><p><img src="/https-in-some-specific-scene/1606701614.png" /> 比如你电的图书馆，如果用的是HTTPS， 那你的图书位置看不到了（我来这找书最重要的就是这个东西，结果你不告诉我几楼）</p><p><img src="/https-in-some-specific-scene/1606702010.png" /></p><p>这个问题自从17年就有了，一直到现在，都还没修，全站HTTPs遥遥无期。 当然这个问题是因为HTTPS和HTTP的混合 会被新版chrome浏览器悄无声息地拦截，在console里才能看到一个</p><pre class="line-numbers language-log" data-language="log"><code class="language-log">Mixed Content: The page at &#39;&lt;URL&gt;&#39; was loaded over HTTPS, but requested an insecure script &#39;&lt;URL&gt;&#39;. This request has been blocked; the content must be served over HTTPS.<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>你用尊贵的 <em>Internet Explorer</em> 或者老版本chrome是没有这种问题的，但是会加载漫长的几秒钟（在图书馆那个渣配的机子上甚至可能等待10秒），然后弹出来一个大大的警告框，问你<code>是否只查看安全传送的内容</code>，如果你点了<code>是</code>，恭喜你，那你看不到图书的位置了。（我这几年已经无数次看到有倒霉孩子点了是然后找不到书在什么地方了）</p><p>当然很多大网站也在换到HTTPS上也各种问题，知乎上个月准备全站HTTPS的时候出了好几天幺蛾子，<code>400 Bad Request The plain HTTP request was sent to HTTPS port</code>。(不过知乎这个只在乎APP，web版改版之后bug越来越多已经常态化了) <img src="/https-in-some-specific-scene/1606731950.png" /></p><h3 id="登陆认证页面没法劫持https">登陆认证页面没法劫持HTTPS</h3><p>某些登陆认证的界面的原理和劫持差不多，用的<span class="exturl" data-url="aHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvQ2FwdGl2ZV9wb3J0YWw=">强制门户<i class="fa fa-external-link-alt"></i></span>（Captive Portal） 强制门户在自己的DNS服务器中将用户的HTTP请求302重定向到登陆页面 HTTPS没法劫持（尤其是用了HSTS的情况下），结果就卡在那里弹不出登陆认证的界面了。（其实我建议你出门在外使用流量，不要用商场的WIFI，不要贪便宜用手机验证码登陆或者微信登陆）</p><p>有个网站叫<span class="exturl" data-url="aHR0cDovL25ldmVyc3NsLmNvbS8=">neverssl<i class="fa fa-external-link-alt"></i></span>，当你弹不出WIFI登录界面的时候可以访问一下。（其实你随便输入一个什么）</p><p>一般浏览器会有相应的机制，比如火狐的 detect portal， 会向 <span class="exturl" data-url="aHR0cDovL2RldGVjdHBvcnRhbC5maXJlZm94LmNvbQ==">http://detectportal.firefox.com<i class="fa fa-external-link-alt"></i></span> 周期性的发包。</p><p>有的时候登陆认证门户不认200状态码,得用204，然后302跳转到登陆界面。 （提供204状态码的网站很多了，比如<span class="exturl" data-url="aHR0cHM6Ly93d3cudjJleC5jb20vdC8zMDM4ODk/cD0x">v站的这个<i class="fa fa-external-link-alt"></i></span>，基本都是给安卓用的，原生安卓会试图访问谷歌提供的204状态码的服务器来判断是否联网成功，）</p><h3 id="ca证书">CA证书</h3><p>CA证书颁发商公然耍流氓你有什么办法 https://www.zhihu.com/question/50298017 https://www.zhihu.com/question/22795329</p><p>CNNIC</p><p>HSTS MITM SSLStrip HTTP+Strict+Transport+Security HTTPSStrip https://blog.cuiyongjian.com/safe/https-attack/ https://www.zhihu.com/question/22779469</p><h2 id="apt下载更新是否使用https的争议">apt下载更新是否使用HTTPS的争议</h2><figure><img src="/https-in-some-specific-scene/image-20201127170614232.png" alt="image-20201127170614232" /><figcaption aria-hidden="true">image-20201127170614232</figcaption></figure><p>之前有一个叫的网站上的一篇文章叫，引起了不少的讨论。大概的观点是HTTPS在下载这种公共资源的时候没有必要啊。</p><p><strong>而现在，这个网站已经变成体育博彩网站了，造化弄人啊。</strong></p><p>理由主要有：</p><ol type="1"><li><p>因为你有GPG校验，HTTPS显得没有什么太大必要。你下下来用GPG校验一下就行了，就算你用HTTPS下载，也只能保证传输过程中没有被篡改，。</p></li><li><p>匿名和隐私的问题：你连上镜像站，那明显是在下镜像源的包。即使你用了HTTPS，还是能通过你下载的包的大小知道你下了些啥（就算你用<code>apt-transport-tor</code>也有这个问题）。</p></li><li><p>还有一个重放攻击（Replay Attacks）的问题，可能有人将包替换为没有安全更新的老版本（签名校验能通过）。</p><p>由于apt有自己的时间戳，晚于这个时间的都被认为非法，时间戳在一段时间内自动失效</p></li></ol><h3 id="现在再看">现在再看</h3><p>当时我还是觉得这个写的有点道理，不到一年就被 cqu mirrors 的事情啪啪打脸。</p><p>当然这个作者显然没考虑CQU Mirrors事件之类的情况。</p><h2 id="重庆大学镜像源被搞">重庆大学镜像源被搞</h2><p>这个事件一出基本可以终结大部分争议了（至少国内是这样的）</p><p>几周前他们那边学校网管的防火墙拦截了80端口的部分HTTP请求，比如一些翻墙工具的包。如果你HTTP明文访问80端口，你会被直接RST。后来在与网管的交涉下恢复了。</p><h2 id="github用ssh还是https">github用SSH还是HTTPS</h2><p>按说SSH这种TCP+SSL的协议会比HTTPS这种跑在应用层的快不少。然而在天朝SSH挺容易被运营商Qos的， HTTPS可以薅cloudflare之类的CDN的羊毛搭github反代。给HTTPS挂socks5/HTTP代理也方便。</p><h2 id="dns-over-https">DNS over HTTPS</h2><p>众所周知传统的DNS是裸UDP的，后来由于 有了使用TCP的DNS，后来出于隐私的考虑又有了DoH（DNS over HTTPS）和DoT（DNS over TLS） 那为什么不用DoT呢？DoT那个853端口太显眼了，分分钟被运营商搞。 DoH最大的问题是慢，如果直接使用远程的DoH，查询发过去和发回来都走HTTPS。在国内用cloudflare的DoH体验极差，如果想用最好自己搭一个。 另一个问题是不支持ECS</p><p>其实DoH在国内也不太推荐，主要是对速度影响太大了。有的方案是走分流，国内IP用国内的DNS，国外的走DoH或者在v2ray之类的跳板上用远程DNS 而且保护隐私方面也不太能</p><p>另，前几天360推出了收费浏览器，居然还有什么国密DoH，号称保护隐私。周红衣说是那就是吧。</p><h2 id="苹果的ocsp">苹果的OCSP</h2><h2 id="闲谈">闲谈</h2><p>HTTPS这种保护隐私的东西按说很多大公司推进起来都很不积极的。但是靠着隐私和广告挣钱的谷歌和百度推起HTTPs来相当的积极，还一口一个在意用户隐私。 谷歌当年大力推广HTTPS的时候还立着<em>不作恶</em>的牌坊，2010年的你说它在乎用户隐私，姑且信了。 谷歌为了推HTTPS，直接抬高HTTPS网站相对于HTTP网站的SEO搜索权重。</p><p>百度也是国内最早一批全站HTTPS的，，当然能说出来“你要隐私干什么”百度显然不会这么好心，嗯，<strong>运营商猛于虎也</strong></p><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzI4Mzc5MDg4">如何看待百度全站搜索进入 HTTPS 时代？<i class="fa fa-external-link-alt"></i></span></p><figure><img src="/https-in-some-specific-scene/image-20201127202536977.png" alt="image-20201127202536977" /><figcaption aria-hidden="true">image-20201127202536977</figcaption></figure><p>百度运维团队当时发布的系列文章还不错，然而</p><p><img src="/https-in-some-specific-scene/1606707060.png" /></p><p>你用百度搜他们的文章，第一条第二条是CSDN和简书的抄袭转载，第三条是他们的，然而500挂掉了。这是怎么回事呢，对于这么好的文章没有被百家号抄袭，小编也很感到惊讶呢。</p><h2 id="参考和链接">参考和链接</h2><p>https://breakthrough.blog/broadcast/31929</p><p>https://v2ex.com/t/725979</p><p>https://www.solidot.org/story?sid=66084</p><p>很早就有了https://www.v2ex.com/t/622672?p=1</p><p>https://sneak.berlin/i18n/2020-11-12-your-computer-isnt-yours.zh/</p><p>https://blog.jacopo.io/en/post/apple-ocsp/</p><p>https://twitter.com/quakewang/status/1327880394801176576</p><p>https://www.reddit.com/r/linux/comments/aidxwa/why_does_apt_not_use_https/ https://blog.cuiyongjian.com/engineering/git-https-ssh/<br />https://stackoverflow.com/questions/11041729/why-does-github-recommend-https-over-ssh<br />https://news.ycombinator.com/item?id=18958679&amp;p=2 https://askubuntu.com/questions/146108/how-to-use-https-with-apt-get https://unix.stackexchange.com/questions/90227/why-there-is-no-https-transport-for-debian-apt-tool</p><p>https://web.archive.org/web/20180125154639/https://whydoesaptnotusehttps.com/ why does apt not use https的存档</p><p>https://wiki.debian.org/SecureApt</p><p><span class="exturl" data-url="aHR0cDovL3d3dy5tb3NlcndhcmUuY29tLzIwMDkvMDYvZmlyc3QtZmV3LW1pbGxpc2Vjb25kcy1vZi1odHRwcy5odG1s">The First Few Milliseconds of an HTTPS Connection<i class="fa fa-external-link-alt"></i></span></p><p>https://github.com/xirong/my-web/blob/master/readme.md</p><p>https://cloud.tencent.com/developer/article/1399863 APT 为什么不使用 HTTPS 协议？</p><h2 id="附">附</h2><h3 id="cqu-mirrors事件官方的完整说明">CQU Mirrors事件官方的完整说明</h3><p>这里放一下CQU电报新闻的官方声明，地址：https://t.me/cqumirror</p><blockquote><p>2020.11.7</p><p>#warnings 因学校防火墙过滤规则禁止明文访问部分文件，请使用 https 方式访问镜像站</p><p>请暂时更换到其他镜像站。校信息中心进行防火墙维护及站群升级，目前镜像站处于完全不可用状态。恳请谅解。</p><p>2020.11.8</p><p>请务必使用https协议！目前使用http协议获取部分文件将被网络中心防火墙拦截并封禁 IP 约5分钟（初次访问）！目前无任何解决方法，我们仍在积极与校方沟通看是否能够放行。</p><p>2020.11.9</p><p>由于网络中心系统升级和维护，外部流量对于内部服务的访问将被拦截。目前未能知晓何时恢复。如急需使用镜像服务请更换至其他镜像服务器。对所造成的不便恳请谅解。</p><p>2020.11.11</p><p>已确认 IDC 正常开放外网流量访问。镜像服务恢复正常。但仍请不要明文访问数据库文件。目测防火墙策略已经调整但并未有明确证据表明限制放宽。请使用 HTTPS 协议访问镜像。</p><p>2020.11.18</p><p>经沟通目前 IDC 不再拦截明文入站请求。http 协议访问恢复</p></blockquote><p>而且cqu国庆的时候也习惯性闭关锁校，<del>跟你电完全一致</del>（不是，全国高校的网管怎么都一个样啊）</p><blockquote><p>由于不可抗力，国庆期间重庆大学多个对外服务将无法从外部访问。镜像站服务亦受到牵连。恢复对外服务时间未知。对于所造成的不便我们深感遗憾。</p></blockquote><h3 id="为什么apt不使用https的原文">为什么apt不使用HTTPS的原文</h3><p>这个网站已经变成在线发排的体育博彩网站了。这里附上原文</p><blockquote><h1 id="why-does-apt-not-use-https">Why does APT not use HTTPS?</h1><p><em>"Isn't it more secure…?"</em></p><h2 id="tldr">tl;dr</h2><p>HTTPS is used to prevent intruders from being able to listen to communications between you and websites you visit, as well as to avoid data being modified without your knowledge.</p><p>However, files obtained by APT are accompanied by their own signature which allows your system to check they originated from your distribution.</p><p>These signatures are checked against a small set of trusted keys already stored on your computer. Downloaded files are rejected by APT if they are signed by an unknown key<span class="exturl" data-url="aHR0cHM6Ly93ZWIuYXJjaGl2ZS5vcmcvd2ViLzIwMTgwMTI1MTU0NjM5L2h0dHBzOi8vd2h5ZG9lc2FwdG5vdHVzZWh0dHBzLmNvbS8jZm9vdG5vdGUtYXB0LXVua293bi1rZXk=">1<i class="fa fa-external-link-alt"></i></span> or are missing valid signatures. This ensures that the packages you are installing were authorised by your distribution and have not been modified or replaced since.</p><p>HTTPS can not detect if malicious tampering has occurred on the disks of the server you are downloading from. There is little point "securely" transfering a compromised package.</p><h2 id="but-what-about-privacy">But what about privacy?</h2><p>HTTPS does not provide meaningful privacy for obtaining packages. As an eavesdropper can usually see which hosts you are contacting, if you connect to your distribution's mirror network it would be fairly obvious that you are downloading updates.</p><p>Furthermore, even over an encrypted connection it is not difficult to figure out which files you are downloading based on the size of the transfer<span class="exturl" data-url="aHR0cHM6Ly93ZWIuYXJjaGl2ZS5vcmcvd2ViLzIwMTgwMTI1MTU0NjM5L2h0dHBzOi8vd2h5ZG9lc2FwdG5vdHVzZWh0dHBzLmNvbS8jZm9vdG5vdGUtdG9y">2<i class="fa fa-external-link-alt"></i></span>. HTTPS would therefore only be useful for downloading from a server that also offers other packages of similar or identical size.</p><p>What's more important is <em>not</em> that your connection is encrypted but that the files you are installing haven't been modified.</p><h2 id="overly-trusting-cas">Overly trusting CAs</h2><p>There are over 400 "Certificate Authorities" who may issue certificates for any domain. Many have poor security records and some are even explicitly controlled by governments<span class="exturl" data-url="aHR0cHM6Ly93ZWIuYXJjaGl2ZS5vcmcvd2ViLzIwMTgwMTI1MTU0NjM5L2h0dHBzOi8vd2h5ZG9lc2FwdG5vdHVzZWh0dHBzLmNvbS8jZm9vdG5vdGUtY2E=">3<i class="fa fa-external-link-alt"></i></span>.</p><p>This means that HTTPS provides little-to-no protection against a targeted attack on your distribution's mirror network. You could limit the set of valid certificates that APT would accept, but that would be be error-prone and unlikely worth the additional hassle over the existing public-key scheme.</p><h2 id="why-not-provide-https-anyway">Why not provide HTTPS anyway?</h2><p>Your distribution could cryptographically sign the files using the existing scheme and additionally serve the files over HTTPS to provide "defense in depth."</p><p>However, providing a huge worldwide mirror network available over SSL is not only a complicated engineering task (requiring the secure exchange and storage of private keys), it implies a misleading level of security and privacy to end-users as described above.</p><p>A switch to HTTPS would also mean you could not take advantage of local proxy servers for speeding up access and would additionally prohibit many kinds of peer-to-peer mirroring where files are stored on servers not controlled directly by your distribution. This would disproportionately affect users in remote locales.</p><h2 id="ah-what-about-replay-attacks">Ah, what about replay attacks?</h2><p>One issue with a naïve signing mechanism is that it does not guarantee that you are seeing the most up-to-date version of the archive.</p><p>This can lead to a <em>replay attack</em> where an attacker substitutes an archive with an earlier—unmodified—version of the archive. This would prevent APT from noticing new security updates which they could then exploit.</p><p>To mitigate this problem, APT archives includes a timestamp after which all the files are considered stale<span class="exturl" data-url="aHR0cHM6Ly93ZWIuYXJjaGl2ZS5vcmcvd2ViLzIwMTgwMTI1MTU0NjM5L2h0dHBzOi8vd2h5ZG9lc2FwdG5vdHVzZWh0dHBzLmNvbS8jZm9vdG5vdGUtdmFsaWQtdW50aWw=">4<i class="fa fa-external-link-alt"></i></span>.</p><h2 id="where-can-i-find-out-more">Where can I find out more?</h2><p>More technical details may be found on the <em><span class="exturl" data-url="aHR0cHM6Ly93ZWIuYXJjaGl2ZS5vcmcvd2ViLzIwMTgwMTI1MTU0NjM5L2h0dHBzOi8vd2lraS5kZWJpYW4ub3JnL1NlY3VyZUFwdA==">SecureAPT<i class="fa fa-external-link-alt"></i></span></em> wiki page.</p><h3 id="footnotes">Footnotes</h3><ol type="1"><li>This appears as <code>Release: The following signatures couldn't be verified because the public key is not available</code>.</li><li>This may even be the case if using Tor via (for example) <span class="exturl" data-url="aHR0cHM6Ly93ZWIuYXJjaGl2ZS5vcmcvd2ViLzIwMTgwMTI1MTU0NjM5L2h0dHBzOi8vcmV0b3V0LmNvLnVrL2Jsb2cvMjAxNC8wNy8yMS9hcHQtdHJhbnNwb3J0LXRvcg==">apt-transport-tor<i class="fa fa-external-link-alt"></i></span>.</li><li>See, for example, <em><span class="exturl" data-url="aHR0cHM6Ly93ZWIuYXJjaGl2ZS5vcmcvd2ViLzIwMTgwMTI1MTU0NjM5L2h0dHBzOi8vc2VjdXJpdHkuc3RhY2tleGNoYW5nZS5jb20vcXVlc3Rpb25zLzUzMTE3L3doYXQtdHJ1c3RlZC1yb290LWNlcnRpZmljYXRpb24tYXV0aG9yaXRpZXMtc2hvdWxkLWktdHJ1c3Q=">What trusted root certification authorities should I trust?<i class="fa fa-external-link-alt"></i></span></em> on StackOverflow.</li><li>See the <em><span class="exturl" data-url="aHR0cHM6Ly93ZWIuYXJjaGl2ZS5vcmcvd2ViLzIwMTgwMTI1MTU0NjM5L2h0dHBzOi8vd2lraS5kZWJpYW4ub3JnL0RlYmlhblJlcG9zaXRvcnkvRm9ybWF0I0RhdGUuMkNfVmFsaWQtVW50aWw=">Date, Valid-Until<i class="fa fa-external-link-alt"></i></span></em> section of the <code>DebianRepository</code> page on the Debian Wiki.</li></ol></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;未完待续</summary>
    
    
    
    
    <category term="HTTPS" scheme="https://zhangjk98.xyz/tags/HTTPS/"/>
    
  </entry>
  
  <entry>
    <title>本站评论由valine更换为DisqusJS</title>
    <link href="https://zhangjk98.xyz/change-comment-to-disqusjs/"/>
    <id>https://zhangjk98.xyz/change-comment-to-disqusjs/</id>
    <published>2020-11-26T12:25:41.000Z</published>
    <updated>2020-11-26T12:25:41.000Z</updated>
    
    <content type="html"><![CDATA[<p>由于近日不少采用valine作为评论系统网站的遭到几千个垃圾评论刷屏攻击，外加valine存在的安全隐患问题，放弃好看的valine，换用DisqusJS。 utteranc继续使用。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;由于近日不少采用valine作为评论系统网站的遭到几千个垃圾评论刷屏攻击，外加valine存在的安全隐患问题，放弃好看的valine，换用DisqusJS。 utteranc继续使用。&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>解决标注工具doccano卡顿缓慢问题（以及二次开发）</title>
    <link href="https://zhangjk98.xyz/solve-doccano-slow-and-secondary-development/"/>
    <id>https://zhangjk98.xyz/solve-doccano-slow-and-secondary-development/</id>
    <published>2020-11-25T01:36:00.000Z</published>
    <updated>2020-11-25T01:36:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>这是鸽了很久的一篇</p><a id="more"></a><h2 id="老鸽子发言">老鸽子发言</h2><p>去年年底还没爆发疫情的时候，润润实习回来说他们那用的标注工具是二次开发的doccano。大家一看确实好，决定用doccano替换之前教研室卖酱N年前拿Flask+jQuery写的</p><p>疫情在家的时候找不到什么苦力，教研室集体当工具人标注了几千份电子病历。doccano好用是挺好用的，然而这个东西经常卡顿严重。教研室配置不算差的服务器。 之前想着解决一下这个问题的，然而<strong>又不是不能用</strong>，就一直这么用了下去。当时Django已经忘的差不多了，前端Nuxt.js那一堆东西也不怎么熟。</p><p>一年过去了，doccano一直在维护更新，还加了不少新功能、升级了node、Django、python版本。连中文都有了，感动。</p><figure><img src="/solve-doccano-slow-and-secondary-development/image-20201126155932795.png" alt="doccano" /><figcaption aria-hidden="true">doccano</figcaption></figure><p>然而最近试了一下，更卡了，在issue随便一搜slow，能看到一堆，不过貌似都暂时没有解决。</p><p>当时在README的文档里面还有直接运行<code>django server</code>和<code>npm run</code>的方式，后来就变成Docker了。再后来变成Docker compose了，最后开发环境的搭建也变成Docker compose了。今年年初的时候（据某个师兄说，我没试过）在win10上面直接运行Nuxt前端和Django后端跑在本地没什么问题，也不卡。 之前我直接扔了一个在服务器上就卡，当时以为是教研室上传速度只有感天动地的1M/s校园网在疫情期间连到家里的网速瓶颈造成的。 这几天师兄跟我说他又搞了一个Docker的在服务器上，还是卡。</p><p>现在有两种怀疑，一个是Docker Compose的镜像没有精简，另一个是前端加载了太多东西（比如字体资源和一大堆图片还有动画什么的）</p><p>现在本地照着官方文档的方式跑一个看看</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/doccano/doccano.git<span class="token builtin class-name">cd</span> doccano/apppyenv virtualenv <span class="token number">3.8</span>.6 doccanopip <span class="token function">install</span> -r requirements.txtpython manage.py migratepython manage.py create_rolespython manage.py create_admin --noinput --username <span class="token string">"admin"</span> --email <span class="token string">"admin@example.com"</span> --password <span class="token string">"password"</span>python manage.py runserver<span class="token builtin class-name">cd</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span><span class="token builtin class-name">cd</span> doccano/frontend<span class="token function">npm</span> <span class="token function">install</span><span class="token function">npm</span> run dev<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>安装过程中报错<code>Running setup.py install for pyodbc ... error</code>,是个连 sql server 的库，不需要，删了 （如果你需要，在Arch上要装这个包<code>sudo pacman -S unixodbc</code>） 同理，<code>Running setup.py install for psycopg2-binary ... error</code>postgresql可以直接在arch仓库里面装包<code>yay -Syu python-psycopg2</code></p><p>本地看起来没什么大问题</p><h2 id="字体资源等cdn加载的问题">字体资源等CDN加载的问题</h2><p>感觉应该还是那几个资源加载的问题。在<code>/app/server/templates</code>里面</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://use.fontawesome.com/releases/v5.0.13/css/all.css<span class="token punctuation">"</span></span> <span class="token attr-name">integrity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sha384-DNOHZ68U8hZfKXOrtjWvjxusGo9WQnrNx2sqG0tfsghAvtVlRW3tvkXWZh58N9jp<span class="token punctuation">"</span></span>  <span class="token attr-name">crossorigin</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>anonymous<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://fonts.googleapis.com/css?family=Open+Sans:300,400,700<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdnjs.cloudflare.com/ajax/libs/bulma/0.7.1/css/bulma.min.css<span class="token punctuation">"</span></span> <span class="token attr-name">crossorigin</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>anonymous<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>```<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>前面两个在国内速度可能很慢，可以寻找国内的CDN替代，比如换为</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>https://fonts.loli.net/css?family=Open+Sans<span class="token punctuation">'</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>stylesheet<span class="token punctuation">'</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.bootcdn.net/ajax/libs/bulma/0.7.1/css/bulma.min.css<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>或者将字体直接删了用系统默认字体。那个cloudflare的CDN移动用户可能比较慢</p><p>还有一个<code>frontend/nuxt.config.js</code>里面的第25行，Material Icon 的CDN，可以改为<code>'https://fonts.googleapis.com/icon?family=Material+Icons'</code></p><h2 id="docker的问题">Docker的问题？</h2><p>Docker images没做好是容易出这些问题，然后就看了一下它的Dockerfile</p><p>貌似没什么大问题，也没有很多layers之类的会导致很慢的写法。</p><p>貌似这个Docker Compose装了一大堆的东西。我用的podman，貌似和docker-compose不一样的地方还挺多的。本地<code>podman-compose</code>了一下报错了。不太行。</p><p>一上来就装了一个Alpine，正常，然后上来又装了一堆<code>python3-dev libpq postgresql-dev unixodbc-dev musl-dev g++ libffi-dev</code> 那个<code>unixodbc-dev g++</code>是sql server的依赖，<code>libpq</code>是postgresql的依赖</p><h2 id="链接">链接</h2><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2RvY2Nhbm8vZG9jY2Fubw==">https://github.com/doccano/doccano<i class="fa fa-external-link-alt"></i></span> doccano的github repo<br /><span class="exturl" data-url="aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC80ODMyMDkwMQ==">https://zhuanlan.zhihu.com/p/48320901<i class="fa fa-external-link-alt"></i></span> 几年前的一个doccano介绍<br /><span class="exturl" data-url="aHR0cHM6Ly9kb2NjYW5vLmdpdGh1Yi5pby9kb2NjYW5vLw==">https://doccano.github.io/doccano/<i class="fa fa-external-link-alt"></i></span></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;这是鸽了很久的一篇&lt;/p&gt;</summary>
    
    
    
    
    <category term="doccano" scheme="https://zhangjk98.xyz/tags/doccano/"/>
    
    <category term="docker" scheme="https://zhangjk98.xyz/tags/docker/"/>
    
    <category term="Nuxt.js" scheme="https://zhangjk98.xyz/tags/Nuxt-js/"/>
    
    <category term="Django" scheme="https://zhangjk98.xyz/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>记一次Spring Cloud上线内存优化</title>
    <link href="https://zhangjk98.xyz/spring-cloud-performance-optimization/"/>
    <id>https://zhangjk98.xyz/spring-cloud-performance-optimization/</id>
    <published>2020-11-19T12:30:06.000Z</published>
    <updated>2020-11-19T12:30:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>没钱买 256G 内存的服务器的人是这样的</p><a id="more"></a><p>其实本来想说Spring Cloud上线性能优化的，想了想不是，这波，这波啊是性能反向优化（性能不性能的已经不重要了，用户量应该也不太大，先把成本压下来再说吧）。</p><h2 id="怎么回事">怎么回事</h2><p>朋友们好啊， 我是浑元形意太极门掌门人马保国。 刚才有个朋友问我： “马老师发生肾么事了？” 我说怎么回事。给我发了几张截图。 我一看！哦，原来是昨天，有两个微服务， 上线一天，一个内存<strong>996M</strong>，一个内存<strong>888M</strong>。 <img src="/spring-cloud-performance-optimization/image-20201118095216036.png" alt="它也说，啊，它截图也说了" /> <del>其实是我调了一下凑出来的这两个数</del> 它说要吃一点资源，我说可以。 诶，我一说它“啪”就站起来了，很快啊！ 然后上来就是，一个虚拟机，一个Docker，一个mysql，我全部防出去，防出去了啊。 防出去以后，自然是，上线部署以点到为止。没有限制它内存。 我笑一下，准备收工，因为这时间，按传统部署的点到为止，服务器已经够用了。我收工的时间回宿舍啦。 它突然袭击，还有8个微服务，来打我机子，啊。我大意了啊，没有闪。 来，抢！来，偷吃，我DDR3的，老内存，这好吗？这不好。 它说它是乱占用的，它可不是乱占用的。一个996，一个888，这明显是，有备而来！</p><h2 id="服务器">服务器</h2><p>正常的操作是加钱上大一点的内存，但是大内存VPS、杜甫它贵啊。以套路云香港为例，明晃晃的抢钱。而且16G内存及以上的版本已经无了。其他华南华北的VPS更贵一点，而且全都是1M小水管。</p><figure><img src="/spring-cloud-performance-optimization/image-20201120103456546.png" alt="套路云香港" /><figcaption aria-hidden="true">套路云香港</figcaption></figure><p><del>服务器内存比本地台式还小是要出大问题的,上线炸内存警告</del></p><p>102网吧里面服务器是有32G内存的，然而网速.....</p><p>服务器的套餐是学校20一个月20M的普通套餐（20M是下载速度，要想对外服务，上传速度可能只有几M）同为校园网。而且你电的教育网会有各种小问题，比如逢年过节十一国庆公网IP就被信息中心收回去了、校园网出口线路很差、域名也不好搞。</p><p>加钱换校园网的套餐也没用，你电沙河主楼的网速我很少见有人跑出过100Mbps以上的。而且问题是主楼那个墙里的网线，貌似是百兆网...教研室的老交换机上面还赫然贴着一张2010年的封条。。。</p><p>VPS的话选Debian，根据我多年用128M-1G内存VPS灵车漂移的印象，占用资源最少的少的就这个了（CentOS占用&gt;Ubuntu Server&gt;Debian&gt;VSP2ARCH）</p><p><del>其实我很想VPS2ARCH再次灵车漂移，但是毕竟是要出事背锅生产环境我不敢</del></p><h2 id="考虑扔掉docker">考虑扔掉Docker</h2><p>直接裸跑吧，不要再套几层了。</p><h2 id="其他能扔的">其他能扔的</h2><h3 id="redis">Redis</h3><p>这么点用户量没啥缓存的必要，关了</p><h3 id="nacos">NACOS</h3><p>动态注册发现之类的单机版也没必要用了，直接手动排查和维护吧。</p><p>NACOS的内存占用单机版在几百M左右（默认参数是<code>-Xms512m -Xmx512m -Xmn256m</code>，可以在startup.sh里面改，不过还是直接关掉比较清静。</p><figure><img src="/spring-cloud-performance-optimization/image-20201120212626344.png" alt="NACOS内存使用情况" /><figcaption aria-hidden="true">NACOS内存使用情况</figcaption></figure><h2 id="jdk版本">JDK版本</h2><p>之前一直用的java8-Openjdk。</p><p>后来看到据说 Oracle JDK 和 Open JDK 有性能差异，不同版本的jdk也有性能差异，java 8 的64位版本和32位版本也有区别（据说不超过2G内存的情况下貌似32位会好一些）</p><p>那就都试试吧。在Arch上打的jar包，就在本地测试了一下，没在服务器上试。</p><h3 id="不同版本内存占用">不同版本内存占用</h3><p>Arch有个脚本，可以切换OpenJDK的版本，</p><figure><img src="/spring-cloud-performance-optimization/image-20201124123102440.png" alt="archlinux-java" /><figcaption aria-hidden="true">archlinux-java</figcaption></figure><p>Oracle JDK 由于甲骨文公司不武德，跟各路开源组织（以及很多闭源福报公司）都闹僵了，Arch仓库不提供支持，得自己安装。</p><p>从AUR安装结果报错说<code>**==&gt; ERROR:** **Failure while downloading manual://jdk-8u271-linux-x64.tar.gz**    **Aborting...** error downloading sources: jdk8</code>，看了一下还得跑到<span class="exturl" data-url="aHR0cHM6Ly93d3cub3JhY2xlLmNvbS9qYXZhL3RlY2hub2xvZ2llcy9qYXZhc2UvamF2YXNlLWpkazgtZG93bmxvYWRzLmh0bWw=">Oracle<i class="fa fa-external-link-alt"></i></span>那里去注册下载然后pkgbuild</p><p>从阿里云的镜像可以不用注册下载<span class="exturl" data-url="aHR0cHM6Ly9jb2RlLmFsaXl1bi5jb20va2FyL29qZGs4LTh1MjcxL3Jhdy9tYXN0ZXIvamRrLTh1MjcxLWxpbnV4LXg2NC50YXIuZ3o=">jdk8<i class="fa fa-external-link-alt"></i></span>和<span class="exturl" data-url="aHR0cHM6Ly9jb2RlLmFsaXl1bi5jb20va2FyL29qZGsxMS0xMS4wLjkvcmF3L21hc3Rlci9qZGstMTEuMC45X2xpbnV4LXg2NF9iaW4udGFyLmd6">jdk11<i class="fa fa-external-link-alt"></i></span>，然后扔到<code>~/Downloads</code>里面，再运行<code>yay -Syu jdk8 jdk11</code>就好了。</p><p>java8 和java11 的编译通过了，看起来Oracle JDK效果是要好一点(也只有十几兆的微弱差别，感觉区别不大)，java14和java15还没试，以后有空再说。</p><h3 id="位和64位的差异">32位和64位的差异</h3><p>试了一下java8的32位和64位，貌似有一点区别，32位是节省一点资源。大概差距也在十几兆左右，区别不太大。</p><h2 id="jvm调参">JVM调参</h2><p>大概调了调，冲着压榨内存占用调的</p><p>几个比较重要的参数：</p><ul><li>-Xms</li><li>-Xmx</li><li></li></ul><p>暂时把参数改成这样子了：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">java -Xms16m -Xmx32m -XX:MaxMetaspaceSize<span class="token operator">=</span>48m -XX:CompressedClassSpaceSize<span class="token operator">=</span>8m -Xss256k -Xmn300m -XX:InitialCodeCacheSize<span class="token operator">=</span>4m -XX:ReservedCodeCacheSize<span class="token operator">=</span>8m -XX:MaxDirectMemorySize<span class="token operator">=</span>16m -jar service_ucenter-0.0.1-SNAPSHOT.jar<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>不太敢压榨的太狠，怕上线了OutofMemory。</p><p>现在每个jar包跑起来大概内存占用在300M以下。</p><h2 id="压缩mysql内存占用">压缩MySQL内存占用</h2><p>MySQL的内存占用压缩一下还是很低的，之前还在用wordpress的时候128M内存的灵车VPS跑起来没什么大问题。</p><h2 id="图片压缩">图片压缩</h2><p>浏览器F12 可以看到，在加载首页的时候，大部分html、css、js资源在300ms内加载完成，500ms以后开始加载图床资源，一直到最4000ms以后才加载完成。</p><figure><img src="/spring-cloud-performance-optimization/image-20201124170847425.png" alt="加载首页" /><figcaption aria-hidden="true">加载首页</figcaption></figure><p>下图是打开首页时png图片（阿里云图床，大小 926k）的时候的加载速度，耗时最长的就是下载图片的过程。</p><figure><img src="/spring-cloud-performance-optimization/image-20201124165004678.png" alt="image load speed" /><figcaption aria-hidden="true">image load speed</figcaption></figure><p>主要就是压缩图片大小了，jpg和png全换成webp，今年6月份Safari14已经支持webp了，现在主流浏览器都问题不大。</p><h2 id="重构">重构</h2><p>暂时不考虑，不过上线的时候砍掉几个无关紧要的功能倒是问题不大，这样只开4个微服务就差不多能用了。</p><h2 id="最终结果">最终结果</h2><p>如果不跑别的东西，一个4G内存的VPS已经够用了。</p><figure><img src="/spring-cloud-performance-optimization/image-20201124120817137.png" alt="首页" /><figcaption aria-hidden="true">首页</figcaption></figure><figure><img src="/spring-cloud-performance-optimization/image-20201124120944296.png" alt="全部课程页面" /><figcaption aria-hidden="true">全部课程页面</figcaption></figure><h2 id="参考">参考</h2><p>https://developers.redhat.com/blog/2017/04/04/openjdk-and-containers/</p><p>https://blog.kelu.org/tech/2018/05/30/running-a-jvm-in-a-container-without-getting-killed.html</p><p>https://www.cnblogs.com/ityouknow/p/5610232.html</p><p>https://github.com/flyleft/tip/blob/master/blog/springboot%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98.md</p><p>https://medium.com/<span class="citation" data-cites="yortuc/jvm-memory-allocation-in-docker-container-a26bbce3a3f2">@yortuc/jvm-memory-allocation-in-docker-container-a26bbce3a3f2</span></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;没钱买 256G 内存的服务器的人是这样的&lt;/p&gt;</summary>
    
    
    
    <category term="102网吧日常" scheme="https://zhangjk98.xyz/categories/102%E7%BD%91%E5%90%A7%E6%97%A5%E5%B8%B8/"/>
    
    
    <category term="jvm" scheme="https://zhangjk98.xyz/tags/jvm/"/>
    
    <category term="Spring" scheme="https://zhangjk98.xyz/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>上线一个Spring Cloud的课程管理服务项目</title>
    <link href="https://zhangjk98.xyz/course-managemnet/"/>
    <id>https://zhangjk98.xyz/course-managemnet/</id>
    <published>2020-11-18T13:40:24.000Z</published>
    <updated>2020-11-18T13:40:24.000Z</updated>
    
    <content type="html"><![CDATA[<p>先说一下感想：小作坊不适合微服务，请不起年薪五十万的架构师、年薪三十万的DevOps，没有各种没事造轮子重构刷KPI的目的，没有服务器集群的、开发一只手能数过来的，都谨慎尝试微服务。</p><a id="more"></a><h2 id="大概情况">大概情况</h2><ul><li><p>瞎折腾微服务玩，然而并没有集群（手里三台服务器垃圾配置只够乱开几个Docker玩）</p></li><li><p>并没有Golang，用的java（别问为什么又是java）</p></li><li><p>目测用户量不超过100，很有可能并发量不超过10（对，比我这博客网站还门可罗雀）</p></li><li><p>不过比较麻烦的一点是有视频播放的问题，流量根本顶不住，目前是打算买阿里云的视频点播</p></li></ul><p><del>我感觉到时候日均用户访问量都没有拆分出来的微服务个数多</del></p><ul><li>用的Spring Cloud全家桶（你看我们像是有闲功夫能自研框架人吗）</li><li>写的挺好，一上线幺蛾子就多了</li></ul><p>cm_admin: 后台管理系统前端代码，vue写的 cm_frontweb: 主页面前端代码，Nuxt.js的 cm_parent: 后端代码 Spring Cloud 拆成了个微服务</p><p><del>过度设计，问就是过度设计</del></p><figure><img src="/course-managemnet/image-20201118214736704.png" alt="后台管理" /><figcaption aria-hidden="true">后台管理</figcaption></figure><figure><img src="/course-managemnet/image-20201118215636817.png" alt="前台界面" /><figcaption aria-hidden="true">前台界面</figcaption></figure><h2 id="环境配置">环境配置</h2><h3 id="数据库">数据库</h3><p>docker安装mysql8（其实不是很推荐把数据库扔到Docker里面）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> docker pull mysql:8.0<span class="token function">sudo</span> docker images mysql:8.0<span class="token function">netstat</span> -tunlpdocker run -p <span class="token number">3309</span>:3306 --name mysql8.0 -e <span class="token assign-left variable">MYSQL_ROOT_PASSWORD</span><span class="token operator">=</span><span class="token number">102</span>@uestc -d mysql:8.0docker <span class="token function">ps</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>初始化数据库，运行</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mycli -u root -h your_ip_address -P <span class="token number">3309</span> -p your_password<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">create database course_managementuse course_managementsource ~&#x2F;codes&#x2F;course_management&#x2F;course_management.sql<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>看一下是否成功</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql root@211.83.255.255:course_management&gt; show tables+-----------------------------+| Tables_in_course_management |+-----------------------------+| crm_banner                  || edu_chapter                 || edu_comment                 || edu_course                  || edu_course_collect          || edu_course_description      || edu_subject                 || edu_teacher                 || edu_video                   || statistics_daily            || t_order                     || t_pay_log                   || ucenter_member              |+-----------------------------+13 rows in setTime: 0.009s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="spring-cloud的8个微服务">Spring Cloud的8个微服务</h3><p>分别打包好8个jar包</p><p>启动服务：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">nohup</span> java -jar <span class="token punctuation">&#123;</span>微服务名.jar<span class="token punctuation">&#125;</span> -Dspring.config.location<span class="token operator">=</span><span class="token punctuation">&#123;</span>配置文件名.properties<span class="token punctuation">&#125;</span> <span class="token operator">></span> java_cm.log <span class="token operator"><span class="token file-descriptor important">2</span>></span><span class="token file-descriptor important">&amp;1</span> <span class="token operator">&amp;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>配置可以从指定的<code>application.properties</code> 中覆盖</p><p>(本来是都扔在Docker里面的，发现docker images有点大，内存消耗也上去了)</p><h3 id="修改配置">修改配置</h3><p>将<code>src/main/resources/application.properties</code>和<code>src/test/java/CodeGenerator.java</code>中的配置文件（包括数据库端口、密码、密钥等）改成自己的</p><p>或者启动的时候在`<code>application.properties</code> 中覆盖</p><h3 id="nacos">NACOS</h3><p>一个阿里的动态监控监控服务，有一个控制台。我们只要单机版就够了。还有其他的功能，暂时都没用到。</p><p>阿里官方的建库脚本</p><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2FsaWJhYmEvbmFjb3MvYmxvYi9tYXN0ZXIvZGlzdHJpYnV0aW9uL2NvbmYvbmFjb3MtbXlzcWwuc3Fs">https://github.com/alibaba/nacos/blob/master/distribution/conf/nacos-mysql.sql<i class="fa fa-external-link-alt"></i></span></p><p>或者不要数据库记录日志，直接存成文件。这个直接照着官方的说明启动就行了</p><p>见<span class="exturl" data-url="aHR0cHM6Ly9uYWNvcy5pby96aC1jbi9kb2NzL3F1aWNrLXN0YXJ0Lmh0bWw=">https://nacos.io/zh-cn/docs/quick-start.html<i class="fa fa-external-link-alt"></i></span></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/alibaba/nacos.git<span class="token builtin class-name">cd</span> nacos/mvn -Prelease-nacos -Dmaven.test.skip<span class="token operator">=</span>true clean <span class="token function">install</span> -U<span class="token function">ls</span> -al distribution/target/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>不想自己打包的直接下那个release好了</p><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2FsaWJhYmEvbmFjb3MvcmVsZWFzZXM=">https://github.com/alibaba/nacos/releases<i class="fa fa-external-link-alt"></i></span></p><p>运行：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> nacos/bin<span class="token function">sh</span> startup.sh -m standalone<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><figure><img src="/course-managemnet/image-20201116215705790.png" alt="这样子就是运行成功了" /><figcaption aria-hidden="true">这样子就是运行成功了</figcaption></figure><h3 id="nginx">Nginx</h3><p>使用Nginx进行端口映射，还是把Nginx扔到Docker里面了</p><p>编写<code>default.conf</code>:</p><pre class="line-numbers language-nginx" data-language="nginx"><code class="language-nginx"><span class="token keyword">server</span> <span class="token punctuation">&#123;</span><span class="token keyword">listen</span><span class="token number">9001</span><span class="token punctuation">;</span><span class="token keyword">server_name</span>localhost<span class="token punctuation">;</span><span class="token keyword">location</span> <span class="token operator">~</span> <span class="token operator">/</span>eduservice<span class="token operator">/</span> <span class="token punctuation">&#123;</span> <span class="token keyword">proxy_pass</span> <span class="token keyword">http</span><span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>localhost<span class="token punctuation">:</span><span class="token number">8001</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">location</span> <span class="token operator">~</span> <span class="token operator">/</span>eduoss<span class="token operator">/</span> <span class="token punctuation">&#123;</span> <span class="token keyword">proxy_pass</span> <span class="token keyword">http</span><span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>localhost<span class="token punctuation">:</span><span class="token number">8002</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">location</span> <span class="token operator">~</span> <span class="token operator">/</span>eduvod<span class="token operator">/</span> <span class="token punctuation">&#123;</span> <span class="token keyword">proxy_pass</span> <span class="token keyword">http</span><span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>localhost<span class="token punctuation">:</span><span class="token number">8003</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>        <span class="token keyword">location</span> <span class="token operator">~</span> <span class="token operator">/</span>educms<span class="token operator">/</span> <span class="token punctuation">&#123;</span> <span class="token keyword">proxy_pass</span> <span class="token keyword">http</span><span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>localhost<span class="token punctuation">:</span><span class="token number">8004</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">location</span> <span class="token operator">~</span> <span class="token operator">/</span>edumsm<span class="token operator">/</span> <span class="token punctuation">&#123;</span> <span class="token keyword">proxy_pass</span> <span class="token keyword">http</span><span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>localhost<span class="token punctuation">:</span><span class="token number">8005</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">location</span> <span class="token operator">~</span> <span class="token operator">/</span>eduucenter<span class="token operator">/</span> <span class="token punctuation">&#123;</span> <span class="token keyword">proxy_pass</span> <span class="token keyword">http</span><span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>localhost<span class="token punctuation">:</span><span class="token number">8006</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">location</span> <span class="token operator">~</span> <span class="token operator">/</span>eduorder<span class="token operator">/</span> <span class="token punctuation">&#123;</span> <span class="token keyword">proxy_pass</span> <span class="token keyword">http</span><span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>localhost<span class="token punctuation">:</span><span class="token number">8007</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">location</span> <span class="token operator">~</span> <span class="token operator">/</span>edustatistics<span class="token operator">/</span> <span class="token punctuation">&#123;</span> <span class="token keyword">proxy_pass</span> <span class="token keyword">http</span><span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>localhost<span class="token punctuation">:</span><span class="token number">8008</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>nginx.conf</p><pre class="line-numbers language-nginx" data-language="nginx"><code class="language-nginx"><span class="token keyword">events</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">worker_connections</span>  <span class="token number">4096</span><span class="token punctuation">;</span>  <span class="token comment">## Default: 1024</span><span class="token punctuation">&#125;</span><span class="token keyword">http</span><span class="token punctuation">&#123;</span>    <span class="token keyword">include</span> <span class="token operator">/</span>etc<span class="token operator">/</span>nginx<span class="token operator">/</span>conf<span class="token punctuation">.</span>d<span class="token operator">/</span><span class="token operator">*</span><span class="token punctuation">.</span>conf<span class="token punctuation">;</span> <span class="token comment">#includes all files of file type.conf</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>编写<code>Dockerfile</code>：</p><pre class="line-numbers language-dockerfile" data-language="dockerfile"><code class="language-dockerfile">FROM nginx:alpineCOPY default.conf &#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>构建<code>Docker image</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> docker build -t nginxcm <span class="token builtin class-name">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>启动Docker image</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> docker run -d nginxcm<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="其他的问题">其他的问题</h3><p>阿里云aliyun-sdk-vod-upload这玩意未开源，需要手动下</p><pre class="line-numbers language-none"><code class="language-none">Cannot resolve com.aliyun:aliyun-sdk-vod-upload:1.4.11<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>去<span class="exturl" data-url="aHR0cDovL2RvY3MtYWxpeXVuLmNuLWhhbmd6aG91Lm9zcy5hbGl5dW4taW5jLmNvbS9hc3NldHMvYXR0YWNoLzUxOTkyL2NuX3poLzE2MDA4NDgxOTk5NTIvVk9EVXBsb2FkRGVtby1qYXZhLTEuNC4xMy56aXA/c3BtPWEyYzRnLjExMTg2NjIzLjIuNDAuNDVjMDE5MmJpUEh4Y2omYW1wO2ZpbGU9Vk9EVXBsb2FkRGVtby1qYXZhLTEuNC4xMy56aXA=">这里<i class="fa fa-external-link-alt"></i></span>下载运行</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mvn install:install-file -DgroupId<span class="token operator">=</span>com.aliyun -DartifactId<span class="token operator">=</span>aliyun-sdk-vod-upload -Dversion<span class="token operator">=</span><span class="token number">1.4</span>.11 -Dpackaging<span class="token operator">=</span>jar -Dfile<span class="token operator">=</span>aliyun-java-vod-upload-1.4.13.jar<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="前端">前端</h2><p>现在很多教程直接<code>npm run dev</code>，好家伙，直接给我看傻了。（CSDN之类的东西实在屏蔽不过来，SEO排名还一个个都贼靠前）</p><p>又看了看，貌似静态页面可以直接</p><p>然后又看到好多教程，大部分用的<code>pm2</code>运行<code>npm start</code>作为damon，js一统江湖哎，可能都是nodejs全干写的，感觉不太像运维的风格。可我想找nginx的抄作业，扒拉vue的文档拉到最底下才看到一个Docker里跑Nginx的。</p><h3 id="后台管理界面">后台管理界面</h3><p>先在<code>cm_admin</code>和<code>cm_forntweb</code>两个文件夹下<code>build</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> cm_admin<span class="token function">npm</span> run build<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>然后会在<code>.dist</code>文件夹下生成压缩后的静态页面。</p><p>扔到服务器上跑就行了，用Nginx配置一下端口映射和域名（我这域名没有，老板嫌备案麻烦没向学校申请）</p><pre class="line-numbers language-dockerfile" data-language="dockerfile"><code class="language-dockerfile">FROM nginxCOPY dist&#x2F; &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html&#x2F;COPY nginx.conf &#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;default.conf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-nginx" data-language="nginx"><code class="language-nginx"><span class="token keyword">server</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">listen</span>       <span class="token number">9528</span><span class="token punctuation">;</span>    <span class="token keyword">server_name</span>  localhost<span class="token punctuation">;</span><span class="token keyword">server</span> <span class="token number">0.0</span><span class="token number">.0</span><span class="token number">.0</span><span class="token punctuation">;</span>    <span class="token comment">#charset koi8-r;</span>    <span class="token keyword">access_log</span>  <span class="token operator">/</span>var<span class="token operator">/</span>log<span class="token operator">/</span>nginx<span class="token operator">/</span>host<span class="token punctuation">.</span>access<span class="token punctuation">.</span>log  main<span class="token punctuation">;</span>    <span class="token keyword">error_log</span>  <span class="token operator">/</span>var<span class="token operator">/</span>log<span class="token operator">/</span>nginx<span class="token operator">/</span>error<span class="token punctuation">.</span>log  error<span class="token punctuation">;</span>    <span class="token keyword">location</span> <span class="token operator">/</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">root</span>   <span class="token operator">/</span>usr<span class="token operator">/</span>share<span class="token operator">/</span>nginx<span class="token operator">/</span>html<span class="token punctuation">;</span>        <span class="token keyword">index</span>  <span class="token keyword">index</span><span class="token punctuation">.</span>html <span class="token keyword">index</span><span class="token punctuation">.</span>htm<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> docker build -t cm_admin <span class="token builtin class-name">.</span>sodo docker run cm_admin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="前台界面">前台界面</h3><p>Nuxt.js写的，就直接用的<code>nuxt start</code></p><p>在<code>packages.json</code>里面指定一下端口和IP</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token property">"config"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>  <span class="token property">"nuxt"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"host"</span><span class="token operator">:</span> <span class="token string">"0.0.0.0"</span><span class="token punctuation">,</span>    <span class="token property">"port"</span><span class="token operator">:</span> <span class="token string">"3000"</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>测试一下</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> cm_frontweb<span class="token function">npm</span> run build<span class="token function">npm</span> run start<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><figure><img src="/course-managemnet/image-20201122112918925.png" alt="这个内存占用看起来可以接受" /><figcaption aria-hidden="true">这个内存占用看起来可以接受</figcaption></figure><p>在服务器上</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">npm</span> isntall pm2 -g<span class="token builtin class-name">cd</span> cm_frontweb<span class="token function">npm</span> <span class="token function">install</span> --savenuxt buildpm2 start <span class="token function">npm</span> --name <span class="token string">"cm_frontweb"</span> -- run startpm2 startup<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><figure><img src="/course-managemnet/image-20201122114528875.png" alt="内存占用也还好" /><figcaption aria-hidden="true">内存占用也还好</figcaption></figure><h2 id="可能的报错">可能的报错</h2><pre class="line-numbers language-none"><code class="language-none">npm ERR! code ELIFECYCLEnpm ERR! errno 126npm ERR! cm_front@1.0.0 dev: &#96;nuxt&#96;npm ERR! Exit status 126npm ERR! npm ERR! Failed at the cm_front@1.0.0 dev script.npm ERR! This is probably not a problem with npm. There is likely additional logging output above.npm ERR! A complete log of this run can be found in:npm ERR!     &#x2F;root&#x2F;.npm&#x2F;_logs&#x2F;2020-11-16T14_13_24_937Z-debug.log<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> cache clean --forceeno1                     14Kb   10Kb   <span class="token number">0.0</span>    <span class="token number">3.4</span>   <span class="token number">6</span>.83G <span class="token number">1</span>.06G  <span class="token number">7152</span> xi102          <span class="token number">1</span>:45 <span class="token number">50</span>    <span class="token number">0</span> S    ? ?    java -server -Xms2g -Xmx2g -Xmn1g -XX:MetaspaceSize<span class="token operator">=</span>128m -XX:MaxMetaspaceSize<span class="token operator">=</span>320m -XX:-OmitStackTraceInFastThrow -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath<span class="token operator">=</span>/home/xi102/course_management/nacos/logs/java_heapdump.hprof -XX:-UseLargePages -Dnacos.member.list<span class="token operator">=</span> -Djava.<span class="token function">rm</span> -rf node_modules package-lock.json<span class="token function">npm</span> <span class="token function">install</span><span class="token function">npm</span> run dev<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>报错</p><pre class="line-numbers language-none"><code class="language-none">Failed to execute goal org.springframework.boot:spring-boot-maven-plugin:2.2.1.RELEASE:repackage (repackage) on project cm_parent: Execution repackage of goal org.springframework.boot:spring-boot-maven-plugin:2.2.1.RELEASE:repackage failed: Plugin org.springframework.boot:spring-boot-maven-plugin:2.2.1.RELEASE or one of its dependencies could not be resolved: Could not transfer artifact org.vafer:jdependency:jar:2.1.1 from&#x2F;to central (https:&#x2F;&#x2F;repo.maven.apache.org&#x2F;maven2): &#x2F;home&#x2F;zjk&#x2F;.m2&#x2F;repository&#x2F;org&#x2F;vafer&#x2F;jdependency&#x2F;2.1.1&#x2F;jdependency-2.1.1.jar.part (没有那个文件或目录) -&gt; [Help 1]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>build报错</p><pre class="line-numbers language-none"><code class="language-none">The POM for com.itwny:service_base:jar:0.0.1-SNAPSHOT is missing, no dependency information available<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">Failed to execute goal org.springframework.boot:spring-boot-maven-plugin:2.2.1.RELEASE:repackage (repackage) on project service_base: Execution repackage of goal org.springframework.boot:spring-boot-maven-plugin:2.2.1.RELEASE:repackage failed: Unable to find main class<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>貌似是由于spring-boot-maven-plugin插件打出的包无法被依赖</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sh: /home/zjk/codes/course_management/cm_frontweb/node_modules/.bin/nuxt: Permission denied<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>请用root权限运行。</p><pre class="line-numbers language-none"><code class="language-none">2020-11-17 16:02:57 |ERROR |ThreadPoolTaskScheduler-1 |NacosWatch.java:171 |org.springframework.cloud.alibaba.nacos.discovery.NacosWatch |Error watching Nacos Service change<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>检查一下nacos是否正确启动了(不过这个项目不用NACOS也能完成面向客户的功能)</p><p>npm run build 报错</p><pre class="line-numbers language-none"><code class="language-none">ERROR in Template execution failed: ReferenceError: BASE_URL is not defined<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>修改<code>index.html</code>中<code>BASE_URL</code>为<code>htmlWebpackPlugin.options.url</code></p><p>警告可以不用管</p><pre class="line-numbers language-none"><code class="language-none">WARNING in asset size limit: The following asset(s) exceed the recommended size limit (244 KiB).<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>nginx报错<code>nginx: [emerg] “server” directive is not allowed here</code></p><p>见https://stackoverflow.com/questions/41766195/nginx-emerg-server-directive-is-not-allowed-here</p><p>可能是配置没写好</p><h2 id="其他">其他</h2><p>未完待续</p><h2 id="参考">参考</h2><p><span class="exturl" data-url="aHR0cHM6Ly9jbGkudnVlanMub3JnL3poL2d1aWRlL2RlcGxveW1lbnQuaHRtbCPpgJrnlKjmjIfljZc=">vue官方文档的部署通用指南<i class="fa fa-external-link-alt"></i></span></p><p><span class="exturl" data-url="aHR0cHM6Ly9zZWdtZW50ZmF1bHQuY29tL2EvMTE5MDAwMDAxMjc3NDY1MA==">next.js nuxt.js等服务端渲染框架构建的项目部署到服务器,并用PM2守护程序<i class="fa fa-external-link-alt"></i></span></p><p><span class="exturl" data-url="aHR0cHM6Ly9zZWdtZW50ZmF1bHQuY29tL2EvMTE5MDAwMDAxMjY3NTAxMg==">vue、react等单页面项目应该这样子部署到服务器<i class="fa fa-external-link-alt"></i></span></p><p><a href="https://segmentfault.com/q/1010000008477568"></a></p><p>https://juejin.cn/post/6844903666701320205</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;先说一下感想：小作坊不适合微服务，请不起年薪五十万的架构师、年薪三十万的DevOps，没有各种没事造轮子重构刷KPI的目的，没有服务器集群的、开发一只手能数过来的，都谨慎尝试微服务。&lt;/p&gt;</summary>
    
    
    
    <category term="102网吧日常" scheme="https://zhangjk98.xyz/categories/102%E7%BD%91%E5%90%A7%E6%97%A5%E5%B8%B8/"/>
    
    
    <category term="Spring Cloud" scheme="https://zhangjk98.xyz/tags/Spring-Cloud/"/>
    
    <category term="microservices" scheme="https://zhangjk98.xyz/tags/microservices/"/>
    
  </entry>
  
  <entry>
    <title>给Archlinux添加blackarch仓库镜像源</title>
    <link href="https://zhangjk98.xyz/add-blackarch-repo-mirrors/"/>
    <id>https://zhangjk98.xyz/add-blackarch-repo-mirrors/</id>
    <published>2020-11-12T14:08:30.000Z</published>
    <updated>2020-11-12T14:08:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>我可没干坏事啊</p><a id="more"></a><p>2020.11 目测有效，不保证该方法以后可能过时，建议自行翻阅官方文档。</p><h2 id="导入仓库和设置国内镜像">导入仓库和设置国内镜像</h2><h3 id="导入仓库">导入仓库</h3><p>按照官方文档来：</p><p>下载官网的脚本</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> -O https://blackarch.org/strap.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>修改权限：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">chmod</span> +x strap.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>运行</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./strap.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后应该就好了</p><p>看看是不是装好了：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pacman -Sg <span class="token operator">|</span> <span class="token function">grep</span> blackarch<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后更新一下</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> pacman -Syyu<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这时候应该会给你安装<code>blackarch-keying</code>这个包，然后就可以用了</p><h3 id="镜像源">镜像源</h3><p>修改<code>/etc/pacman.conf</code>，在最后加上</p><pre class="line-numbers language-conf" data-language="conf"><code class="language-conf">[blackarch]Server &#x3D; http:&#x2F;&#x2F;mirrors.uestc.cn&#x2F;blackarch&#x2F;$repo&#x2F;os&#x2F;$arch<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>Server请改成你在那里提供服务而且网速比较快的，比如tuna的</p><pre class="line-numbers language-conf" data-language="conf"><code class="language-conf">[blackarch]Server &#x3D; https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;blackarch&#x2F;$repo&#x2F;os&#x2F;$arch<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="为何要写这么水的一篇博客">为何要写这么水的一篇博客</h2><p>我之前谷歌随手搜出了ustc的镜像使用帮助，然后就开始了飘红报错，试了一圈中文的解决方案，并没有用。 （当然中文博客基本都过时了，还是有很多好好写的，不止CSDN,比如这个：<span class="exturl" data-url="aHR0cHM6Ly93ZWVwaW5nZG9nZWwuZ2l0aHViLmlvL3Bvc3RzL+eUqGFyY2hfbGludXjmiZPpgKDlroznvo7muJfpgI/njq/looMv">用 Arch Linux 打造完美渗透环境<i class="fa fa-external-link-alt"></i></span>）</p><p>报错：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">error: blackarch: key <span class="token string">"F9A6E68A711354D84A9B91637533BAFE69A25079"</span> is unknown:: Import PGP key F9A6E68A711354D84A9B91637533BAFE69A25079? <span class="token punctuation">[</span>Y/n<span class="token punctuation">]</span> YYerror: key <span class="token string">"F9A6E68A711354D84A9B91637533BAFE69A25079"</span> could not be looked up remotely:: Synchronizing package databases<span class="token punctuation">..</span>.error: blackarch: key <span class="token string">"F9A6E68A711354D84A9B91637533BAFE69A25079"</span> is unknown:: Import PGP key F9A6E68A711354D84A9B91637533BAFE69A25079? <span class="token punctuation">[</span>Y/n<span class="token punctuation">]</span> error: key <span class="token string">"F9A6E68A711354D84A9B91637533BAFE69A25079"</span> could not be looked up remotelyerror: failed to update blackarch <span class="token punctuation">(</span>invalid or corrupted database <span class="token punctuation">(</span>PGP signature<span class="token punctuation">))</span>error: failed to synchronize all databases<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>发现中文的几个解决方案全都过时了。安装<code>blackarch-keying</code>导入key会产生先有鸡还是先有蛋的问题。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">sudo</span> pacman -S blackarch-keyringerror: blackarch: key <span class="token string">"F9A6E68A711354D84A9B91637533BAFE69A25079"</span> is unknown:: Import PGP key F9A6E68A711354D84A9B91637533BAFE69A25079? <span class="token punctuation">[</span>Y/n<span class="token punctuation">]</span> Yerror: key <span class="token string">"F9A6E68A711354D84A9B91637533BAFE69A25079"</span> could not be looked up remotelyerror: database <span class="token string">'blackarch'</span> is not valid <span class="token punctuation">(</span>invalid or corrupted database <span class="token punctuation">(</span>PGP signature<span class="token punctuation">))</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>转了一圈还是翻了官方文档，世界瞬间清净了。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>+<span class="token punctuation">]</span> installing blackarch keyring<span class="token punctuation">..</span>.loading packages<span class="token punctuation">..</span>.resolving dependencies<span class="token punctuation">..</span>.looking <span class="token keyword">for</span> conflicting packages<span class="token punctuation">..</span>.Packages <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> blackarch-keyring-20140118-3Total Installed Size:  <span class="token number">0.04</span> MiB:: Proceed with installation? <span class="token punctuation">[</span>Y/n<span class="token punctuation">]</span> <span class="token punctuation">(</span><span class="token number">1</span>/1<span class="token punctuation">)</span> checking keys <span class="token keyword">in</span> keyring                                         <span class="token punctuation">[</span><span class="token comment">#######################################] 100%</span><span class="token punctuation">(</span><span class="token number">1</span>/1<span class="token punctuation">)</span> checking package integrity                                       <span class="token punctuation">[</span><span class="token comment">#######################################] 100%</span><span class="token punctuation">(</span><span class="token number">1</span>/1<span class="token punctuation">)</span> loading package files                                            <span class="token punctuation">[</span><span class="token comment">#######################################] 100%</span><span class="token punctuation">(</span><span class="token number">1</span>/1<span class="token punctuation">)</span> checking <span class="token keyword">for</span> <span class="token function">file</span> conflicts                                      <span class="token punctuation">[</span><span class="token comment">#######################################] 100%</span>:: Processing package changes<span class="token punctuation">..</span>.<span class="token punctuation">(</span><span class="token number">1</span>/1<span class="token punctuation">)</span> installing blackarch-keyring                                     <span class="token punctuation">[</span><span class="token comment">#######################################] 100%</span><span class="token operator">==</span><span class="token operator">></span> Appending keys from blackarch.gpg<span class="token punctuation">..</span>.gpg: public key DB323392796CA067 is <span class="token number">3037</span> days newer than the signaturegpg: public key CF66D153D884358F is <span class="token number">16</span> seconds newer than the signature<span class="token operator">==</span><span class="token operator">></span> Locally signing trusted keys <span class="token keyword">in</span> keyring<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key A0917C4147A37007CB54C1CFD295AA940EFDDF62<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key 4345771566D76038C7FEB43863EC0ADBEA87E4E3<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key CBA3C7D4798912702DCF568E67D8BDF42AD93F4E<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key 8F9A9793CB8591147C2EC70566E0CDBD1E01F333<span class="token punctuation">..</span>.<span class="token operator">==</span><span class="token operator">></span> Importing owner trust values<span class="token punctuation">..</span>.gpg: inserting ownertrust of <span class="token number">4</span>gpg: setting ownertrust to <span class="token number">4</span>gpg: setting ownertrust to <span class="token number">4</span>gpg: setting ownertrust to <span class="token number">4</span><span class="token operator">==</span><span class="token operator">></span> Updating trust database<span class="token punctuation">..</span>.gpg: key 1EB2638FF56C0C53: no user ID <span class="token keyword">for</span> key signature packet of class <span class="token number">10</span>gpg: key 1EB2638FF56C0C53: no user ID <span class="token keyword">for</span> key signature packet of class <span class="token number">10</span>gpg: key 786C63F330D7CB92: no user ID <span class="token keyword">for</span> key signature packet of class <span class="token number">10</span>gpg: key 786C63F330D7CB92: no user ID <span class="token keyword">for</span> key signature packet of class <span class="token number">10</span>gpg: key 786C63F330D7CB92: no user ID <span class="token keyword">for</span> key signature packet of class <span class="token number">10</span>gpg: key 786C63F330D7CB92: no user ID <span class="token keyword">for</span> key signature packet of class <span class="token number">10</span>gpg: key 786C63F330D7CB92: no user ID <span class="token keyword">for</span> key signature packet of class <span class="token number">10</span>gpg: key 786C63F330D7CB92: no user ID <span class="token keyword">for</span> key signature packet of class <span class="token number">10</span>gpg: key 786C63F330D7CB92: no user ID <span class="token keyword">for</span> key signature packet of class <span class="token number">10</span>gpg: key 786C63F330D7CB92: no user ID <span class="token keyword">for</span> key signature packet of class <span class="token number">10</span>gpg: key 786C63F330D7CB92: no user ID <span class="token keyword">for</span> key signature packet of class <span class="token number">10</span>gpg: key 786C63F330D7CB92: no user ID <span class="token keyword">for</span> key signature packet of class <span class="token number">10</span>gpg: key 786C63F330D7CB92: no user ID <span class="token keyword">for</span> key signature packet of class <span class="token number">10</span>gpg: key 786C63F330D7CB92: no user ID <span class="token keyword">for</span> key signature packet of class <span class="token number">10</span>gpg: key 786C63F330D7CB92: no user ID <span class="token keyword">for</span> key signature packet of class <span class="token number">10</span>gpg: key 786C63F330D7CB92: no user ID <span class="token keyword">for</span> key signature packet of class <span class="token number">10</span>gpg: key 786C63F330D7CB92: no user ID <span class="token keyword">for</span> key signature packet of class <span class="token number">10</span>gpg: key 786C63F330D7CB92: no user ID <span class="token keyword">for</span> key signature packet of class <span class="token number">10</span>gpg: key 786C63F330D7CB92: no user ID <span class="token keyword">for</span> key signature packet of class <span class="token number">10</span>gpg: key 786C63F330D7CB92: no user ID <span class="token keyword">for</span> key signature packet of class <span class="token number">10</span>gpg: key 786C63F330D7CB92: no user ID <span class="token keyword">for</span> key signature packet of class <span class="token number">10</span>gpg: key 786C63F330D7CB92: no user ID <span class="token keyword">for</span> key signature packet of class <span class="token number">10</span>gpg: key 786C63F330D7CB92: no user ID <span class="token keyword">for</span> key signature packet of class <span class="token number">10</span>gpg: key 786C63F330D7CB92: no user ID <span class="token keyword">for</span> key signature packet of class <span class="token number">10</span>gpg: key 786C63F330D7CB92: no user ID <span class="token keyword">for</span> key signature packet of class <span class="token number">10</span>gpg: key 786C63F330D7CB92: no user ID <span class="token keyword">for</span> key signature packet of class <span class="token number">10</span>gpg: key 786C63F330D7CB92: no user ID <span class="token keyword">for</span> key signature packet of class <span class="token number">10</span>gpg: key 786C63F330D7CB92: no user ID <span class="token keyword">for</span> key signature packet of class <span class="token number">10</span>gpg: key 786C63F330D7CB92: no user ID <span class="token keyword">for</span> key signature packet of class <span class="token number">10</span>gpg: key 786C63F330D7CB92: no user ID <span class="token keyword">for</span> key signature packet of class <span class="token number">10</span>gpg: public key DB323392796CA067 is <span class="token number">3037</span> days newer than the signaturegpg: marginals needed: <span class="token number">3</span>  completes needed: <span class="token number">1</span>  trust model: pgpgpg: public key CF66D153D884358F is <span class="token number">16</span> seconds newer than the signaturegpg: depth: <span class="token number">0</span>  valid:   <span class="token number">1</span>  signed:  <span class="token number">56</span>  trust: <span class="token number">0</span>-, 0q, 0n, 0m, 0f, 1ugpg: depth: <span class="token number">1</span>  valid:  <span class="token number">56</span>  signed:  <span class="token number">81</span>  trust: <span class="token number">1</span>-, 0q, 0n, 55m, 0f, 0ugpg: depth: <span class="token number">2</span>  valid:  <span class="token number">77</span>  signed:  <span class="token number">26</span>  trust: <span class="token number">77</span>-, 0q, 0n, 0m, 0f, 0ugpg: next trustdb check due at <span class="token number">2020</span>-12-03:: Running post-transaction hooks<span class="token punctuation">..</span>.<span class="token punctuation">(</span><span class="token number">1</span>/1<span class="token punctuation">)</span> Arming ConditionNeedsUpdate<span class="token punctuation">..</span>.<span class="token operator">==</span><span class="token operator">></span> Appending keys from archlinuxcn.gpg<span class="token punctuation">..</span>.<span class="token operator">==</span><span class="token operator">></span> Appending keys from archlinux.gpg<span class="token punctuation">..</span>.<span class="token operator">==</span><span class="token operator">></span> Appending keys from blackarch.gpg<span class="token punctuation">..</span>.<span class="token operator">==</span><span class="token operator">></span> Appending keys from endeavouros.gpg<span class="token punctuation">..</span>.<span class="token operator">==</span><span class="token operator">></span> Locally signing trusted keys <span class="token keyword">in</span> keyring<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key 57957BAD5D038B07C28EF49A15B26377262268C1<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key 9AF7EED0F7CE3639965C85619BA8AAAAAAAAAAAA<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key 87F2E316E0ABC98B9DE8D4EF042FD810600954EF<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key 99399D88F7B752BF364CD485A85E3925A6211F05<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key 90403E12F4CE5E0E950E4AD2C96492E347202001<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key F905932C85D705FD2A3CC9E47C63370395FF0792<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key 1F255DC97A5431001F9D01F8CDABD988DD8AD93B<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key D8AFDDA07A5B6EDFA7D8CCDAD6D055F927843F1C<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key 4A6D297E6F74638E4D5F8E99152AC7B5F7608B26<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key 4B1DE545A801D4549BFD3FEF90CB3D62C13D4796<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key DC6FB7FC761E848F76E98B4FCCAF35548C65530F<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key 0AABCAF6773D5B6E1F4ECF794E72AF09097DAE2E<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key A0917C4147A37007CB54C1CFD295AA940EFDDF62<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key 43A253584139DC6D923B6EFC34F1E61A0EEB4F51<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key 3167205DC1F2582F226007FAB012733142D79E59<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key 9BE836747F3533EAABA99F1485AEA2926167AD32<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key 708DFB13CBED9AB39449DBFB41C04120C297B594<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key F357BC80BE28C292B40ECEC8997995DF61A0959A<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key DDB867B92AA789C165EEFA799B729B06A680C281<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key 7B314BE77DBCA20E02DDBBC050BF8B712DCAD7EA<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key D88390B2991F8242FABD2A3C07F45E2A1937DD32<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key 53641635F498CDD60227A7ED0832F151DB0FB18E<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key 1C874172781545C15399D4CF7E9BA67AD5E38E78<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key 38009E1FD96C320609BF05870A5BAD445D80C1CC<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key 4CFF42599833CF3AE98A2F098850CBC20940E3F9<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key 1C9084FAFE017CEAE4AF59C91DF6CF104433578C<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key 1D5AB52A241CC492A724FE14E8D79E63E3D142F3<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key 356690A1E7404E30D0E902B2E64D049594A54F54<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key 0285FB6900D102030550F20A34908FFBC0BFAC35<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key 1B53ED6B05A88B45FE02AE6186CC4303D870877E<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key 02E02B85AF209AA00F784A1DD48313B447CD9E46<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key BEA7E7644AE093AB557E521A26D9876AC0719A0B<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key 4345771566D76038C7FEB43863EC0ADBEA87E4E3<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key 48ADDE10F27BAFB47BB0CCAF2D2595A00D08ACE0<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key CBA3C7D4798912702DCF568E67D8BDF42AD93F4E<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key 2AC4CFDB42972D38F105800BC0EB1AA4536A8318<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key B5971F2C5C10A9A08C60030F786C63F330D7CB92<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key 8F9A9793CB8591147C2EC70566E0CDBD1E01F333<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key D87D10B4E132FFA40DEC232B7A3A9FA6E4FD4A8D<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key 21E347C47A6A13CDE64713CBAE62544C55609060<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key 22D8A46B2CDA6605A1C0CFD1E060B3E215CE49BB<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key 83F817213361BF5F02E7E124F9F9FA97A403F63E<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key 243C14E5339E1B88EDCB29C595FC83B3084A5ADD<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key 86EEEC214D245137446F4AB195304B04071CCDB4<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key CF73A9AE20AD483CE51130E0303A369BE11E4BE7<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key A0B55B12351C08FED81DAAF4840A50A14EEF0D58<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key 481C4474AF1572165AE4C6AF3FDDD575826C5C30<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key 91FFE0700E80619CEB73235CA88E23E377514E00<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key 7028E1F320C45EE98473B1C35F1BC1A1BF2B11D0<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key 688E1D093C3638F588890D4450268311C7AD3F62<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key 00e716120987a801cd25070828d10c49a44f261e<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key 0E8B644079F599DFC1DDC3973348882F6AC6A4C2<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key 9AD42FE922425C9D93E60B43BAD2804227A0AF05<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key AB19265E5D7D20687D303246BA1DFB64FFF979E7<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key C41D545A576AC1FE4DBE90C9B6CF41D1879E8002<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key 504357523094066C67E56CF58D99AA5CAD3908B0<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key 1FDBDCE2D26BD8F100EE2E73B1B9AAD8BE7E7326<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key 5984EA8F3C6C92945EB2EE40BE378C0A19C6421B<span class="token punctuation">..</span>.<span class="token operator">==</span><span class="token operator">></span> Importing owner trust values<span class="token punctuation">..</span>.<span class="token operator">==</span><span class="token operator">></span> Disabling revoked keys <span class="token keyword">in</span> keyring<span class="token punctuation">..</span>.  -<span class="token operator">></span> Disabling key 8F76BEEA0289F9E1D3E229C05F946DED983D4366<span class="token punctuation">..</span>.  -<span class="token operator">></span> Disabling key 63F395DE2D6398BBE458F281F2DBB4931985A992<span class="token punctuation">..</span>.  -<span class="token operator">></span> Disabling key 50F33E2E5B0C3D900424ABE89BDCF497A4BBCC7F<span class="token punctuation">..</span>.  -<span class="token operator">></span> Disabling key 27FFC4769E19F096D41D9265A04F9397CDFD6BB0<span class="token punctuation">..</span>.  -<span class="token operator">></span> Disabling key 39F880E50E49A4D11341E8F939E4F17F295AFBF4<span class="token punctuation">..</span>.  -<span class="token operator">></span> Disabling key 8840BD07FC24CB7CE394A07CCF7037A4F27FB7DA<span class="token punctuation">..</span>.  -<span class="token operator">></span> Disabling key 5559BC1A32B8F76B3FCCD9555FA5E5544F010D48<span class="token punctuation">..</span>.  -<span class="token operator">></span> Disabling key 0B20CA1931F5DA3A70D0F8D2EA6836E1AB441196<span class="token punctuation">..</span>.  -<span class="token operator">></span> Disabling key 07DFD3A0BC213FA12EDC217559B3122E2FA915EC<span class="token punctuation">..</span>.  -<span class="token operator">></span> Disabling key 4FCF887689C41B09506BE8D5F3E1D5C5D30DB0AD<span class="token punctuation">..</span>.  -<span class="token operator">></span> Disabling key 2A83ADADD054CB3C4CF7DF9D2D1E72461CCBBA98<span class="token punctuation">..</span>.  -<span class="token operator">></span> Disabling key 5A2257D19FF7E1E0E415968CE62F853100F0D0F0<span class="token punctuation">..</span>.  -<span class="token operator">></span> Disabling key 4E43CCE7ADF712FF75C7B4A5EF50AB125C83BB2D<span class="token punctuation">..</span>.  -<span class="token operator">></span> Disabling key D921CABED130A5690EF1896E81AF739EC0711BF1<span class="token punctuation">..</span>.  -<span class="token operator">></span> Disabling key 7FA647CD89891DEDC060287BB9113D1ED21E1A55<span class="token punctuation">..</span>.  -<span class="token operator">></span> Disabling key BC1FBE4D2826A0B51E47ED62E2539214C6C11350<span class="token punctuation">..</span>.  -<span class="token operator">></span> Disabling key 24F24E986EB2FE628DBDD3CFB9E701221C820178<span class="token punctuation">..</span>.  -<span class="token operator">></span> Disabling key 4A8B17E20B88ACA61860009B5CED81B7C2E5C0D2<span class="token punctuation">..</span>.  -<span class="token operator">></span> Disabling key 417A75A94D7DCA0FE37EBA89BF971BB9D4D40A3B<span class="token punctuation">..</span>.  -<span class="token operator">></span> Disabling key 5696C003B0854206450C8E5BE613C09CB4440678<span class="token punctuation">..</span>.  -<span class="token operator">></span> Disabling key AA0CBF3859E580B97D9F04638FDE3D8FC99F40AE<span class="token punctuation">..</span>.  -<span class="token operator">></span> Disabling key 684148BB25B49E986A4944C55184252D824B18E8<span class="token punctuation">..</span>.  -<span class="token operator">></span> Disabling key 8CF934E339CAD8ABF342E822E711306E3C4F88BC<span class="token punctuation">..</span>.  -<span class="token operator">></span> Disabling key F5A361A3A13554B85E57DDDAAF7EF7873CFD4BB6<span class="token punctuation">..</span>.  -<span class="token operator">></span> Disabling key 5E7585ADFF106BFFBBA319DC654B877A0864983E<span class="token punctuation">..</span>.  -<span class="token operator">></span> Disabling key 65EEFE022108E2B708CBFCF7F9E712E59AF5F22A<span class="token punctuation">..</span>.  -<span class="token operator">></span> Disabling key 40440DC037C05620984379A6761FAD69BA06C6A9<span class="token punctuation">..</span>.  -<span class="token operator">></span> Disabling key 34C5D94FE7E7913E86DC427E7FB1A3800C84C0A5<span class="token punctuation">..</span>.  -<span class="token operator">></span> Disabling key 1A60DC44245D06FEF90623D6EEEEE2EEEE2EEEEE<span class="token punctuation">..</span>.  -<span class="token operator">></span> Disabling key 81D7F8241DB38BC759C80FCE3A726C6170E80477<span class="token punctuation">..</span>.  -<span class="token operator">></span> Disabling key 86F797B20DE062D8540D6D243CD72EBFE6DE17D8<span class="token punctuation">..</span>.  -<span class="token operator">></span> Disabling key A373F9E056E8E4912F842CF596D6420DD2E3A1F0<span class="token punctuation">..</span>.  -<span class="token operator">></span> Disabling key E7210A59715F6940CF9A4E36A001876699AD6E84<span class="token punctuation">..</span>.  -<span class="token operator">></span> Disabling key 5357F3B111688D88C1D88119FCF2CB179205AC90<span class="token punctuation">..</span>.  -<span class="token operator">></span> Disabling key 4D913AECD81726D9A6C74F0ADA6426DD215B37AD<span class="token punctuation">..</span>.  -<span class="token operator">></span> Disabling key FB871F0131FEA4FB5A9192B4C8880A6406361833<span class="token punctuation">..</span>.  -<span class="token operator">></span> Disabling key 66BD74A036D522F51DD70A3C7F2A16726521E06D<span class="token punctuation">..</span>.  -<span class="token operator">></span> Disabling key 487EACC08557AD082088DABA1EB2638FF56C0C53<span class="token punctuation">..</span>.  -<span class="token operator">></span> Disabling key B1F2C889CB2CCB2ADA36D963097D629E437520BD<span class="token punctuation">..</span>.  -<span class="token operator">></span> Disabling key 9515D8A8EAB88E49BB65EDBCE6B456CAF15447D5<span class="token punctuation">..</span>.  -<span class="token operator">></span> Disabling key 76B4192E902C0A52642C63C273B8ED52F1D357C1<span class="token punctuation">..</span>.  -<span class="token operator">></span> Disabling key 40776A5221EF5AD468A4906D42A1DB15EC133BAD<span class="token punctuation">..</span>.  -<span class="token operator">></span> Disabling key D4DE5ABDE2A7287644EAC7E36D1A9E70E19DAA50<span class="token punctuation">..</span>.  -<span class="token operator">></span> Disabling key 44D4A033AC140143927397D47EFD567D4C7EA887<span class="token punctuation">..</span>.<span class="token operator">==</span><span class="token operator">></span> Updating trust database<span class="token punctuation">..</span>.gpg: next trustdb check due at <span class="token number">2020</span>-12-03<span class="token punctuation">[</span>+<span class="token punctuation">]</span> keyring installed successfully<span class="token punctuation">[</span>+<span class="token punctuation">]</span> updating package databases:: Synchronizing package databases<span class="token punctuation">..</span>. core                                      <span class="token number">129.9</span> KiB  <span class="token number">6.34</span> MiB/s 00:00 <span class="token punctuation">[</span>---------------------------------------<span class="token punctuation">]</span> <span class="token number">100</span>% extra                                    <span class="token number">1634.4</span> KiB  <span class="token number">4.09</span> MiB/s 00:00 <span class="token punctuation">[</span>---------------------------------------<span class="token punctuation">]</span> <span class="token number">100</span>% community                                   <span class="token number">5.2</span> MiB  <span class="token number">11.1</span> MiB/s 00:00 <span class="token punctuation">[</span>---------------------------------------<span class="token punctuation">]</span> <span class="token number">100</span>% multilib                                  <span class="token number">154.2</span> KiB  <span class="token number">7.53</span> MiB/s 00:00 <span class="token punctuation">[</span>---------------------------------------<span class="token punctuation">]</span> <span class="token number">100</span>% endeavouros                                <span class="token number">14.2</span> KiB  <span class="token number">0.00</span>   B/s 00:00 <span class="token punctuation">[</span>---------------------------------------<span class="token punctuation">]</span> <span class="token number">100</span>% archlinuxcn                              <span class="token number">1354.5</span> KiB  <span class="token number">11.0</span> MiB/s 00:00 <span class="token punctuation">[</span>---------------------------------------<span class="token punctuation">]</span> <span class="token number">100</span>% blackarch                                   <span class="token number">3.3</span> MiB   <span class="token number">500</span> KiB/s 00:07 <span class="token punctuation">[</span>---------------------------------------<span class="token punctuation">]</span> <span class="token number">100</span>% blackarch.sig                             <span class="token number">566.0</span>   B  <span class="token number">0.00</span>   B/s 00:00 <span class="token punctuation">[</span>---------------------------------------<span class="token punctuation">]</span> <span class="token number">100</span>%<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Packages <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> blackarch-keyring-20180925-2  perl-expect-1.35-6Total Download Size:   <span class="token number">0.07</span> MiBTotal Installed Size:  <span class="token number">0.15</span> MiBNet Upgrade Size:      <span class="token number">0.00</span> MiB:: Proceed with installation? <span class="token punctuation">[</span>Y/n<span class="token punctuation">]</span> Y:: Retrieving packages<span class="token punctuation">..</span>. blackarch-keyring-20180925-2-any                                                                   <span class="token number">18.1</span> KiB  <span class="token number">0.00</span>   B/s 00:00 <span class="token punctuation">[</span>-----------------------------------------------------------------------------<span class="token punctuation">]</span> <span class="token number">100</span>% perl-expect-1.35-6-any                                                                             <span class="token number">50.9</span> KiB  <span class="token number">1698</span> KiB/s 00:00 <span class="token punctuation">[</span>-----------------------------------------------------------------------------<span class="token punctuation">]</span> <span class="token number">100</span>%<span class="token punctuation">(</span><span class="token number">2</span>/2<span class="token punctuation">)</span> checking keys <span class="token keyword">in</span> keyring                                                                                                 <span class="token punctuation">[</span>-----------------------------------------------------------------------------<span class="token punctuation">]</span> <span class="token number">100</span>%<span class="token punctuation">(</span><span class="token number">2</span>/2<span class="token punctuation">)</span> checking package integrity                                                                                               <span class="token punctuation">[</span>-----------------------------------------------------------------------------<span class="token punctuation">]</span> <span class="token number">100</span>%<span class="token punctuation">(</span><span class="token number">2</span>/2<span class="token punctuation">)</span> loading package files                                                                                                    <span class="token punctuation">[</span>-----------------------------------------------------------------------------<span class="token punctuation">]</span> <span class="token number">100</span>%<span class="token punctuation">(</span><span class="token number">2</span>/2<span class="token punctuation">)</span> checking <span class="token keyword">for</span> <span class="token function">file</span> conflicts                                                                                              <span class="token punctuation">[</span>-----------------------------------------------------------------------------<span class="token punctuation">]</span> <span class="token number">100</span>%:: Processing package changes<span class="token punctuation">..</span>.<span class="token punctuation">(</span><span class="token number">1</span>/2<span class="token punctuation">)</span> upgrading blackarch-keyring                                                                                              <span class="token punctuation">[</span>-----------------------------------------------------------------------------<span class="token punctuation">]</span> <span class="token number">100</span>%<span class="token operator">==</span><span class="token operator">></span> Appending keys from blackarch.gpg<span class="token punctuation">..</span>.<span class="token operator">==</span><span class="token operator">></span> Locally signing trusted keys <span class="token keyword">in</span> keyring<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key A0917C4147A37007CB54C1CFD295AA940EFDDF62<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key 4345771566D76038C7FEB43863EC0ADBEA87E4E3<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key CBA3C7D4798912702DCF568E67D8BDF42AD93F4E<span class="token punctuation">..</span>.  -<span class="token operator">></span> Locally signing key 8F9A9793CB8591147C2EC70566E0CDBD1E01F333<span class="token punctuation">..</span>.<span class="token operator">==</span><span class="token operator">></span> Importing owner trust values<span class="token punctuation">..</span>.<span class="token operator">==</span><span class="token operator">></span> Disabling revoked keys <span class="token keyword">in</span> keyring<span class="token punctuation">..</span>.  -<span class="token operator">></span> Disabling key 5E210889BBB5C48500E0C4F9C75E985FF8B993B4<span class="token punctuation">..</span>.<span class="token operator">==</span><span class="token operator">></span> Updating trust database<span class="token punctuation">..</span>.gpg: key 1EB2638FF56C0C53: no user ID <span class="token keyword">for</span> key signature packet of class <span class="token number">10</span>gpg: key 1EB2638FF56C0C53: no user ID <span class="token keyword">for</span> key signature packet of class <span class="token number">10</span>gpg: key 786C63F330D7CB92: no user ID <span class="token keyword">for</span> key signature packet of class <span class="token number">10</span>gpg: key 786C63F330D7CB92: no user ID <span class="token keyword">for</span> key signature packet of class <span class="token number">10</span>gpg: key 786C63F330D7CB92: no user ID <span class="token keyword">for</span> key signature packet of class <span class="token number">10</span>gpg: key 786C63F330D7CB92: no user ID <span class="token keyword">for</span> key signature packet of class <span class="token number">10</span>gpg: key 786C63F330D7CB92: no user ID <span class="token keyword">for</span> key signature packet of class <span class="token number">10</span>gpg: key 786C63F330D7CB92: no user ID <span class="token keyword">for</span> key signature packet of class <span class="token number">10</span>gpg: key 786C63F330D7CB92: no user ID <span class="token keyword">for</span> key signature packet of class <span class="token number">10</span>gpg: key 786C63F330D7CB92: no user ID <span class="token keyword">for</span> key signature packet of class <span class="token number">10</span>gpg: key 786C63F330D7CB92: no user ID <span class="token keyword">for</span> key signature packet of class <span class="token number">10</span>gpg: key 786C63F330D7CB92: no user ID <span class="token keyword">for</span> key signature packet of class <span class="token number">10</span>gpg: key 786C63F330D7CB92: no user ID <span class="token keyword">for</span> key signature packet of class <span class="token number">10</span>gpg: key 786C63F330D7CB92: no user ID <span class="token keyword">for</span> key signature packet of class <span class="token number">10</span>gpg: key 786C63F330D7CB92: no user ID <span class="token keyword">for</span> key signature packet of class <span class="token number">10</span>gpg: key 786C63F330D7CB92: no user ID <span class="token keyword">for</span> key signature packet of class <span class="token number">10</span>gpg: key 786C63F330D7CB92: no user ID <span class="token keyword">for</span> key signature packet of class <span class="token number">10</span>gpg: key 786C63F330D7CB92: no user ID <span class="token keyword">for</span> key signature packet of class <span class="token number">10</span>gpg: key 786C63F330D7CB92: no user ID <span class="token keyword">for</span> key signature packet of class <span class="token number">10</span>gpg: key 786C63F330D7CB92: no user ID <span class="token keyword">for</span> key signature packet of class <span class="token number">10</span>gpg: key 786C63F330D7CB92: no user ID <span class="token keyword">for</span> key signature packet of class <span class="token number">10</span>gpg: key 786C63F330D7CB92: no user ID <span class="token keyword">for</span> key signature packet of class <span class="token number">10</span>gpg: key 786C63F330D7CB92: no user ID <span class="token keyword">for</span> key signature packet of class <span class="token number">10</span>gpg: key 786C63F330D7CB92: no user ID <span class="token keyword">for</span> key signature packet of class <span class="token number">10</span>gpg: key 786C63F330D7CB92: no user ID <span class="token keyword">for</span> key signature packet of class <span class="token number">10</span>gpg: key 786C63F330D7CB92: no user ID <span class="token keyword">for</span> key signature packet of class <span class="token number">10</span>gpg: key 786C63F330D7CB92: no user ID <span class="token keyword">for</span> key signature packet of class <span class="token number">10</span>gpg: key 786C63F330D7CB92: no user ID <span class="token keyword">for</span> key signature packet of class <span class="token number">10</span>gpg: key 786C63F330D7CB92: no user ID <span class="token keyword">for</span> key signature packet of class <span class="token number">10</span>gpg: key 786C63F330D7CB92: no user ID <span class="token keyword">for</span> key signature packet of class <span class="token number">10</span>gpg: public key DB323392796CA067 is <span class="token number">3037</span> days newer than the signaturegpg: marginals needed: <span class="token number">3</span>  completes needed: <span class="token number">1</span>  trust model: pgpgpg: public key CF66D153D884358F is <span class="token number">16</span> seconds newer than the signaturegpg: depth: <span class="token number">0</span>  valid:   <span class="token number">1</span>  signed:  <span class="token number">56</span>  trust: <span class="token number">0</span>-, 0q, 0n, 0m, 0f, 1ugpg: depth: <span class="token number">1</span>  valid:  <span class="token number">56</span>  signed:  <span class="token number">81</span>  trust: <span class="token number">1</span>-, 0q, 0n, 55m, 0f, 0ugpg: depth: <span class="token number">2</span>  valid:  <span class="token number">77</span>  signed:  <span class="token number">26</span>  trust: <span class="token number">77</span>-, 0q, 0n, 0m, 0f, 0ugpg: next trustdb check due at <span class="token number">2020</span>-12-03<span class="token punctuation">(</span><span class="token number">2</span>/2<span class="token punctuation">)</span> upgrading perl-expect                                                                                                    <span class="token punctuation">[</span>-----------------------------------------------------------------------------<span class="token punctuation">]</span> <span class="token number">100</span>%:: Running post-transaction hooks<span class="token punctuation">..</span>.<span class="token punctuation">(</span><span class="token number">1</span>/2<span class="token punctuation">)</span> Arming ConditionNeedsUpdate<span class="token punctuation">..</span>.<span class="token punctuation">(</span><span class="token number">2</span>/2<span class="token punctuation">)</span> Warn about old perl modules:: Searching databases <span class="token keyword">for</span> updates<span class="token punctuation">..</span>.:: Searching AUR <span class="token keyword">for</span> updates<span class="token punctuation">..</span>. -<span class="token operator">></span> python-pgspecial: <span class="token builtin class-name">local</span> <span class="token punctuation">(</span><span class="token number">1.11</span>.10-2<span class="token punctuation">)</span> is newer than blackarch <span class="token punctuation">(</span><span class="token number">1.11</span>.10-1<span class="token punctuation">)</span> there is nothing to <span class="token keyword">do</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>事实证明还是得看官方文档解决问题，以后直接看官方文档啊同志们！</p><p>CSDN和一堆过时文档害人啊！</p><h2 id="参考">参考</h2><ol type="1"><li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0JsYWNrQXJjaC9ibGFja2FyY2g=">https://github.com/BlackArch/blackarch<i class="fa fa-external-link-alt"></i></span><br /></li><li><span class="exturl" data-url="aHR0cHM6Ly93d3cuYmxhY2thcmNoLm9yZy9kb3dubG9hZHMuaHRtbCNpbnN0YWxsLXJlcG8=">https://www.blackarch.org/downloads.html#install-repo<i class="fa fa-external-link-alt"></i></span></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;我可没干坏事啊&lt;/p&gt;</summary>
    
    
    
    
    <category term="blackarch" scheme="https://zhangjk98.xyz/tags/blackarch/"/>
    
  </entry>
  
  <entry>
    <title>systemd-homed简介(homectl设置用户、用户组)</title>
    <link href="https://zhangjk98.xyz/systemd-homed/"/>
    <id>https://zhangjk98.xyz/systemd-homed/</id>
    <published>2020-11-08T05:52:42.000Z</published>
    <updated>2020-11-08T05:52:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>在2020.3 发布的systemd 245增加了systemd-homed，改变了<code>/home</code>目录的加密和工作方式。用homectl设置用户组，直接加密整个<code>/home</code>目录更方便了，快来当小白鼠吧。 <a id="more"></a></p><h2 id="太长不看版">太长不看版</h2><h3 id="使用homectl新建用户用户组">使用homectl新建用户、用户组</h3><p>首先你的systemd要在245以后，版本较低或使用SysV或者OpenRC、Upstart的玩家请跳过。</p><p>更新：systemd-247以后的版本默认采用Btrfs，还加了一个可选的恢复密码（recovery key），你的密钥丢了可以用这个重置</p><p>homectl是systemd-homed.service的一个cli工具，用来配置用户组、用户，包括新建、删除、修改权限和密码等。考虑到systemd近乎一统江湖的的市场占有率，可能你们将不得不面对这种方式。</p><p>没开启的先开启一下<code>systemd-homed.service</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl <span class="token builtin class-name">enable</span> systemd-homedsystemctl start systemd-homed<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>如果你的daemon没启动可能会出现<code>**Operation on home test1 failed: Failed to execute operation: Resource temporarily unavailable**</code></p><p>看到下面这样就行了</p><pre class="line-numbers language-log" data-language="log"><code class="language-log">Created symlink &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;dbus-org.freedesktop.home1.service → &#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;systemd-homed.service.Created symlink &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;multi-user.target.wants&#x2F;systemd-homed.service → &#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;systemd-homed.service.Created symlink &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;sockets.target.wants&#x2F;systemd-userdbd.socket → &#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;systemd-userdbd.socket.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>新建用户</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">homectl create zhixi<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>会像下面这样提示你输入密码，输完之后要稍等一会</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@zjk-allseries zjk<span class="token punctuation">]</span><span class="token comment"># homectl create zhixi</span>🔐 Please enter new password <span class="token keyword">for</span> user zhixi: ******                  🔐 Please enter new password <span class="token keyword">for</span> user zhixi <span class="token punctuation">(</span>repeat<span class="token punctuation">)</span>: <span class="token punctuation">(</span>press TAB <span class="token keyword">for</span> no <span class="token builtin class-name">echo</span><span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>创建成功之后使用<code>homectl list</code>查看homectl创建的用户是否存在</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@zjk-allseries zjk<span class="token punctuation">]</span><span class="token comment"># homectl list</span>NAME  <span class="token environment constant">UID</span>   GID   STATE    REALNAME <span class="token environment constant">HOME</span>        <span class="token environment constant">SHELL</span>    <span class="token builtin class-name">test</span>  <span class="token number">60444</span> <span class="token number">60444</span> inactive <span class="token builtin class-name">test</span>     /home/test  /bin/bashtest1 <span class="token number">60510</span> <span class="token number">60510</span> inactive test1    /home/test1 /bin/bashzhixi <span class="token number">60353</span> <span class="token number">60353</span> inactive zhixi    /home/zhixi /bin/bash<span class="token number">3</span> home areas listed.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>homectl inspect username</code>可以查看用户信息</p><pre class="line-numbers language-none"><code class="language-none">[root@zjk-allseries zhixi]# homectl inspect zhixi   User name: zhixi       State: active Disposition: regular Last Change: Sat 2020-10-31 17:05:25 CST    Login OK: yes Password OK: yes         UID: 60353         GID: 60353 (zhixi)   Directory: &#x2F;home&#x2F;zhixi     Storage: luks (strong encryption)  Image Path: &#x2F;home&#x2F;zhixi.home   Removable: no       Shell: &#x2F;bin&#x2F;bashLUKS Discard: online&#x3D;no offline&#x3D;yes   LUKS UUID: 107ff22e399d417d92f398c91275de3b   Part UUID: 645499ec3e554eaca0f09a9b172d89b3     FS UUID: a6b5969ecfee4ae49f0cad9931f31589 File System: ext4 LUKS Cipher: aes Cipher Mode: xts-plain64  Volume Key: 256bit Mount Flags: nosuid nodev exec   Disk Size: 654.0G  Disk Usage: 11.3G (&#x3D; 1.8%)   Disk Free: 642.7G (&#x3D; 98.2%)  Disk Floor: 11.3GDisk Ceiling: 769.5G  Good Auth.: 1   Last Good: Sat 2020-10-31 19:23:25 CST   Bad Auth.: 1    Last Bad: Sat 2020-10-31 19:23:17 CST    Next Try: anytime Auth. Limit: 30 attempts per 1min   Passwords: 1  Local Sig.: yes     Service: io.systemd.Homelines 2-36&#x2F;36 (END)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后激活用户</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">homectl activate zhixi<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>退出当前用户并切换用户就可以了(你可能需要更改PAM设置才能正常使用su切换用户)</p><h3 id="从原来的用户组管理方式迁往systemd-homed">从原来的用户组管理方式迁往systemd-homed</h3><blockquote><p>这里直接复读一下systemd官网的警告，需要手动操作、有风险、做好备份、出了事自行承担</p></blockquote><p>(不喜欢折腾的人不推荐这么干，原来的又不是不能用了</p><p>其实建议你直接去看<span class="exturl" data-url="aHR0cHM6Ly9zeXN0ZW1kLmlvL0NPTlZFUlRJTkdfVE9fSE9NRUQv">官网的英文说明<i class="fa fa-external-link-alt"></i></span>，这个是给不想看官方文档的懒狗准备的（不会吧不会吧，不会真有这种懒狗吧）</p><p>切到root操作，先重命名你的用户目录，随便移到一个空间够的位置</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mv</span> /home/zhixi /home/zhixi.saved<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后看一下你的用户设置（假设用户名是zhixi,GID=1000），以及所在的用户组设置（1000改成你的GID）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">getent <span class="token function">passwd</span> zhixigetent shadow zhixigetent group <span class="token number">1000</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>（上面是官方文档的做法，也可以用<code>lslogin -u</code>查看）</p><p>把上面这些也备份一下。然后把<code>/etc/passwd</code>和<code>/etc/shadow</code>和<code>/etc/group</code>还有<code>/etc/gshadow</code>里面的zhixi用户相关的东西删了（基本上就只有一行）。</p><p>（官方文档说为了安全请使用<code>vipw</code>, <code>vipw -s</code>, <code>vigr</code> and <code>vigr -s</code>，这些是给配置文件加锁，防止多人同时更改出现问题，使用跟vim一样（找到那一行按dd然后ESC, :,wq回车就好了），如果你确定是自己一个人操作（也没有别人远程登陆或者其他程序正在修改），似乎用别的什么文本编辑器也没什么问题）</p><p>（其实，你可以直接用<code>userdel</code>删除）</p><p>然后剩下的操作跟第一节一样，用<code>homectl</code>新建一个就好了</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">homectl create zhixi --uid<span class="token operator">=</span><span class="token number">1000</span> --real-name<span class="token operator">=</span>zjk<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>(uid填你的uid，real-name后面填你的GECOS)</p><p>可能你还想改改磁盘加密方式什么的，想设置的都先设置好。</p><p>然后rsync把原来备份了的东西放回<code>/home/zhixi</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">homectl with zhixi -- <span class="token function">rsync</span> -aHAXv --remove-source-files /home/zhixi.saved/ <span class="token builtin class-name">.</span> <span class="token operator">&amp;&amp;</span>  <span class="token function">rmdir</span> /home/foobar.saved<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="注意">注意</h3><p>systemd-homed是一个用户一个私有用户组。如果你一个用户组设置了多个用户的话，可能要调整一下。</p><h2 id="systemd-homed简介">systemd-homed简介</h2><p><del>感觉这下子systemd接管的东西更多了</del></p><h3 id="以前的用户和用户组管理">以前的用户和用户组管理</h3><p>好吧，以前要加引号，现在这个在大部分Linux都还没人用呢（甚至连一篇中文介绍都没有）。</p><p>通常使用<code>useradd</code>或<code>adduser</code>新建用户（不同发行版这两条命令有一点区别），比如</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">useradd</span> -U temp<span class="token function">sudo</span> <span class="token function">useradd</span> temp1 -m -G temp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>新建一个temp用户组并给temp用户组中新建一个叫temp1的用户（同时在<code>/home</code>下新建一个<code>temp1</code>目录作为用户目录）。</p><p>然后使用<code>passwd temp1</code>为用户temp1指定密码</p><p>（虽然useradd有<code>-p</code>选项可以直接指定密码，通常不建议这样做，因为这样子恁的密码会明文留在历史命令里，如果有人不怀好意的执行一下<code>history</code>或者<code>more /home/$USER/.bash_history</code>或者<code>ctrl+r</code>搜索useradd，他将轻易获取你的密码），你用了sudo也可能会被找到，比如<span class="exturl" data-url="aHR0cHM6Ly9zdXBlcnVzZXIuY29tL3F1ZXN0aW9ucy8zMDk0MzQvaG93LXRvLXZpZXctY29tbWFuZC1oaXN0b3J5LW9mLWFub3RoZXItdXNlci1pbi1saW51eA==">这个<i class="fa fa-external-link-alt"></i></span></p><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuZnJlZWJ1Zi5jb20vbmV3cy8xMzU4NDUuaHRtbA==">https://www.freebuf.com/news/135845.html<i class="fa fa-external-link-alt"></i></span> history -c 也不太保险</p><p>你的用户名、密码、用户组、权限配置基本都放在<code>/etc</code>目录下面，比如<code>/etc/passwd</code>里面存你的密码，<code>etc/group</code>里面放用户组的设置。<code>/etc/sudoers</code>是超级用户的设置。每个用户的配置散落在各个地方，一些个人设置还被放在了<code>/home/user</code>底下。</p><p>这个样子你需要<code>/etc</code>的写权限，一个用户不同系统迁移的时候需要同时迁移其他的目录（而且UID还得一样），想对<code>/home</code>单独加密也不太方便。</p><h3 id="变化">变化</h3><p>主要的变化就是你的个人用户都扔到<code>/home/yourusername</code>下面了。（据说）这样更方便加密和迁移。默认采用LUKS，在用户登陆的时候解密并挂载<code>/home/user</code>，在用户退出登陆的时候加密并取消挂载。休眠挂起（Suspend）的时候也会加密锁住。</p><p>比如你有一个u盘，里面装了你的用户目录，到别的电脑上插上去就能用了，不需要那边给你新建一个用户（现在基本不太行，对面电脑起码得也是systemd 245 版本以上还得启用<code>systemd-homed</code>，我乐观估计等这玩意普及至少得两年吧，那些用老CentOS的万年钉子户更别想了）</p><p>这样也方便全盘加密（我不是那种对物理安全都看的很在乎的申必人士，据说全盘加密会有点性能问题，而且休眠睡眠也比较容易起不来，所以我没试过）（不过恁不用这个systemd-homed其实也能全盘加密）</p><p>现在使用<code>systemd-homed.service</code>和<code>systemd-userdbd.service</code>两个daemon管理用户，登陆的时候是<code>systemd-logind</code> 在管。大概是这么个流程：</p><p><img src="/systemd-homed/image-20201108172857040.png" /></p><p><img src="/systemd-homed/image-20201108172321494.png" /></p><p>另外，Yubikeys现在是一等公民（说的好像这小玩意这么贵我买得起一样） Yubikeys或者别的加密设备我手头没有，而且LUKS加密home目录之类的我也没有那么高的安全需求，哪位好心人要是愿意送/借我一个玩玩，我把这部分内容补上</p><h3 id="现在的样子">现在的样子</h3><p>使用<code>homectl activate</code>激活用户目录后你会看到在<code>/home</code>目录下多了一个用户目录</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ homectl activate zhixi🔐 Please enter password <span class="token keyword">for</span> user zhixi: ****** <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>原来<code>/home</code>下只有一个zhixi.home，activate之后多了一个zhixi目录</p><p>我们看一下这个目录下面有什么</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token builtin class-name">cd</span> /home/zhixi <span class="token operator">&amp;&amp;</span> <span class="token function">ls</span> -a<span class="token builtin class-name">.</span>  <span class="token punctuation">..</span>  .bash_logout  .bash_profile  .bashrc  .identity<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>其中的<code>.identity</code>存放你的密码等登陆认证信息（以json存储用户记录（JSON User Recoed））,大概长这样</p><figure><img src="/systemd-homed/image-20201108170804174.png" alt="image-20201108170804174" /><figcaption aria-hidden="true">image-20201108170804174</figcaption></figure><p><code>homectl inspect username</code>可以查看用户信息</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ homectl inspect zhixi   User name: zhixi       State: active Disposition: regular Last Change: Sat <span class="token number">2020</span>-10-31 <span class="token number">17</span>:05:25 CST    Login OK: <span class="token function">yes</span> Password OK: <span class="token function">yes</span>         <span class="token environment constant">UID</span><span class="token builtin class-name">:</span> <span class="token number">60353</span>         GID: <span class="token number">60353</span> <span class="token punctuation">(</span>zhixi<span class="token punctuation">)</span>   Directory: /home/zhixi     Storage: luks <span class="token punctuation">(</span>strong encryption<span class="token punctuation">)</span>  Image Path: /home/zhixi.home   Removable: no       Shell: /bin/bashLUKS Discard: <span class="token assign-left variable">online</span><span class="token operator">=</span>no <span class="token assign-left variable">offline</span><span class="token operator">=</span>yes   LUKS UUID: 107ff22e399d417d92f398c91275de3b   Part UUID: 645499ec3e554eaca0f09a9b172d89b3     FS UUID: a6b5969ecfee4ae49f0cad9931f31589 File System: ext4 LUKS Cipher: aes Cipher Mode: xts-plain64  Volume Key: 256bit Mount Flags: nosuid nodev <span class="token builtin class-name">exec</span>   Disk Size: <span class="token number">654</span>.0G  Disk Usage: <span class="token number">11</span>.3G <span class="token punctuation">(</span><span class="token operator">=</span> <span class="token number">1.8</span>%<span class="token punctuation">)</span>   Disk Free: <span class="token number">642</span>.7G <span class="token punctuation">(</span><span class="token operator">=</span> <span class="token number">98.2</span>%<span class="token punctuation">)</span>  Disk Floor: <span class="token number">11</span>.3GDisk Ceiling: <span class="token number">769</span>.5G  Good Auth.: <span class="token number">1</span>   Last Good: Sat <span class="token number">2020</span>-10-31 <span class="token number">19</span>:23:25 CST   Bad Auth.: <span class="token number">1</span>    Last Bad: Sat <span class="token number">2020</span>-10-31 <span class="token number">19</span>:23:17 CST    Next Try: anytime Auth. Limit: <span class="token number">30</span> attempts per 1min   Passwords: <span class="token number">1</span>  Local Sig.: <span class="token function">yes</span>     Service: io.systemd.Homelines <span class="token number">2</span>-36/36 <span class="token punctuation">(</span>END<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="存在的一些问题">存在的一些问题</h3><p>这个东西主要是focus on <code>particularly Laptop users</code>，目前可能多多少少有点小问题。企业用途和运维貌似也不怎么需要这个。</p><h4 id="ssh的问题">SSH的问题</h4><p>这个东西直接把/home全都加密了，当然也包括<code>.ssh</code>目录下面的东西。</p><p>目前看来没有什么很完美的办法，有人是这样干的：先整一个其他的空用户在他的/home/user下面存公钥，用密码登陆，然后su切过去。(反正看起来挺扭曲的)</p><p>不过对于笔记本个人用户来说SSH到自己的加密盘貌似不是什么刚需，还是等完善了随身带着硬盘走比较好。</p><h4 id="休眠">休眠</h4><p>貌似不少人会碰到奇奇怪怪的休眠问题，很在意休眠的笔记本用户请谨慎上车。</p><h4 id="删除用户后sddm仍有残留">删除用户后SDDM仍有残留</h4><p>用<code>homectl activate</code>激活了一个用户temp1，然后用<code>homectl remove</code>删除了这个用户temp1，结果发现我的SDDM在登陆页面仍然有原来的temp1。检查<code>/home</code>发现这下面已经没有temp1.home文件了，但是还有temp1这个文件夹（受保护）。</p><p>我又用刚才新建的用户zhixi试了一下，在inactive情况下会比较干净的remove。</p><h2 id="可能的报错">可能的报错</h2><pre class="line-numbers language-none"><code class="language-none">homectl su: Authentication service cannot retrieve authentication info<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>可能是你的daemon没启动，试试启动daemon并重启一下试试。</p><pre class="line-numbers language-none"><code class="language-none">Operation on home me failed: Specified user name me conflicts with an NSS group by the same name, refusing.<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>用户组冲突了，看看你之前是不是用useradd之类的操作新建过同名用户组。</p><pre class="line-numbers language-none"><code class="language-none">su: Authentication service cannot retrieve authentication info<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这个报错出现在我换到systemd-homed后试图用su切换用户。一开始我用 su 在桌面环境下切用户就没成功过，退出登陆后跑到SDDM里是可以的，本来以为这是个feature。后来觉得不应该啊，一查果然，要手动改PAM设置，在<code>/etc/pam.d</code>里面改一下su的配置就好了。配置照着模板改就好了，<code>man pam_systemd_home</code>，详情参考<span class="exturl" data-url="aHR0cHM6Ly93d3cuZnJlZWRlc2t0b3Aub3JnL3NvZnR3YXJlL3N5c3RlbWQvbWFuL3BhbV9zeXN0ZW1kX2hvbWUuaHRtbA==">pam_systemd_home<i class="fa fa-external-link-alt"></i></span>，arch用户看<span class="exturl" data-url="aHR0cHM6Ly9qbGsuZmpmaS5jdnV0LmN6L2FyY2gvbWFucGFnZXMvbWFuL3BhbV9zeXN0ZW1kX2hvbWUuOA==">这里<i class="fa fa-external-link-alt"></i></span></p><figure><img src="/systemd-homed/image-20201108142022596.png" alt="PAM模板例子" /><figcaption aria-hidden="true">PAM模板例子</figcaption></figure><p>而且看起来很多时候有root权限它还是会让你输入当前用户的密码，比如<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3N5c3RlbWQvc3lzdGVtZC9pc3N1ZXMvMTYxNjY=">这个issue<i class="fa fa-external-link-alt"></i></span></p><pre class="line-numbers language-none"><code class="language-none">Operation on home username failed: Access denied<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>权限不够，你至少需要root权限或者要切换到的那个用户的密码才能操作对应目录或者修改配置。（貌似homectl的很多操作需要输入）</p><pre class="line-numbers language-none"><code class="language-none">Operation on home username failed: Failed to execute operation: File exists<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这个错误的原因可能有很多，或许可以试试<code>systemctl restart systemd-homed</code></p><pre class="line-numbers language-none"><code class="language-none">(Unknown (FileSystemError): Error: ENOSPC: no space left on device, write)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>我新建第二个的时候没有指定存储空间，直接塞满了。用<code>homectl resize user 10G</code>调整了磁盘分配后解决。</p><h2 id="附">附</h2><p>给不愿意<code>--help</code>看英文说明的懒狗翻译一下命令选项</p><h3 id="homectl命令选项">homectl命令选项</h3><table><colgroup><col style="width: 12%" /><col style="width: 28%" /><col style="width: 36%" /><col style="width: 20%" /><col style="width: 2%" /></colgroup><thead><tr class="header"><th>homectl</th><th>Explinations</th><th>作用</th><th>例子</th><th></th></tr></thead><tbody><tr class="odd"><td>list</td><td>List home areas</td><td>列出用户信息（包括NAME UID GID STATE REALNAME HOME SHELL）</td><td>homectl list</td><td></td></tr><tr class="even"><td>activate USER…</td><td>Activate a home area</td><td>激活用户（执行后<code>/home</code>下面会多出一个和用户同名的目录）</td><td>homectl activate zhixi</td><td></td></tr><tr class="odd"><td>deactivate USER…</td><td>Deactivate a home area</td><td>取消激活</td><td>homectl deactivate zhixi</td><td></td></tr><tr class="even"><td>inspect USER…</td><td>Inspect a home area</td><td>查看用户信息，跟userdbctl user... 的输出差不多</td><td>homectl inspect zhixi</td><td></td></tr><tr class="odd"><td>authenticate USER…</td><td>Authenticate a home area</td><td>验证用户</td><td>homectl authenticate zhixi</td><td></td></tr><tr class="even"><td>create USER</td><td>Create a home area</td><td>新建用户</td><td>homectl create zhixi</td><td></td></tr><tr class="odd"><td>remove USER…</td><td>Remove a home area</td><td>移除用户</td><td>homectl remove zhixi</td><td></td></tr><tr class="even"><td>update USER</td><td>Update a home area</td><td>更改用户设置和状态</td><td>homectl update me --locked=false</td><td></td></tr><tr class="odd"><td>passwd USER</td><td>Change password of a home area</td><td>改密码</td><td>homectl passwd zhixi</td><td></td></tr><tr class="even"><td>with USER [COMMAND…]</td><td>Run shell or command with access to a home area</td><td>用到/在某个用户目录下执行命令（需要root或该用户密码）</td><td>homectl with zhixi -- mkdir test1</td><td></td></tr><tr class="odd"><td>resize USER SIZE</td><td>Resize a home area</td><td>调整用户的存储空间</td><td>homectl resize zhixi 30G</td><td></td></tr><tr class="even"><td>lock USER...</td><td>Temporarily lock an active home area</td><td>锁定用户</td><td>homectl lock zhixi</td><td></td></tr><tr class="odd"><td>unlock USER</td><td>Unlock a temporarily locked home area</td><td>解锁用户</td><td>homectl unlock zhixi</td><td></td></tr></tbody></table><h3 id="userdbctl命令选项">userdbctl命令选项</h3><table><colgroup><col style="width: 19%" /><col style="width: 41%" /><col style="width: 13%" /><col style="width: 25%" /></colgroup><thead><tr class="header"><th>userdbctl</th><th>Explinations</th><th>作用</th><th>例子</th></tr></thead><tbody><tr class="odd"><td>user [USER…]</td><td>Inspect user</td><td>查看用户信息</td><td>userdbctl user zhixi</td></tr><tr class="even"><td>group [GROUP…]</td><td>Inspect group</td><td>查看用户组信息</td><td>userdbctl group zhixi</td></tr><tr class="odd"><td>users-in-group [GROUP…]</td><td>Show users that are members of specified group(s)</td><td>查看组中用户</td><td>userdbctl users-in-group zhixi</td></tr><tr class="even"><td>groups-of-user [USER…]</td><td>Show groups the specified user(s) is a member of</td><td>查看用户所在的组</td><td>userdbctl groups-of-user zhixi</td></tr></tbody></table><h2 id="参考">参考</h2><p><span class="exturl" data-url="aHR0cHM6Ly9zeXN0ZW1kLmlvL0hPTUVfRElSRUNUT1JZLw==">https://systemd.io/HOME_DIRECTORY/<i class="fa fa-external-link-alt"></i></span> 官方文档</p><p><span class="exturl" data-url="aHR0cHM6Ly93d3cubWFuNy5vcmcvbGludXgvbWFuLXBhZ2VzL21hbjEvaG9tZWN0bC4xLmh0bWw=">https://www.man7.org/linux/man-pages/man1/homectl.1.html<i class="fa fa-external-link-alt"></i></span> <span class="exturl" data-url="aHR0cHM6Ly93d3cuZnJlZWRlc2t0b3Aub3JnL3NvZnR3YXJlL3N5c3RlbWQvbWFuL2hvbWVjdGwuaHRtbA==">https://www.freedesktop.org/software/systemd/man/homectl.html<i class="fa fa-external-link-alt"></i></span></p><p><span class="exturl" data-url="aHR0cHM6Ly9sd24ubmV0L0FydGljbGVzLzgxNDA2OC8=">systemd 245 released<i class="fa fa-external-link-alt"></i></span> systemd第245次更新详情</p><p><span class="exturl" data-url="aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvaW5kZXgucGhwL1N5c3RlbWQtaG9tZWQ=">https://wiki.archlinux.org/index.php/Systemd-homed<i class="fa fa-external-link-alt"></i></span></p><p><span class="exturl" data-url="aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvaW5kZXgucGhwL1VzZXJzX2FuZF9ncm91cHNfKOeugOS9k+S4reaWhyk=">https://wiki.archlinux.org/index.php/Users_and_groups_(简体中文)<i class="fa fa-external-link-alt"></i></span></p><p><span class="exturl" data-url="aHR0cHM6Ly9zeXN0ZW1kLmlvL0NPTlZFUlRJTkdfVE9fSE9NRUQv">https://systemd.io/CONVERTING_TO_HOMED/<i class="fa fa-external-link-alt"></i></span></p><p><span class="exturl" data-url="aHR0cHM6Ly93d3cucmVkZGl0LmNvbS9yL2FyY2hsaW51eC9jb21tZW50cy9mZ2M5MWIvd2l0aF9zeXN0ZW1kXzI0NV9sYW5kaW5nX2luX3JlcG9zX3N5c3RlbWRob21lZF9pcy8=">https://www.reddit.com/r/archlinux/comments/fgc91b/with_systemd_245_landing_in_repos_systemdhomed_is/<i class="fa fa-external-link-alt"></i></span> 在Arch上使用的reddit讨论，archwiki的页面也是这个帖子的楼主写的</p><p><span class="exturl" data-url="aHR0cHM6Ly9tZWRpYS5jY2MuZGUvdi9BU0cyMDE5LTE2NC1yZWludmVudGluZy1ob21lLWRpcmVjdG9yaWVz">https://media.ccc.de/v/ASG2019-164-reinventing-home-directories<i class="fa fa-external-link-alt"></i></span> 一个传教视频</p><p><span class="exturl" data-url="aHR0cHM6Ly9jZnAuYWxsLXN5c3RlbXMtZ28uaW8vbWVkaWEvaG9tZWQtYXNnMjAxOS5wZGY=">https://cfp.all-systems-go.io/media/homed-asg2019.pdf<i class="fa fa-external-link-alt"></i></span> 一个传教PPT</p><p>其他的一些简介</p><p><span class="exturl" data-url="aHR0cHM6Ly9saW51eHJldmlld3Mub3JnL1N5c3RlbWQtSG9tZWRfSXNfTWVyZ2VkX0FuZF9JdF9XaWxsX0Z1bmRhbWVudGFsbHlfQ2hhbmdlX0xpbnV4X0hvbWVfRGlyZWN0b3JpZXM=">https://linuxreviews.org/Systemd-Homed_Is_Merged_And_It_Will_Fundamentally_Change_Linux_Home_Directories<i class="fa fa-external-link-alt"></i></span></p><p><span class="exturl" data-url="aHR0cHM6Ly93d3cudGVjaHJlcHVibGljLmNvbS9hcnRpY2xlL2xpbnV4LWhvbWUtZGlyZWN0b3J5LW1hbmFnZW1lbnQtaXMtYWJvdXQtdG8tdW5kZXJnby1tYWpvci1jaGFuZ2Uv">https://www.techrepublic.com/article/linux-home-directory-management-is-about-to-undergo-major-change/<i class="fa fa-external-link-alt"></i></span></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;在2020.3 发布的systemd 245增加了systemd-homed，改变了&lt;code&gt;/home&lt;/code&gt;目录的加密和工作方式。用homectl设置用户组，直接加密整个&lt;code&gt;/home&lt;/code&gt;目录更方便了，快来当小白鼠吧。</summary>
    
    
    
    <category term="不务正业系列" scheme="https://zhangjk98.xyz/categories/%E4%B8%8D%E5%8A%A1%E6%AD%A3%E4%B8%9A%E7%B3%BB%E5%88%97/"/>
    
    
    <category term="homectl" scheme="https://zhangjk98.xyz/tags/homectl/"/>
    
    <category term="systemd-homed" scheme="https://zhangjk98.xyz/tags/systemd-homed/"/>
    
  </entry>
  
  <entry>
    <title>垃圾佬的Openwrt软路由</title>
    <link href="https://zhangjk98.xyz/openwrt/"/>
    <id>https://zhangjk98.xyz/openwrt/</id>
    <published>2020-10-30T11:15:19.000Z</published>
    <updated>2020-10-30T11:15:19.000Z</updated>
    
    <content type="html"><![CDATA[<p>又是捡垃圾的快乐一天 <a id="more"></a></p><h2 id="材料">材料</h2><h3 id="教研室捡来的垃圾">教研室捡来的垃圾</h3><blockquote><p>又不是不能用</p></blockquote><ul><li>2GB 内存条（看起来全新实际上至少八九年前的了，别问为什么只有2G，这是教研室能捡垃圾捡到的最后一块内存条了）</li><li>120G intel固态（包浆成色，上个月刚从一个旧电脑上拆下来的）</li><li>一块 i5 4570 的CPU（战斗成色，貌似也六年了）</li><li>一个风扇（战损成色，全是灰）</li><li>六七年前的华硕主板（伊拉克战损成色）</li><li>一个三星显示器（屏幕漏光，也有五六年了，装系统临时用一下）</li><li>一个2014年的老机箱（战斗成色，全是灰）</li><li>一个主机电源（不是很新，200W）</li><li>VGA线、电源线、排线（普通成色）</li><li>螺丝等（一大把旧主机上拆下来的）</li><li>键盘（N年前的薄膜，伊拉克战损成色，全是灰）</li></ul><p>对，102网吧的主板就是这样子的战损主板</p><figure><img src="/openwrt/image-20201030191635951.webp" alt="对，只有这种主板了" /><figcaption aria-hidden="true">对，只有这种主板了</figcaption></figure><h3 id="全新的和自掏腰包的">全新的和自掏腰包的</h3><p>基本都是室友出的钱</p><ul><li>螺丝刀等（全新，室友的）</li><li>一个插排（昨天室友买的）</li><li>硅脂（全新）</li><li>网卡（室友网购的，刚到）</li><li>网线（教研室网线太老了，就不捡垃圾了）</li><li>clash和v2ray订阅，机场买的</li></ul><h2 id="刷机">刷机</h2><p>自行编译时间太长就用人家编译好的了, 室友刷的。本来以为可能2G的老内存可能会卡，结果室友的win10 pe上去意外的流畅。</p><p>借用了这个<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0xvbW90SG8vVUVTVEMtTmV0d29ya0F1dG9Db25uZWN0">电子科技大学校园网自动登陆脚本<i class="fa fa-external-link-alt"></i></span></p><h2 id="一点小插曲">一点小插曲</h2><p>晚上室友买完插排，第二天我发现教研室的一个旧箱子里满满一箱子插排，好家伙，亏了一个亿。</p><figure><img src="/openwrt/image-20201030191838215.webp" alt="这么多插排...." /><figcaption aria-hidden="true">这么多插排....</figcaption></figure><p>本来Openclash都整好了，结果发现室友的安卓电报没法自行分流。换成了 ssr plus</p><p>装好之后发现风扇声音有点大........直接把风扇线拔了，世界终于清净了。至于散热，问题不大（这么点负载总不可能把CPU给烧了）。</p><p>ps. 正确的做法是SSH上去</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">fanspeedctl stop --all --now<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>固态闲置了100多个G</p><h2 id="突然发现了clash的正确使用方式">突然发现了clash的正确使用方式</h2><p>之前一直很不喜欢clash，clash for win10的图形界面操作在我看起来特别反人类，安卓和平板上clash的app耗电惊人。自动切换线路和分流对我来说又没什么用，一直觉得clash鸡肋，不知道为什么这么多人都在说clash香。</p><p>直到今天室友带入坑上了软路由，好家伙，自动分流和切换真香</p><p>clash这种就适合软路由或者台式机什么的，手机和平板耗电根本顶不住，挂在后台掉电太快了</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;又是捡垃圾的快乐一天</summary>
    
    
    
    <category term="102网吧日常" scheme="https://zhangjk98.xyz/categories/102%E7%BD%91%E5%90%A7%E6%97%A5%E5%B8%B8/"/>
    
    
    <category term="openwrt" scheme="https://zhangjk98.xyz/tags/openwrt/"/>
    
    <category term="捡垃圾" scheme="https://zhangjk98.xyz/tags/%E6%8D%A1%E5%9E%83%E5%9C%BE/"/>
    
  </entry>
  
  <entry>
    <title>为什么不试试EndeavourOS呢</title>
    <link href="https://zhangjk98.xyz/why-not-try-endeavouros/"/>
    <id>https://zhangjk98.xyz/why-not-try-endeavouros/</id>
    <published>2020-09-13T15:52:18.000Z</published>
    <updated>2020-09-13T15:52:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>sudo pacman -Rs win10</p><a id="more"></a><p>其实还是建议能折腾的玩家直接上原味Arch。不想装Arch的偷懒用户可以试试这个（不过推荐想用KDE等其他桌面的玩家先选择离线安装，然后卸载xfce的包，再装其他DE。这个在线安装的时候每装一个包都会 -Syu 一下，非常慢）</p><h2 id="镜像源">镜像源</h2><p>再次更新，你电镜像源有EndeavourOS了： <span class="exturl" data-url="aHR0cDovL21pcnJvcnMudWVzdGMuY24vZW5kZWF2b3Vyb3Mv">http://mirrors.uestc.cn/endeavouros/<i class="fa fa-external-link-alt"></i></span></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">"Server = http://mirrors.tuna.tsinghua.edu.cn/endeavouros/repo/<span class="token variable">$repo</span>/<span class="token variable">$arch</span>"</span> <span class="token operator">></span> /etc/pacman.d/endeavouros-mirrorlist<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>iso镜像在<span class="exturl" data-url="aHR0cDovL21pcnJvcnMudWVzdGMuY24vZW5kZWF2b3Vyb3MvaXNvLw==">这里<i class="fa fa-external-link-alt"></i></span></p><p>清华已经安排上了EndeavourOS的镜像和<span class="exturl" data-url="aHR0cHM6Ly9taXJyb3JzLnR1bmEudHNpbmdodWEuZWR1LmNuL2VuZGVhdm91cm9zL2lzby8=">iso<i class="fa fa-external-link-alt"></i></span>，可以方便的下载iso和更新EndeavourOS的包了。（或者用PT种子下载，实测速度均&gt;10Mb/s）</p><p>更改<code>/etc/pacman.d/endeavouros-mirrorlist</code>中的内容，改为</p><pre class="line-numbers language-config" data-language="config"><code class="language-config">## ChinaServer &#x3D; https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;endeavouros&#x2F;repo&#x2F;$repo&#x2F;$arch<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>然后<code>sudo pacman -Syy</code>刷新一下</p><h2 id="安装virtualbox虚拟机">安装virtualbox虚拟机</h2><p>我用的kernel是lts版本（偶滴本本是Nvidia独显，不敢上kernel一直滚，怕炸）</p><p>装头文件、virtualbox组件、网络和vnc扩展（可选）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S linux-lts-headers virtualbox virtualbox-guest-iso virtualbox-host-dkms net-tools virtualbox-ext-vnc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>推荐安装oracle的增强扩展（一些自适应分辨率缩放、USB驱动什么的都在这里面）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yay -S virtualbox-ext-oracle<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后下载镜像（微软貌似出了用于虚拟机的免费90天win10，然而win10还是耗资源，没有什么特殊需求就只是用用office用用QQ什么的开个win7甚至XP虚拟机就好了，在虚拟机里会流畅一点）</p><p>增强功能要在win虚拟机中手动安装扩展才能用</p><h2 id="终端配置">终端配置</h2><h3 id="将bashzsh的终端输出信息和日志改回英文">将bash/zsh的终端输出信息和日志改回英文</h3><p>终端有些报错和输出还是要靠英文去谷歌，中文资料太少了，查不到，但是又不想把全局设置成英文的。直接<code>export LANG=en_US.UTF-8</code>不起作用，改成<code>export LANG=en_US</code>变成了英文但是中文乱码了，差了一下LANGUAGE参数的优先级比LANG要高、LC_X参数优先级比LANGUAGE高，修改LANGUAGE变量即可。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">LANGUAGE</span></span><span class="token operator">=</span><span class="token string">"en_US:UTF-8"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>只修改终端那就在.bashrc加上</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">"<span class="token environment constant">$TERM</span>"</span><span class="token operator">=</span><span class="token string">"linux"</span> <span class="token punctuation">]</span> <span class="token punctuation">;</span><span class="token keyword">then</span> <span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">LANGUAGE</span></span><span class="token operator">=</span>en_US <span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">LANG</span></span><span class="token operator">=</span>en_US.UTF-8 <span class="token keyword">fi</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="默认终端改为zsh">默认终端改为zsh</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">chsh -s /usr/bin/zsh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>装oh-my-zsh（因为我懒得自己配置zsh了）和插件，并设置默认终端为oh-my-zsh</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yay -S <span class="token function">zsh</span> oh-my-zsh-git autojump zsh-autosuggestions zsh-syntax-highlightingchsh -s /usr/bin/zsh<span class="token function">cp</span> /usr/share/oh-my-zsh/zshrc ~/.zshrc <span class="token comment"># 我比较懒，就直接把默认配置拿过来改改</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="更换lts内核">更换lts内核</h2><p>更新到5.8以后我的virtualbox又出问题了，换回linux-lts</p><p>EndeavourOS有一个叫akm的图形界面，但是你要手动重装virtualbox之类的会受到内核影响的东西。</p><h2 id="显卡驱动">显卡驱动</h2><blockquote><p>so, nvidia f.....</p></blockquote><p>算了，3080那么强，不黑英伟达了(更新，AMD新卡出了，好家伙</p><p>他们从以前Antergos那fork了一个驱动安装脚本，有个包叫nvidia-installer（lts等用户请用nvidia-installer-dkms），看<span class="exturl" data-url="aHR0cHM6Ly9lbmRlYXZvdXJvcy5jb20vZG9jcy9oYXJkd2FyZS1hbmQtbmV0d29yay9ncmFwaGljLWNhcmRzLWdwdS1kcml2ZXItYW5kLXNldHVwLw==">这里<i class="fa fa-external-link-alt"></i></span>。</p><h2 id="桌面环境">桌面环境</h2><p>EndeavourOS官方魔改定制了xfce的主题和图标，离线安装镜像也只有xfce，其他的几乎没怎么魔改。</p><p>如果要装其他DE的话</p><p>紫红配色看个人喜好吧，其实我不太能欣赏的来（这个配色，Gitlab同款）</p><p>更新，KDE 的 5.20.2 配色和EndeavourOS完全一致，建议他们火速从XFCE迁往KDE（不是</p><figure><img src="/why-not-try-endeavouros/image-20201031190318540.png" alt="KDE新官网样子" /><figcaption aria-hidden="true">KDE新官网样子</figcaption></figure><p>多桌面环境可能出问题，非要这样做的话建议每个不同的桌面环境分配一个单独的用户名。 （貌似xfce4和KDE一起用几乎问题（用ssdm），先装ssdm和KDE,然后装xfce4） 尝试了一下i3wm, 简洁是真的简洁，不太习惯又删了换回KDE了。</p><p>KDE有一种 Windows Vista 的感觉，感觉是 linux 所有 Desktop Enviroment 里面最舒服的。xfce虽然是EndeavourOS默认的DE，但是xfce开发人手不够，用户和社区贡献者也比KDE少，而且内存占用最新的KDE已经比xfce低了.....现在xfce也不怎么轻量了，渣配置机器上表现没有LXDE好，感觉不少用户都转去用i3wm和KDE了...逐渐没落的夕阳DE，适合养老</p><h2 id="硬盘扩容和迁移">硬盘扩容和迁移</h2><p>趁打折买了一块西数SN550,之前只有500G还装了个双系统的笔记本可以扩容了</p><p>现在把/home分区（大概60G）从老硬盘移动到新硬盘上，空出来的60G给/目录。我既不是LVM也没有组raid，文件系统用的ext4，500G老硬盘分了400G给win10,剩下100G给了linux，分了一个/，40G,一个/home，60G</p><p>先格式化（这里我用的GPT分区表，ext4），然后挂载到/mnt,然后用rsync迁移/home下的文件到/mnt 然后umount，然后分区合并给/root，再挂载到/home下面</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">fdisk</span> -lyay -Sy <span class="token function">rsync</span>mkfs.ext4 /dev/nvme0n1p1<span class="token function">mount</span> /dev/nvme0n1p1 /mnt<span class="token function">rsync</span> -avz /home /mnt<span class="token function">umount</span> dev//nvme0n1p1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>两边都是nvme,2分钟就同步完成了，速度非常感人，然后修改fstab，将原来/home分区的uuid改为新硬盘的（/dev/nvme0n1p1）uuid</p><p><code>/etc/fstab</code>大概长这个样子，分别是uuid,挂载目录，文件类型，noatime后面0表示不开机自检，/</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">UUID</span><span class="token operator">=</span><span class="token number">8205</span>-8BC5                            /boot/efi      vfat    <span class="token assign-left variable">umask</span><span class="token operator">=</span>0077 <span class="token number">0</span> <span class="token number">2</span><span class="token assign-left variable">UUID</span><span class="token operator">=</span><span class="token number">36499174</span>-6a4a-4b9d-b5cc-0b1f555a1f46 /              ext4    defaults,noatime <span class="token number">0</span> <span class="token number">1</span><span class="token assign-left variable">UUID</span><span class="token operator">=</span>bf5e768c-a2de-4618-9861-5946459a69b6 /home          ext4    defaults,noatime <span class="token number">0</span> <span class="token number">2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>然后退出来，用livecd或者双系统的分区工具把原来的/home分区删掉分给原来的/目录。（注意做好备份不要删错了，删错了就没了）</p><p>再次登陆后应该就行了。弄完突然发现KDE自带一个叫KDE Partition Manager的工具，看起来貌似还行。</p><h2 id="修grub">修grub</h2><p>双系统grub又出问题了，好在用liveusb重装了一下grub问题救了回来。</p><p>我是UEFI，操作除了最后 grub install 用EndeavourOS的，其他的和Arch一样</p><p>先挂载，然后chroot进去，然后重装grub</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mount</span> /dev/nvme0n1p3 /mnt<span class="token function">mount</span> /dev/nvme1n1p2 /mnt/boot/efi<span class="token function">grub-mkconfig</span> -o /boot/grub/grub.cfggrub-install --target<span class="token operator">=</span>x86_64-efi --efi-directory<span class="token operator">=</span>/boot/efi --bootloader-id<span class="token operator">=</span>EndeavourOS-grub<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="滚动升级">滚动升级</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> pacman -Syu <span class="token comment"># 装了AUR就yay -Syu</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果要自动降级新软件包就<code>-Syuu</code>(不推荐)</p><p>升级的包里面有内核和显卡驱动的时候要注意小心</p><p>升级内核之后最好重启一下，有的时候不重启会遇到开bbr失败了啊，u盘读不出来了啊，就比如<span class="exturl" data-url="aHR0cHM6Ly9qbGljZS50b3AvcC83bDltby8=">记因内核版本错误导致U盘不能识别的问题解决<i class="fa fa-external-link-alt"></i></span>、<span class="exturl" data-url="aHR0cHM6Ly92MmV4LmNvbS90LzMyMzU1OQ==">这个v站帖子<i class="fa fa-external-link-alt"></i></span>还有重启后<span class="exturl" data-url="aHR0cHM6Ly9tYW5hdGVlbGF6eWNhdC5naXRodWIuaW8vbGludXgvMjAyMC8wMi8xNC9maXgtYXJjaC1ib290LWZhaWxlZC5odG1s">Grub内核版本号不升级<i class="fa fa-external-link-alt"></i></span>，大部分情况下<code>modprobe</code>找不到模块八成就是了</p><h3 id="升级内核不重启">升级内核不重启</h3><p>参考reddit这个<span class="exturl" data-url="aHR0cHM6Ly93d3cucmVkZGl0LmNvbS9yL2FyY2hsaW51eC9jb21tZW50cy80enJzYzMva2VlcF95b3VyX3N5c3RlbV9mdWxseV9mdW5jdGlvbmFsX2FmdGVyX2Ffa2VybmVsLw==">帖子<i class="fa fa-external-link-alt"></i></span></p><p>一个软链过去，感觉不太优雅，还是乖乖重启比较好</p><blockquote><p>看来包管理器们应该学习其他两个系统，统一在关机开机的时候更新软件。</p></blockquote><h2 id="kde使用事项">KDE使用事项</h2><h3 id="kde卡死的抢救方案">KDE卡死的抢救方案</h3><p>KDE现在已经比较稳定了，但是Linux桌面程序还是偶尔把桌面搞到卡死，比如vscode内存泄漏。</p><p>首先尝试<code>ctl+alt+t</code>呼出终端，如果不能就<code>ctl+alt+F2</code>调出tty，htop看一下那个进程占用高，kill掉，如果不行就重启tty</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">kquitapp5 plasmashell <span class="token operator">&amp;&amp;</span> kstart5 plasmashell<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>正常退出不行就直接killall</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">killall</span> plasmashell <span class="token operator">&amp;&amp;</span> kstart5 plasmashell<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>或者重启一下SDDM</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl restart sddm<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>还不行就杀掉tty1，然后重启xorg</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ps</span> aux <span class="token operator">|</span> <span class="token function">grep</span> tty1 <span class="token comment"># 或者pgrep tty1</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后kill掉（或者直接<code>pkill -9 -t tty1</code>），重启 或者直接</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">pkill</span> xstartx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>再不行直接<code>reboot</code>就好了</p><p>或许你开了SysRq，先用SysRq抢救一下，见<span class="exturl" data-url="aHR0cHM6Ly93d3cua2VybmVsLm9yZy9kb2MvaHRtbC9sYXRlc3QvYWRtaW4tZ3VpZGUvc3lzcnEuaHRtbA==">Linux Magic System Request Key Hacks<i class="fa fa-external-link-alt"></i></span>，或者直接看<span class="exturl" data-url="aHR0cDovL2Jsb2cubHVqdW45OTcyLndpbi9ibG9nLzIwMTgvMDgvMjIvbGludXjkuIvnmoRzeXNycemUri9pbmRleC5odG1s">linux下的SysRq键<i class="fa fa-external-link-alt"></i></span></p><p>再不行就直接尝试长按电源关机了</p><h3 id="混成器">混成器</h3><p>有Nvidia显卡怕驱动更新出问题可以在设置中将渲染器（混成器）从OpenGL改为XRender，XRender出问题的情况会少一点，虽然很多特效都不支持，性能也略差。没有问题建议还是用OpenGL或者直接关闭特效，XRender没有硬件加速用起来感觉跟OpenGL有明显的体验差距。</p><p>另外貌似非整数比缩放的时候透明特效之类的经常不支持，建议直接关了。</p><h3 id="baloo">baloo</h3><p>禁用baloo：<code>balooctl disable</code> 这个文件索引服务也是个吃性能大户，不管是在GNOME下还是KDE下。可以考虑禁用。要查找文件可以用find命令之类的东西嘛。</p><h3 id="kde桌面部件">KDE桌面部件</h3><p>美化要稍微谨慎一点，魔改太多了不太稳定</p><p>latte-dock：虽然KDE官方维护支持这个，动画效果很漂亮，用起来也很舒服，但是这个实在是吃内存大户。KDE桌面不开多余特效和装各种桌面部件待机内存在300M，装个latte-dock后内存占用比其他所有的加起来还多。把dock的鼠标悬停放大之类的特效关一关。貌似这个的背景透明只有XRender支持。</p><p>一个很喜欢的任务栏部件event calendar</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yay -S plasma5-applets-eventcalendar<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="双显示器开机右侧出现黑边">双显示器开机右侧出现黑边</h3><p>发现是每次开机分辨率变成1680*1050了</p><p>先看一下你的显示器编号</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">xrandr<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>比如我的就是DVI-I-1和DVI-D-0，把这两个分辨率改回1080p</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">xrandr --output DVI-I-1 --mode 1920x1080 --rate <span class="token number">60</span>xrandr --output DVI-D-0 --mode 1920x1080 --rate <span class="token number">60</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>这里有一个自动配置的包<span class="exturl" data-url="aHR0cHM6Ly93d3cuYXJjaGxpbnV4Lm9yZy9wYWNrYWdlcy8/bmFtZT1hdXRvcmFuZHI=">autorandr<i class="fa fa-external-link-alt"></i></span></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S autorandrautorandr horizontal <span class="token operator">&amp;&amp;</span> autorandr vertical <span class="token comment"># 这里我直接把显示长宽分辨率都直接拉满了</span>autorandr --save test1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>或者你可以手动编辑<code>/etc/X11/xorg.conf.d</code>下的配置</p><p>见<span class="exturl" data-url="aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvaW5kZXgucGhwL1hyYW5kcg==">Arch Wiki xrandr<i class="fa fa-external-link-alt"></i></span></p><p>其实每次开机运行一下xrandr可能更好一点（如果你不是wayland的话），不少人都是这么搞得（顺便刷新调整一下字体啥的</p><figure><img src="/why-not-try-endeavouros/image-20200923222725926.png" alt="xrandr" /><figcaption aria-hidden="true">xrandr</figcaption></figure><h2 id="macwin10上的一些软件">Mac/win10上的一些软件</h2><p><del>请阅读王垠经典博文完全用linux工作</del> 不少时候用wine还是能搞定的（如果你不在乎wine的稳定性的话），包括一些大型软件，比如PS 当然有的东西用wine体验远没有虚拟机好，拿Virtualbox或者KVM开个虚拟机是个不错的选择。或者身边有闲置安卓机用scrcpy投屏，或者KDE Connect传文件。</p><p>部分国产软件开个黑果虚拟机感觉体验比windows虚拟机略好一点 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2ZveGxldC9tYWNPUy1TaW1wbGUtS1ZN">https://github.com/foxlet/macOS-Simple-KVM<i class="fa fa-external-link-alt"></i></span></p><h2 id="一点闲话">一点闲话</h2><p>其实我一直很期待Arch系诞生一批用户友好的桌面发行版，就像Debian那样衍生出Ubuntu、Linux Mint那样。（虽然这很不Arch）</p><ol type="1"><li>之前被apt的地狱依赖搞得心态崩了，想用pacman系的（反正打包粒度粗一点好，硬盘现在这么便宜又不在乎占多大地方）</li><li>喜欢KDE</li><li>想要稳定一点的系统做日常主力搬砖用</li><li>安装方便一点。这个倒是无所谓，不过出了事LiveCD抢救也想有个图形界面方便抢修</li></ol><p>Arch把wifi-menu去掉之后就不太想用原味Arch了，我这笔记本没网口高通网卡Nividia独显实在八字不合，只想佛系地找个好装的iso</p><p>KaOS基本符合，然而包太少（加上KCP社区包也还是很少），可惜.... 另一个<span class="exturl" data-url="aHR0cHM6Ly93d3cuY2hha3JhbGludXgub3JnLw==">chakra<i class="fa fa-external-link-alt"></i></span>也是包太少（这个有自己的CCR社区包，包也不多），KDE和Qt骨灰爱好者的宝藏，软件基本全套KDE和Qt（不过据说他们人手不够维护不过来了打算换到）</p><p>此外还有各种层出不穷的真*Arch安装器 <span class="exturl" data-url="aHR0cHM6Ly9maXJlcmFpbi5tZS8=">https://firerain.me/<i class="fa fa-external-link-alt"></i></span> <span class="exturl" data-url="aHR0cHM6Ly9nYXJ1ZGFsaW51eC5vcmcvaW5kZXguaHRtbA==">https://garudalinux.org/index.html<i class="fa fa-external-link-alt"></i></span></p><p>Antergos的继承者，EndeavourOS满足了前两点，貌似xfce主题魔改了点主题，KDE基本原封不动。当时Manjaro闹分裂，jonathon出走了，我也跟着跑路到了这个发行版;用了一段时间感觉还不错，接近原味Arch, 不像Manjaro一样整了很多超出自己驾驭能力的魔改。推荐各位Manjaro用户和想用pacman又嫌麻烦的用户尝试一下。 现在看win10反而不习惯，索性把教研室搬砖那台win10全格了只装这个（要用到windows的时候上win7虚拟机 ps. win7 和KDE好像啊）</p><p>那天还看到肥猫跑到Manjaro群里推这个</p><p><img src="/why-not-try-endeavouros/miao.png" /></p><p>第二天welcome就有了中文，感动</p><p><img src="/why-not-try-endeavouros/miaomiao.png" /></p><p>能制止Manjaro的不是Arch佬的疯狂洗手，是另一个比Manjaro更好的Arch简易安装器，EndeavourOS合格了。</p><p>最后，不要对EndeavourOS抱有过高的期待，感觉他们人手还是不太足。</p><p>不过大方向是走对了，基本上就做做开箱即用和一些代替命令操作的图形界面，没有像Manjaro那样各种魔改搞出很多Arch上反而没有的问题。就比如linux内核切换的图形界面akm，基本上就是代替了archwiki上的手动操作，选项也只有linux,linux-lts,linux-zen几个。不像Manjaro那个内核切换，从linux 5.3 到linux 5.8最新版全都有，非常奔放，你要是真随便选一个linux和linux-lts之外的，哪天滚着滚着就出问题了。</p><p><img src="/why-not-try-endeavouros/akm.png" /></p><p>Arch的安装脚本和只是换了个皮的安装器层出不穷，目前看来EndeavourOS是最令人满意的一个（好吧，默认是xfce，这个离线装了然后改DE就好了）</p><h2 id="最后">最后</h2><p>AUR包数量很庞大，但也有一些包目前还没有，有精力和意愿打包的可以去给AUR提交打包 可以参看</p><ol type="1"><li><span class="exturl" data-url="aHR0cHM6Ly9hdXIuYXJjaGxpbnV4Lm9yZy8=">Archlinux User Repository<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvaW5kZXgucGhwL0NyZWF0aW5nX3BhY2thZ2Vz">Creating packages<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvaW5kZXgucGhwL0FyY2hfVXNlcl9SZXBvc2l0b3J5XyjnroDkvZPkuK3mlocp">Arch用户仓库<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLnlvaXRzdS5tb2UvYXJjaC1saW51eC9hdXJfcGFja2FnaW5nX2d1aWRlYm9vay5odG1s">AUR 纯萌新向入门教学(2)-创建一个软件包<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLnlvaXRzdS5tb2UvYXJjaC1saW51eC9hdXJfc3VtYml0aW5nX2d1aWRlYm9vay5odG1s">AUR 纯萌新向入门教学(3)-提交软件包到AUR<i class="fa fa-external-link-alt"></i></span></li></ol><p>KDE的中文翻译也缺人，有精力的玩家可以去当翻译，中文翻译组在<span class="exturl" data-url="aHR0cHM6Ly9jcm93ZGluLmNvbS9wcm9qZWN0L2tkZW9yZw==">这里<i class="fa fa-external-link-alt"></i></span> KDE那边貌似挺缺打杂苦力的，熟悉Qt的同学可以去给社区做点贡献.</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;sudo pacman -Rs win10&lt;/p&gt;</summary>
    
    
    
    <category term="不务正业系列" scheme="https://zhangjk98.xyz/categories/%E4%B8%8D%E5%8A%A1%E6%AD%A3%E4%B8%9A%E7%B3%BB%E5%88%97/"/>
    
    
    <category term="KDE" scheme="https://zhangjk98.xyz/tags/KDE/"/>
    
    <category term="EndeavourOS" scheme="https://zhangjk98.xyz/tags/EndeavourOS/"/>
    
  </entry>
  
  <entry>
    <title>用疾病记录预测患者死亡风险</title>
    <link href="https://zhangjk98.xyz/morality-prediction/"/>
    <id>https://zhangjk98.xyz/morality-prediction/</id>
    <published>2020-05-31T03:06:54.000Z</published>
    <updated>2020-05-31T03:06:54.000Z</updated>
    
    <content type="html"><![CDATA[<p>以急性心肌梗死和MIMIC数据库为例</p><a id="more"></a><p>急性心肌梗死的发病率和死亡率都很高，MIMIC里面大概有5000次记录，用来构造数据集效果会比较好，这次就用MIMIC数据库里面的急性心肌梗死进行死亡风险的预测。</p><p>早期心血管疾病采用TIMI（the Thrombolysis in Myocardial Infarction）风险评分、全球急性心脏事件注册表（GRACE）评分或医生经验判断。后来MIMIC、eICU等开放医学数据库的建立和公布，数据量足够支撑起机器学习，疾病风险预测逐渐开始采用机器学习等方法。 数据清洗和构造数据集</p><p>目前开源的ICU重症数据库主要有MIMIC和eICU；eICU里面的患者数量多一点，但是貌似数据缺失很多，数据质量也不太好（eICU整合了几家不同医院的临床记录拼凑出来的数据库，数据质量参差不齐）</p><p>这里我用的MIMIC-Ⅲ数据库，内有近四万名成年人以及七千多名新生儿的五万余次住院资料，其中急性心肌梗死入院记录大概5000多次。</p><h2 id="更新">更新</h2><p>前一阵MIT发布了 MIMIC IV 数据库（第四版），MIMIC-IV目前是0.4版本，以后要放出1.0正式版。希望大家下载最新版本进行训练<del>炼丹</del></p><p>0.4版的压缩包有6.7G,要获取需要在网站注册帐号并进行考试答题，然后同意他们关于医学伦理的条款 下载地址： <span class="exturl" data-url="aHR0cHM6Ly9waHlzaW9uZXQub3JnL2NvbnRlbnQvbWltaWNpdi8wLjQv">https://physionet.org/content/mimiciv/0.4/<i class="fa fa-external-link-alt"></i></span> 并没有BT种子之类下载方式，下载需要帐号验证，由于版权和隐私等原因，应该也不能进行二次分发 所以大家自己去下吧。</p><p>通过考试答题后就直接点下载链接就好了。 官网还提供了wget的下载方式，安装包有点大，我们打开bbr下载会快一点（有美国代理记得挂）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> sysctl net.ipv4.tcp_congestion_control<span class="token operator">=</span>bbr<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后填你的用户名和密码就好了</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> -r -N -c -np --user username --ask-password https://physionet.org/files/mimiciv/0.4/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>下载好建库的时候记得建索引，不然后续操作会很慢</p><h2 id="患者筛选">患者筛选</h2><p>在MIMIC数据库中提取ICD-9疾病编号为410大类、疾病名称为 acute myocardial infarction的相关病人全部住院记录。数据表DIAGNOSE_ICD中的ICD9_CODE字段记录了患者的ICD-9编码，其中410大类编码根据发病部位被分为10个小类，例如第1个小类代表发病部位为前外侧壁、第2个小类代表发病部位为下外侧壁；这10 个小类又根据发病时期分为3个小类，0代表未细分，1代表初次入院，2代表再入院；例如，MIMIC数据库中ICD9_CODE字段为41031，对应的ICD-9编码为410.3.1，其中410代表急性心肌梗死，3代表下后壁，1代表初次入院。 <img src="%E6%95%B0%E6%8D%AE%E6%8F%90%E5%8F%96%E6%B5%81%E7%A8%8B.svg" alt="数据提取示意图" /></p><p>提取到的除后续照顾类别以外的410大类患者数据中，共有5087次入院记录，去除同一患者重复的入院记录，共有4788名病人患有急性心肌梗死（包括同时患有急性心肌梗死的并发症），其中有727人死亡，总死亡率15.18%。男性患者共2924名，平均年龄为67.2岁，死亡391人，男性死亡率13.37%；女性患者共1864名，平均年龄为73.4岁，死亡337人,女性死亡率18.10%。统计急性心肌梗死患者人群种族信息，可以发现亚裔只有74次入院记录。 特征选取</p><p>MIIMC里面能用的特征大概有性别年龄这些个人信息、心率血压这些生理指标、还有些用药记录之类的，为了预测患者初次发病的死亡率，只采用患者初次入院24小时内的记录检查项目作为预测指标</p><p>先把24小时ICUSTAY_ID选出来</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> k_AMI2 <span class="token keyword">AS</span><span class="token keyword">SELECT</span>ADMISSIONS<span class="token punctuation">.</span>SUBJECT_ID<span class="token punctuation">,</span>ADMISSIONS<span class="token punctuation">.</span>HADM_ID<span class="token punctuation">,</span>ADMISSIONS<span class="token punctuation">.</span>ADMITTIME<span class="token punctuation">,</span>ADMISSIONS<span class="token punctuation">.</span>DEATHTIME<span class="token keyword">FROM</span>ADMISSIONS<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token keyword">DISTINCT</span>A<span class="token punctuation">.</span>SUBJECT_ID<span class="token punctuation">,</span><span class="token function">MAX</span><span class="token punctuation">(</span>A<span class="token punctuation">.</span>ADMITTIME<span class="token punctuation">)</span> ADMITTIME<span class="token keyword">FROM</span>ADMISSIONS A<span class="token punctuation">,</span>DIAGNOSES_ICD B<span class="token keyword">WHERE</span>A<span class="token punctuation">.</span>HADM_ID <span class="token operator">=</span> B<span class="token punctuation">.</span>HADM_ID<span class="token operator">AND</span> <span class="token punctuation">(</span>ICD9_CODE <span class="token operator">=</span> <span class="token string">"41000"</span><span class="token operator">OR</span> ICD9_CODE <span class="token operator">=</span> <span class="token string">"41001"</span><span class="token operator">OR</span> ICD9_CODE <span class="token operator">=</span> <span class="token string">"41010"</span><span class="token operator">OR</span> ICD9_CODE <span class="token operator">=</span> <span class="token string">"41011"</span><span class="token operator">OR</span> ICD9_CODE <span class="token operator">=</span> <span class="token string">"41020"</span><span class="token operator">OR</span> ICD9_CODE <span class="token operator">=</span> <span class="token string">"41021"</span><span class="token operator">OR</span> ICD9_CODE <span class="token operator">=</span> <span class="token string">"41030"</span><span class="token operator">OR</span> ICD9_CODE <span class="token operator">=</span> <span class="token string">"41031"</span><span class="token operator">OR</span> ICD9_CODE <span class="token operator">=</span> <span class="token string">"41040"</span><span class="token operator">OR</span> ICD9_CODE <span class="token operator">=</span> <span class="token string">"41041"</span><span class="token operator">OR</span> ICD9_CODE <span class="token operator">=</span> <span class="token string">"41050"</span><span class="token operator">OR</span> ICD9_CODE <span class="token operator">=</span> <span class="token string">"41051"</span><span class="token operator">OR</span> ICD9_CODE <span class="token operator">=</span> <span class="token string">"41060"</span><span class="token operator">OR</span> ICD9_CODE <span class="token operator">=</span> <span class="token string">"41061"</span><span class="token operator">OR</span> ICD9_CODE <span class="token operator">=</span> <span class="token string">"41070"</span><span class="token operator">OR</span> ICD9_CODE <span class="token operator">=</span> <span class="token string">"41081"</span><span class="token operator">OR</span> ICD9_CODE <span class="token operator">=</span> <span class="token string">"41090"</span><span class="token operator">OR</span> ICD9_CODE <span class="token operator">=</span> <span class="token string">"41091"</span><span class="token operator">OR</span> ICD9_CODE <span class="token operator">=</span> <span class="token string">"41002"</span><span class="token operator">OR</span> ICD9_CODE <span class="token operator">=</span> <span class="token string">"41012"</span><span class="token operator">OR</span> ICD9_CODE <span class="token operator">=</span> <span class="token string">"41022"</span><span class="token operator">OR</span> ICD9_CODE <span class="token operator">=</span> <span class="token string">"41032"</span><span class="token operator">OR</span> ICD9_CODE <span class="token operator">=</span> <span class="token string">"41042"</span><span class="token operator">OR</span> ICD9_CODE <span class="token operator">=</span> <span class="token string">"41052"</span><span class="token operator">OR</span> ICD9_CODE <span class="token operator">=</span> <span class="token string">"41062"</span><span class="token operator">OR</span> ICD9_CODE <span class="token operator">=</span> <span class="token string">"41072"</span><span class="token operator">OR</span> ICD9_CODE <span class="token operator">=</span> <span class="token string">"41082"</span><span class="token operator">OR</span> ICD9_CODE <span class="token operator">=</span> <span class="token string">"41092"</span><span class="token punctuation">)</span><span class="token keyword">GROUP</span> <span class="token keyword">BY</span>A<span class="token punctuation">.</span>SUBJECT_ID<span class="token punctuation">)</span> <span class="token keyword">AS</span> T<span class="token keyword">WHERE</span>ADMISSIONS<span class="token punctuation">.</span>ADMITTIME <span class="token operator">=</span> T<span class="token punctuation">.</span>ADMITTIME<span class="token operator">AND</span> ADMISSIONS<span class="token punctuation">.</span>SUBJECT_ID <span class="token operator">=</span> T<span class="token punctuation">.</span>SUBJECT_ID<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后用找患者检查项目、生理指标的ITEM_ID。写一个简单的SQL联接查询就可以了：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token keyword">DISTINCT</span>SUBJECT_ID<span class="token punctuation">,</span><span class="token function">MAX</span><span class="token punctuation">(</span>VALUEUOM<span class="token punctuation">)</span> MAX_VALUE<span class="token punctuation">,</span><span class="token function">MIN</span><span class="token punctuation">(</span>VALUEUOM<span class="token punctuation">)</span> MIN_VALUE<span class="token keyword">FROM</span><span class="token punctuation">(</span><span class="token keyword">SELECT</span>CHARTEVENTS<span class="token punctuation">.</span>SUBJECT_ID<span class="token punctuation">,</span>CHARTEVENTS<span class="token punctuation">.</span>ICUSTAY_ID<span class="token punctuation">,</span>CHARTEVENTS<span class="token punctuation">.</span>CHARTTIME<span class="token punctuation">,</span>CHARTEVENTS<span class="token punctuation">.</span><span class="token punctuation">`</span><span class="token keyword">VALUE</span><span class="token punctuation">`</span><span class="token punctuation">,</span>CHARTEVENTS<span class="token punctuation">.</span>VALUEUOM<span class="token punctuation">,</span>CHARTEVENTS<span class="token punctuation">.</span>ERROR<span class="token punctuation">,</span>TIMESTAMPDIFF<span class="token punctuation">(</span> <span class="token keyword">HOUR</span><span class="token punctuation">,</span> T<span class="token punctuation">.</span>INTIME<span class="token punctuation">,</span> CHARTEVENTS<span class="token punctuation">.</span>CHARTTIME <span class="token punctuation">)</span> STAYHOUR <span class="token keyword">FROM</span>CHARTEVENTS<span class="token punctuation">,</span>A_AKF_DEATH T <span class="token keyword">WHERE</span>CHARTEVENTS<span class="token punctuation">.</span>ICUSTAY_ID <span class="token operator">=</span> T<span class="token punctuation">.</span>ICUSTAY_ID <span class="token operator">AND</span> <span class="token punctuation">(</span> CHARTEVENTS<span class="token punctuation">.</span>ITEMID <span class="token operator">=</span> <span class="token number">220546</span> <span class="token operator">OR</span> CHARTEVENTS<span class="token punctuation">.</span>ITEMID <span class="token operator">=</span> <span class="token number">1542</span> <span class="token punctuation">)</span><span class="token keyword">ORDER</span> <span class="token keyword">BY</span>CHARTEVENTS<span class="token punctuation">.</span>SUBJECT_ID <span class="token punctuation">)</span> AA<span class="token keyword">WHERE</span>STAYHOUR <span class="token operator">&lt;=</span> <span class="token number">24</span> <span class="token keyword">GROUP</span> <span class="token keyword">BY</span>SUBJECT_ID<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>本次选取的急性心肌梗死患者主要特征见下表：</p><table><thead><tr class="header"><th>特征</th><th>字段或ITEMID</th></tr></thead><tbody><tr class="odd"><td>年龄</td><td>PTENETS.DOD和DOB</td></tr><tr class="even"><td>性别</td><td>PATIENTS.GENDER</td></tr><tr class="odd"><td>心率</td><td>CHARTEVENTS.ITEMID</td></tr><tr class="even"><td>入院类型</td><td>ADMISSION_TYPE</td></tr><tr class="odd"><td>ICD细分编码</td><td>ADMISSION.ICD9_CODE</td></tr><tr class="even"><td>最小GCS评分</td><td>220739、223901、223900、198</td></tr><tr class="odd"><td>排尿量</td><td>40055、226559</td></tr><tr class="even"><td>PaO2</td><td>779、220224</td></tr><tr class="odd"><td>白细胞计数WBC</td><td>220546、15424、200、1127、861</td></tr><tr class="even"><td>体温</td><td>676、223762、678、223761</td></tr><tr class="odd"><td>血钾浓度</td><td>50971</td></tr><tr class="even"><td>血钠浓度</td><td>50983</td></tr><tr class="odd"><td>血胆红素浓度</td><td>50885</td></tr><tr class="even"><td>是否有血液恶性肿瘤</td><td>ICD9_CODE =200XX-208XX</td></tr><tr class="odd"><td>收缩压</td><td>51、220050</td></tr><tr class="even"><td>动脉收缩压</td><td>455、220179</td></tr><tr class="odd"><td>血清尿素水平</td><td>51006</td></tr></tbody></table><h3 id="归一化和标准化">归一化和标准化</h3><p>为了将患者特征转换成便于机器学习模型输入训练的特征变量的形式，对于MIMIC数据库中患者初次入院24小时中多次测量并记录的化验指标，选取最小值、最大值和平均值作为三个不同的特征。</p><p>然后对数字变量进行归一化，把标准差置为1，均值置为零（ICD细分编码之类的虽然是数字，但实际上是一个类别特征，应作为类别特征处理）</p><p>对于性别种族等类别特征，进行Onehot编码转换为梯度提升树模型能够接受的类型；以性别为例，将性别为女编码为01，性别为男编码为10。（LightGBM等可以用直方图算法之类的方式直接处理类别特征，不需要该操作）经过上述处理，共筛选并构建出42个急性心肌梗死患者的特征维度。</p><h3 id="缺失值填补">缺失值填补</h3><p>由于MIMIC数据库中的数据是由两家不同的医院在10年间的ICU重症监护记录整合而成，急性心肌梗死患者的数据存在缺失和不统一的问题。以化验项目血清碳酸氢水平为例，在提取得到的4788份急性心肌梗死患者样本数据中，有4730份血清碳酸氢数据记录是完整的，有58份是缺失的，缺失率1.2%；但是部分检查指标，如收缩压，4788个样本中只有2665份完整数据，缺失率44.3%。</p><p>对于SVM等对于缺失值敏感的算法，用均值填补空缺数据的方法；对于缺失值不敏感的决策树类算法（如GBDT）和自带缺失值处理的算法（如XGBoost），将缺失值置为-1。</p><p>（缺失率在40%左右的会影响模型的效果，但是收缩压之类的又很重要，不能轻易舍弃）</p><figure><img src="/morality-prediction/image-20200603192151696.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h3 id="数据集不平衡的问题">数据集不平衡的问题</h3><p>有的疾病可能会有，急性心肌梗死由于死亡率很高，正负样本比例已经超过了1：9，并不是那种极端不平衡的问题。有的疾病死亡率1%左右需要采样等方式构造平衡数据集。</p><h2 id="模型训练">模型训练</h2><p>直接用的scikit-learn工具包，随便调了调参。决策树类的bsoosting算法表现都还不错，像GBDT啊，XGBoost啊，LightGBM啊。数据量还是有点小了，就没上深度学习那些网络。直接调sklearn的包调一下参：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token comment"># pd.options.mode.chained_assignment = None</span><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> lightgbm <span class="token keyword">as</span> lgb<span class="token keyword">from</span> sklearn <span class="token keyword">import</span> preprocessing<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>model_selection <span class="token keyword">import</span> train_test_split<span class="token punctuation">,</span>cross_val_score<span class="token punctuation">,</span>cross_val_predict<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>ensemble <span class="token keyword">import</span> RandomTreesEmbedding<span class="token punctuation">,</span> RandomForestClassifier<span class="token punctuation">,</span> GradientBoostingClassifier<span class="token comment"># criteria</span><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>metrics <span class="token keyword">import</span> accuracy_score<span class="token punctuation">,</span> roc_auc_score<span class="token punctuation">,</span> f1_score<span class="token punctuation">,</span>recall_score<span class="token punctuation">,</span> precision_score<span class="token punctuation">,</span> roc_curve<span class="token comment"># 加载数据</span>data <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'./data/train_data_modified.csv'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>data <span class="token operator">=</span> data<span class="token punctuation">.</span>sample<span class="token punctuation">(</span>frac<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">42</span><span class="token punctuation">)</span>data_x <span class="token operator">=</span> data<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">26</span><span class="token punctuation">,</span><span class="token number">27</span><span class="token punctuation">,</span><span class="token number">28</span><span class="token punctuation">,</span><span class="token number">29</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">31</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">,</span><span class="token number">34</span><span class="token punctuation">,</span><span class="token number">35</span><span class="token punctuation">,</span><span class="token number">36</span><span class="token punctuation">,</span><span class="token number">37</span><span class="token punctuation">,</span><span class="token number">38</span><span class="token punctuation">,</span><span class="token number">39</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token number">41</span><span class="token punctuation">,</span><span class="token number">42</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token comment"># data_x = data.iloc[:,[1,2,3,4,5,6,7,36]]</span>lbl <span class="token operator">=</span> preprocessing<span class="token punctuation">.</span>LabelEncoder<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># data_x['M'] = lbl.fit_transform(data_x['M'].astype(str))#将含有字符的类别特征这一列进行转换</span><span class="token comment"># data_x['EMERGENCY'] = lbl.fit_transform(data_x['EMERGENCY'].astype(str))#将含有字符的类别特征这一列进行转换</span>data_y <span class="token operator">=</span> data<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token comment"># 准备一个train/test来构建模型。</span>x_train<span class="token punctuation">,</span> x_test<span class="token punctuation">,</span> y_train<span class="token punctuation">,</span> y_test <span class="token operator">=</span> train_test_split<span class="token punctuation">(</span>data_x<span class="token punctuation">,</span>                                                    data_y<span class="token punctuation">,</span>                                                     test_size<span class="token operator">=</span><span class="token number">0.2</span><span class="token punctuation">,</span>                                                     random_state<span class="token operator">=</span><span class="token number">52</span><span class="token punctuation">,</span>                                                    <span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>x_train<span class="token punctuation">.</span>shape<span class="token punctuation">,</span> x_test<span class="token punctuation">.</span>shape<span class="token punctuation">,</span> y_train<span class="token punctuation">.</span>shape<span class="token punctuation">,</span> y_test<span class="token punctuation">.</span>shape<span class="token punctuation">)</span><span class="token keyword">from</span> xgboost<span class="token punctuation">.</span>sklearn <span class="token keyword">import</span> XGBClassifierxgb <span class="token operator">=</span> XGBClassifier<span class="token punctuation">(</span>    n_estimators<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span>    learning_rate <span class="token operator">=</span><span class="token number">0.09</span><span class="token punctuation">,</span>    max_depth<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">,</span>    min_child_weight<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>    gamma<span class="token operator">=</span><span class="token number">0.3</span><span class="token punctuation">,</span>    subsample<span class="token operator">=</span><span class="token number">0.8</span><span class="token punctuation">,</span>    colsample_bytree<span class="token operator">=</span><span class="token number">0.8</span><span class="token punctuation">,</span>    objective<span class="token operator">=</span> <span class="token string">'binary:logistic'</span><span class="token punctuation">,</span>    nthread<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">,</span>    scale_pos_weight<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>    reg_lambda<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>    seed<span class="token operator">=</span><span class="token number">27</span><span class="token punctuation">)</span><span class="token comment"># xgb = HistGradientBoostingClassifier(learning_rate=0.09)</span>xgb<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>x_train<span class="token punctuation">,</span> y_train<span class="token punctuation">)</span>y_pred_xgb <span class="token operator">=</span> xgb<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>x_test<span class="token punctuation">)</span>y_pred_xgb_pr <span class="token operator">=</span> xgb<span class="token punctuation">.</span>predict_proba<span class="token punctuation">(</span>x_test<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span>fpr_xgb<span class="token punctuation">,</span>tpr_xgb<span class="token punctuation">,</span>thresholds  <span class="token operator">=</span> roc_curve<span class="token punctuation">(</span>y_test<span class="token punctuation">,</span>y_pred_xgb_pr<span class="token punctuation">)</span><span class="token comment"># y_pred_xgb = y_pred_xgb_pr > 0.5</span><span class="token comment"># print(lr.coef_) #W</span><span class="token comment"># print(lr.intercept_) #b</span><span class="token comment"># 评价指标</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"auc面积:"</span><span class="token punctuation">,</span>roc_auc_score<span class="token punctuation">(</span>y_test<span class="token punctuation">,</span> y_pred_xgb_pr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"精确率:"</span><span class="token punctuation">,</span>precision_score<span class="token punctuation">(</span>y_test<span class="token punctuation">,</span> y_pred_xgb<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"召回率:"</span><span class="token punctuation">,</span>recall_score<span class="token punctuation">(</span>y_test<span class="token punctuation">,</span> y_pred_xgb<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"正确率:"</span><span class="token punctuation">,</span>accuracy_score<span class="token punctuation">(</span>y_test<span class="token punctuation">,</span> y_pred_xgb<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"F1值:"</span><span class="token punctuation">,</span>f1_score<span class="token punctuation">(</span>y_test<span class="token punctuation">,</span> y_pred_xgb<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="死亡率预测">死亡率预测</h2><h3 id="结果">结果</h3><p>表3-3 几种机器学习方法的死亡率预测结果如下表：</p><table><thead><tr class="header"><th></th><th>GBDT</th><th>LR</th><th>KNN</th><th>SVM</th><th>XGBoost</th><th>LightGBM</th><th>NB</th></tr></thead><tbody><tr class="odd"><td>AUC</td><td>0.834</td><td>0.780</td><td>0.695</td><td>0.779</td><td>0.851</td><td>0.844</td><td>0.777</td></tr><tr class="even"><td>精确率</td><td>0.676</td><td>0.618</td><td>0.5</td><td>0.688</td><td>0.690</td><td>0.663</td><td>0.378</td></tr><tr class="odd"><td>召回率</td><td>0.320</td><td>0.239</td><td>0.162</td><td>0.155</td><td>0.329</td><td>0.330</td><td>0.479</td></tr><tr class="even"><td>准确率</td><td>0.879</td><td>0.865</td><td>0.852</td><td>0.864</td><td>0.875</td><td>0.872</td><td>0.806</td></tr><tr class="odd"><td>F1 值</td><td>0.451</td><td>0.345</td><td>0.245</td><td>0.253</td><td>0.443</td><td>0.439</td><td>0.422</td></tr></tbody></table><p>看上去准确率挺高，实际结果不太好，召回率太低了。召回率的意义是真阳性率（True Positive Rate），也就是预测到的死亡患者占所有患者的比例，大概真正死亡的患者只有一半被预测了出来。</p><table><thead><tr class="header"><th></th><th>实际死亡</th><th>实际存活</th></tr></thead><tbody><tr class="odd"><td>预测死亡</td><td>真阳性（TP）</td><td>假阳性（FP）</td></tr><tr class="even"><td>预测存活</td><td>假阴性（FN）</td><td>真阴性（TN）</td></tr></tbody></table><p>由于数据集还是太小，就没有细分搞成多分类的问题预测一下短期（30天）和长期（90天以上）死亡率，数据集大了可以做一下。数据集再大可以做细分，比如STEMI和NSTEMI的细分或者</p><h3 id="roc曲线">ROC曲线</h3><figure><img src="/morality-prediction/image-20200531203632378.png" alt="几种机器学习方法的ROC曲线" /><figcaption aria-hidden="true">几种机器学习方法的ROC曲线</figcaption></figure><h3 id="特征权重">特征权重</h3><p>以GBDT为例，提取训练模型的决策树权重，结果如图3-3所示。由图可知，梯度提升树模型认为最重要的10个指标为当日最小血清碳酸氢水平、平均动脉血二氧化碳分压、平均排尿量、心率范围、最小心率、肌酐、体温范围、当日最大收缩压、当日心率标准差、年龄。</p><figure><img src="/morality-prediction/image-20200531210528257.png" alt="GBDT的特征权重" /><figcaption aria-hidden="true">GBDT的特征权重</figcaption></figure><h2 id="其他问题">其他问题</h2><p>这个，急性心肌梗死这个直接看心电图或者彩超啥的更好一些，准确率一般不会低于90%。心血管疾病这种做这个预测基本没有太大意义。急性肾衰竭啥的可能更有意义一点</p><p>MIMIC数据库里面的数据亚裔很少，放到国内可能不太合适。护理和临床记录方式也差别不小。</p><p>这是2001-2012年的数据，近十年来医学水平提高了不少，包括再灌注等手段，死亡率已经下降了，用这批数据预测现在的可能会偏高</p><h2 id="补充说明">补充说明</h2><h3 id="mimic数据库表格名称及用途">MIMIC数据库表格名称及用途</h3><table><colgroup><col style="width: 20%" /><col style="width: 53%" /><col style="width: 26%" /></colgroup><thead><tr class="header"><th>表格名称</th><th>表格内容</th><th>备注</th></tr></thead><tbody><tr class="odd"><td>ADMISSIONS（入院表）</td><td>提供有关患者的入院信息，由于为病人进行的每次唯一的医院访问都分配了一个唯一的信息<code>HADM_ID</code>，因此ADMISSIONS表可以被认为是<code>HADM_ID</code></td><td></td></tr><tr class="even"><td>CALLOUT(标注表)</td><td>提供患者何时准备好从ICU出院以及患者何时实际从ICU出院的信息</td><td></td></tr><tr class="odd"><td>caregivers</td><td>记录医护人员信息（ID、类型、附加信息）</td><td></td></tr><tr class="even"><td>chartevents</td><td>记录所有病人的图表数据，住院期间的所有症状、体征、精神状态、实验室检查等</td><td></td></tr><tr class="odd"><td>cptevents</td><td>包含当前的程序术语（CPT）代码，这些代码便于为在患者身上执行的操作计费。</td><td></td></tr><tr class="even"><td>d_cpt</td><td>当前程序术语（CPT）代码的高级定义</td><td></td></tr><tr class="odd"><td>prescriptions（处方）</td><td>包含药物相关的订单条目，即处方</td><td></td></tr><tr class="even"><td>inputevents_cv</td><td>患者输入数据（流入患者体内液体信息）</td><td>表格来源CareVue ICU数据库。</td></tr><tr class="odd"><td>inputeevents_mv</td><td>患者输入数据（流入患者体内液体信息）</td><td>表格来源Metavision ICU数据库。</td></tr><tr class="even"><td>outputevent</td><td>患者的输出数据。</td><td></td></tr><tr class="odd"><td>labevents</td><td>包含给定患者的所有实验室测量值，包括患者数据（ITEMID、VALUE）</td><td></td></tr><tr class="even"><td>d_icd_diagnoses</td><td>ICD-9疾病诊断的定义表,对 疾病编码的解释</td><td></td></tr><tr class="odd"><td>d_icd_procedures</td><td>ICD-9治疗程序代码的解释</td><td></td></tr><tr class="even"><td>d_items</td><td>ICU数据库中所有项目的定义表</td><td></td></tr><tr class="odd"><td>d_labitems</td><td>所有实验室测量的定义表（对ITEMID的解释，对应数据类型，关联的LOINC代码）</td><td></td></tr><tr class="even"><td>datetimeevents</td><td>包含所有日期格式的数据</td><td></td></tr><tr class="odd"><td>diagnoses_icd（诊断表）</td><td>包含患者住院期间所有ICD-9诊断</td><td></td></tr><tr class="even"><td>drgcodes</td><td>包含患者的诊断相关组（DRG）代码</td><td></td></tr><tr class="odd"><td>icustays</td><td>患者在ICU内的住院概要（入住或者转出ICU的时间等）</td><td></td></tr><tr class="even"><td>microbiologyevents</td><td>包含微生物学信息，包括进行的测试和敏感性</td><td></td></tr><tr class="odd"><td>noteevents</td><td>包含所有患者注意事项。，主要是不便于数字化的报告</td><td></td></tr><tr class="even"><td>patients</td><td>包含患者的基本信息（性别、出生日期、死亡日期、死亡标志位）</td><td></td></tr><tr class="odd"><td>procedureevents_mv</td><td>包含患者的（治疗）程序</td><td></td></tr><tr class="even"><td>procedures_icd</td><td>包含患者的ICD程序，最值得注意的是ICD-9程序，即诊断程序</td><td></td></tr><tr class="odd"><td>services</td><td>患者被接纳/转移的服务</td><td></td></tr><tr class="even"><td>transfers</td><td>患者整个住院期间的物理位置</td><td></td></tr></tbody></table><p>注意： 表格主要分为两种，一种是以D开头的，表示该表格为字典，比如d_labitems，表示实验室检查字典，内含每个实验室检查结果的说明；没有以D打头的表格则是记录患者信息的表格，比如labevents则表示患者住院期间的所有实验室检查结果。</p><h3 id="mimic数据表中主要字段">MIMIC数据表中主要字段</h3><table><thead><tr class="header"><th>数据表</th><th>字段</th><th>说明</th></tr></thead><tbody><tr class="odd"><td>ADMISSION</td><td>SUBJECT_ID</td><td>每个患者的唯一标识</td></tr><tr class="even"><td>ADMISSION</td><td>HADM_ID</td><td>患者每次入院的唯一标识</td></tr><tr class="odd"><td>ADMISSION</td><td>ADMITTIME</td><td>入院时间</td></tr><tr class="even"><td>ADMISSION</td><td>DEATHTIME</td><td>死亡时间</td></tr><tr class="odd"><td>DIAGNOSES_ICD</td><td>ICD9_CODES</td><td>患者的ICD-9编码</td></tr><tr class="even"><td>ADMISSION</td><td>HOSPITAL_EXPIRE_FLAG</td><td>是否死亡</td></tr><tr class="odd"><td>D_ITEMS</td><td>ITEMID</td><td>项目编号</td></tr><tr class="even"><td>D_ITEMS</td><td>LEABEL</td><td>项目名称</td></tr><tr class="odd"><td>ICUSTAYS</td><td>ICUSTAY_ID</td><td>每次ICU病房接受病人唯一标识</td></tr><tr class="even"><td>LABEVENTS</td><td>VALUE</td><td>检查项目</td></tr><tr class="odd"><td>LABEVENTS</td><td>VALUEUOM</td><td>ITEM的值 检查项目的单位（如K/uL）</td></tr><tr class="even"><td>LABEVENT</td><td>FLAG</td><td>检查项目是否异常（正常为Null）</td></tr></tbody></table><h3 id="急性心肌梗死患者主要特征">急性心肌梗死患者主要特征</h3><table><thead><tr class="header"><th>特征</th><th>字段或ITEMID</th></tr></thead><tbody><tr class="odd"><td>年龄</td><td>PTENETS.DOD和DOB</td></tr><tr class="even"><td>性别</td><td>PATIENTS.GENDER</td></tr><tr class="odd"><td>心率</td><td>CHARTEVENTS.ITEMID</td></tr><tr class="even"><td>入院类型</td><td>ADMISSION_TYPE</td></tr><tr class="odd"><td>ICD细分编码</td><td>ADMISSION.ICD9_CODE</td></tr><tr class="even"><td>最小GCS评分</td><td>220739、223901、223900、198</td></tr><tr class="odd"><td>排尿量</td><td>40055、226559</td></tr><tr class="even"><td>PaO2</td><td>779、220224</td></tr><tr class="odd"><td>白细胞计数WBC</td><td>220546、15424、200、1127、861</td></tr><tr class="even"><td>体温</td><td>676、223762、678、223761</td></tr><tr class="odd"><td>血钾浓度</td><td>50971</td></tr><tr class="even"><td>血钠浓度</td><td>50983</td></tr><tr class="odd"><td>血胆红素浓度</td><td>50885</td></tr><tr class="even"><td>是否有血液恶性肿瘤</td><td>ICD9_CODE =200XX-208XX</td></tr><tr class="odd"><td>收缩压</td><td>51、220050</td></tr><tr class="even"><td>动脉收缩压</td><td>455、220179</td></tr><tr class="odd"><td>血清尿素水平</td><td>51006</td></tr></tbody></table><h3 id="注意事项">注意事项</h3><ul><li>MIMIC IIII 数据库中用于识别患者身份的字段共有3个：subjects_id，hadm_id和icustay_id。其中subjects_id是患者身份的唯一标识，即一个subject_id只对应一名患者，一名患者也只有一个subject_id。hadm_id是患者每次住院的身份识别号，一个患者可能多次住院，因此一个subjects_id会对应多个hadm_id，但一个hadm_id只能对应一个subject_id。icustay_id表示患者在进入ICU的编号，因为患者一次住院可以多次进入不同的ICU，因此一个icustay_id只能对应一个hadm_id，当然也只能对应一个subject_id，但一个hadm_id可以对应多个icustay_id。在利用 MIMIC III 数据库进行研究时，往往需要运用sql语言对多个数据库进行连接，连接的基础一般就是这三个字段。</li><li>患者的临床资料不一定是住ICU期间的临床资料，也可能是住普通病房时的资料。记录患者入院时间的表格为admission，内含三个时间点：admittime，表示患者入院时间；dischartime，表示患者出院时间；deathtime，表示患者院内死亡的时间。如果deathtime为空(null)，则表示患者住院期间未死亡。记录患者进入和离开ICU的表格为icustays，这个表格中有两个时间较为重要，分别是intime和outtime，前者表示进入ICU的时间，后者表示离开ICU的时间。当然，如果患者在ICU死亡，那么dischartime、outtime和deathtime理论上就是同一个时间，但实际上会稍微有些出入，估计是由于录入不及时造成的；</li><li>MIMIC III 中的数据来自于两套数据采集系统：carevue和metavision。在icustays表格中，有一个字段叫dbsource，用于标识数据是来源于carevue还是metavision。CareVue记录的是2001至2008年入院的患者资料，Metavision则是2008至2012年期间入院的患者资料。在Metavision中，病人的随访时间最少为90天，在CareVue中，病人的随访时间则至少为4年。换而言之，在进行预后研究时，如果将数据来源限定为CareVue，则可以将随访时间假定为4年，对于4年以后死亡的患者，可以将其在出院后第4年生存状况定义为“存活”。当然，如果患者的死亡状况(DOD_SSN)为空格(null)，也同样可以表明患者在出院后4年仍然存活。</li><li>MIMIC数据库中的ICD编码统计方式和国内不太一样，基本都包含并发症，比如一个病人流感入院并死亡，同时患有急性心肌梗死的并发症，那么该病人也算作急性心肌梗死患者。（主要诊断是其他的疾病，但同时患有某疾病并发症，也认为是该疾病患者，统计死亡时也算在里面）</li><li>在MIMIC中有一个'ADMISSION_TYPE，其中有3个类别，分别是URGENT，EMERGENCY和ELECTIVE，ELECTIVE是不紧急的，URGENT和EMERGENCY的区别大概是URGENT的紧急程度更高（一般是需要立即采取措施的那种）</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;以急性心肌梗死和MIMIC数据库为例&lt;/p&gt;</summary>
    
    
    
    <category term="102网吧日常" scheme="https://zhangjk98.xyz/categories/102%E7%BD%91%E5%90%A7%E6%97%A5%E5%B8%B8/"/>
    
    
    <category term="MIMIC" scheme="https://zhangjk98.xyz/tags/MIMIC/"/>
    
  </entry>
  
  <entry>
    <title>使用BERT进行电子病历的命名实体识别</title>
    <link href="https://zhangjk98.xyz/9112/"/>
    <id>https://zhangjk98.xyz/9112/</id>
    <published>2020-05-19T02:09:16.000Z</published>
    <updated>2020-05-19T02:09:16.000Z</updated>
    
    <content type="html"><![CDATA[<p>BERT效果确实好，就是有点吃内存</p><a id="more"></a><h2 id="序列标注">序列标注</h2><p>一些医院的电子病历拆分的很细，比如主诉这一个大项里面部位、症状、时间、状态都是分开的；另一些医院的电子病历就跟纯文本差不多，要把大段文字中的主要结构提出来需要自然语言处理或者人工录入。一般做自然语言处理的时候都是几个部分分开做的，因为不同部分差异比较大，分开训练识别效果好。大部分电子病历包括入院记录、首次病程记录、病程记录、出院记录、手术记录、护理记录、病案首页，这里面又分为一些检查项、时间、主诉、既往史之类的小项。不少电子病历系统导出都是XML的，一般都是把电子病历拆成主诉那种一个个不能再拆的纯文本部分，比如主诉，见<a href="https://zhangjk98.xyz/81d4/">上一篇</a>，然后再对不能拆分的纯文本用人工或自然语言处理进一步拆分。这就是所谓的电子病历结构化。</p><p>比如一段主诉：</p><blockquote><p>反复胸痛伴胸闷1+年，加重20+天。</p></blockquote><p>按照规范一定的规范可分为几个不同的小块，比如下面这十一种：</p><blockquote><p>部位、症状、持续时间、伴随部位、伴随症状、伴随时间、状 态、病因/其他、观察项目、观察结果、既往史</p></blockquote><p>胸是部位、痛是症状、1+年是持续时间、反复是状态......</p><p>标注出来的结果可以保存为json格式，labels里面的list分别为起始位置、结束位置、标签</p><pre class="line-numbers language-none"><code class="language-none">&#123;&quot;text&quot;: &quot;反复胸痛伴胸闷1+年，加重20+天。&quot;, &quot;labels&quot;: [[0, 2, &quot;状态&quot;], [2, 3, &quot;部位&quot;], [3, 4, &quot;症状&quot;], [5, 7, &quot;伴随症状&quot;], [7, 10, &quot;伴随时间&quot;], [11, 17, &quot;持续时间&quot;]]&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>BIO格式，大概是这个样子：B，begin标签开始；I，inside包含在标签内，O，outside在标签外</p><pre class="line-numbers language-none"><code class="language-none">反 B-状态复 I-状态胸 B-部位痛 B-症状伴 O胸 B-伴随症状闷 I-伴随症状1 B-伴随时间+ I-伴随时间年 I-伴随时间， O加 B-持续时间重 I-持续时间2 I-持续时间0 I-持续时间+ I-持续时间天 I-持续时间。 O<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>BERT的接口是BIO格式，标注工具doccano，这里写两个互相转换的脚本就行了，标注完成后将json转为BIO，训练和预测完成后将BIO预测结果转为JSON</p><h2 id="训练模型">训练模型</h2><p>NLP里面的命名实体识别很早就用在电子病历上，早期的机器学习方法效果一般，后来开始用RNN和CNN，后来用LSTM，再后来用BERT，效果一直在提升，BERT基本上到顶了（好一点的训练数据BERT基本能达到90%以上，对于主诉这样的较短的简单条目甚至能达到98%以上）</p><h2 id="其他杂项">其他杂项</h2><h3 id="doccano的部署和使用">doccano的部署和使用</h3><h4 id="部署">部署</h4><h5 id="docker方式">Docker方式</h5><h6 id="构建和部署">构建和部署</h6><p>运行以下命令</p><pre class="line-numbers language-none"><code class="language-none">$ docker pull chakkiworks&#x2F;doccano # 拉取官方镜像$ docker run -d --name doccano -p 80:8000 chakkiworks&#x2F;doccano # 运行镜像，请按需修改端口$ docker exec doccano tools&#x2F;create-admin.sh &quot;admin&quot; &quot;[email protected]&quot; &quot;password&quot; # 创建用户并指定密码<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>注意 Docker镜像run之后会产生三个容器，doccona_nginx、doccona_backend、docker_frontend,其中docker_frontend在构建完成后会直接exit，这是一个feature，不是bug，它的主要作用是webpack打包</p><figure><img src="/9112/image-20200109220759931.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure></blockquote><h4 id="访问docker中的postgresql数据库中的数据">访问Docker中的PostgreSQL数据库中的数据</h4><p>由于数据库安全问题，数据库分离再一个单独的容器中并且 首先执行<code>Docker exec</code>命令进入相应的PostgreSQL数据库容器</p><p>应该看到下图这样，终端从宿主机切换进容器</p><figure><img src="/9112/image-20200109220232851.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>在容器的shell中用命令进入数据库</p><pre class="line-numbers language-none"><code class="language-none">$ psql -h 127.0.0.1 -d doccano -U doccano -p 5432 # 注意你的host，数据库名、用户名和端口<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>应该看到下图这样，终端从Docker容器切进数据库</p><figure><img src="/9112/image-20200109220100751.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>然后执行<code>\l</code>等命令进入和查看数据库（执行SQL）</p><h4 id="使用">使用</h4><p>后台管理入口是这个http://yoursite/admin/，就是一个Django自带的后台管理</p><figure><img src="/9112/image-20200411204841203-1586654887394.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><img src="/9112/image-20200411205005107-1586654884937.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><img src="/9112/image-20200411205102588-1586654882966.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>登录进去后可自行添加账号和项目并设置权限和标签，标注项目选择sequential labeing即可，导出时选择JSONL格式</p><p>这个数据比较多的时候没有自动跳转比较麻烦，请直接在浏览器地址栏使用url跳转</p><p>比如，修改浏览器后面的url，#后面的offset改为685，直接回车，就可以从当前的689跳转到第685个数据</p><p>http://yoursite/projects/6/#offset=685</p><figure><img src="/9112/image-20200307213544539.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h2 id="注">注</h2><p>https://github.com/doccano/doccano 一个开源的标注工具</p><p>https://github.com/macanv/BERT-BiLSTM-CRF-NER 一个BERT的NER工具包</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;BERT效果确实好，就是有点吃内存&lt;/p&gt;</summary>
    
    
    
    <category term="102网吧日常" scheme="https://zhangjk98.xyz/categories/102%E7%BD%91%E5%90%A7%E6%97%A5%E5%B8%B8/"/>
    
    
    <category term="bert" scheme="https://zhangjk98.xyz/tags/bert/"/>
    
    <category term="NER" scheme="https://zhangjk98.xyz/tags/NER/"/>
    
  </entry>
  
  <entry>
    <title>处理电子病历</title>
    <link href="https://zhangjk98.xyz/81d4/"/>
    <id>https://zhangjk98.xyz/81d4/</id>
    <published>2020-04-23T09:02:18.000Z</published>
    <updated>2020-04-23T09:02:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>有两种鬼画符，一种是医生的字，一种是正则表达式 <a id="more"></a></p><p>周某出狱了，而我也开始打工了，咳咳</p><p>最近开始折腾电子病历之类的东西，有几家医院的原始数据，几乎都是xml之类的（都是接口导出的，反正从医院要不到数据库里面的原始数据），不同医院数据格式和医生书写风格差的还挺大。</p><p><em>下面这些基本都是用的python的库</em></p><h2 id="解析和提取内容">解析和提取内容</h2><h3 id="脱敏">脱敏</h3><p>先脱敏，大概的姓名身份证号住址啥的都挑出来抹掉，一般拿正则表达式替换一下就行了</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> rep1 <span class="token operator">=</span> <span class="token string">r'&lt;姓名.*?>.*?&lt;/姓名>'</span>p2 <span class="token operator">=</span> <span class="token string">r'&lt;姓名>小明&lt;/姓名>'</span>newtext <span class="token operator">=</span> re<span class="token punctuation">.</span>sub<span class="token punctuation">(</span>p1<span class="token punctuation">,</span> p2<span class="token punctuation">,</span> text<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="提出内层html">提出内层html</h3><p>xml里面嵌套了一层html（还是html4.0），html里面又嵌套了几段xml</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">soap:</span>Envelope</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>soap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.xmlsoap.org/soap/envelope/<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsd</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">soap:</span>Body</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>getHospitalInfoResponse</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://tempuri.org/<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>getHospitalInfoResult</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>getHospitalInfoResult</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>HTML</span><span class="token punctuation">></span></span><span class="token entity named-entity" title="&lt;">&amp;lt;</span>!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"<span class="token entity named-entity" title="&gt;">&amp;gt;</span><span class="token entity named-entity" title="&lt;">&amp;lt;</span>HTML<span class="token entity named-entity" title="&gt;">&amp;gt;</span><span class="token entity named-entity" title="&lt;">&amp;lt;</span>            HEAD<span class="token entity named-entity" title="&gt;">&amp;gt;</span><span class="token entity named-entity" title="&lt;">&amp;lt;</span>TITLE<span class="token entity named-entity" title="&gt;">&amp;gt;</span>Demo For Lord<span class="token entity named-entity" title="&lt;">&amp;lt;</span>/TITLE<span class="token entity named-entity" title="&gt;">&amp;gt;</span><span class="token entity named-entity" title="&lt;">&amp;lt;</span>META http-equiv=Content-Type             content="text/html; charset=unicode"<span class="token entity named-entity" title="&gt;">&amp;gt;</span><span class="token entity named-entity" title="&lt;">&amp;lt;</span>META content="MSHTML 6.00.2900.6182"            中间太长略去            多重耐药菌防控措施处置表 (42)出科病历评分表 (43)病历排序<span class="token entity named-entity" title="&lt;">&amp;lt;</span>/FONT<span class="token entity named-entity" title="&gt;">&amp;gt;</span><span class="token entity named-entity" title="&lt;">&amp;lt;</span>/P<span class="token entity named-entity" title="&gt;">&amp;gt;</span><span class="token entity named-entity" title="&lt;">&amp;lt;</span>P<span class="token entity named-entity" title="&gt;">&amp;gt;</span><span class="token entity named-entity" title="&amp;">&amp;amp;</span>nbsp;<span class="token entity named-entity" title="&lt;">&amp;lt;</span>/P<span class="token entity named-entity" title="&gt;">&amp;gt;</span><span class="token entity named-entity" title="&lt;">&amp;lt;</span>/BODY<span class="token entity named-entity" title="&gt;">&amp;gt;</span><span class="token entity named-entity" title="&lt;">&amp;lt;</span>/HTML<span class="token entity named-entity" title="&gt;">&amp;gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>HTML</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>errorMsg</span><span class="token punctuation">></span></span>string<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>errorMsg</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>getHospitalInfoResponse</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">soap:</span>Body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">soap:</span>Envelope</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>除了最外层的xml，其他的标签都被转码了。</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml">@<span class="token entity named-entity" title="&amp;">&amp;amp;</span>lt;/FONT<span class="token entity named-entity" title="&amp;">&amp;amp;</span>gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>先把<code>&amp;amp;</code>转码回<code>&amp;</code>，再把<code>&amp;lt;</code>转为<code>&lt;</code>，<code>&amp;gt;</code>转回<code>&gt;</code></p><p>转完之后会变成熟悉的标签</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml">@<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FONT</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后删掉空格之类的<code>&amp;nbsp;</code>以及<code>&amp;amp;nbsp;</code></p><p>规整的数据，比如一些用标签区分出来的数据，解析一下XML或者用直接用正则表达式提出来</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FONT</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>#000000</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>STRONG</span><span class="token punctuation">></span></span>主诉:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>STRONG</span><span class="token punctuation">></span></span>颈部不适伴头痛、头晕2周，加重1周。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FONT</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python">chief_compliant <span class="token operator">=</span> <span class="token string">r'(?&lt;=&lt;STRONG>主诉:&lt;/STRONG>).*?(?=&lt;/FONT>)|(?&lt;=&lt;STRONG>主诉：&lt;/STRONG>).*?(?=&lt;/FONT>)'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="病案号等xml中的内容">病案号等xml中的内容</h3><p>病案号之类的可以用正则直接抽</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">medical_record_number <span class="token operator">=</span> <span class="token string">r'&lt;病案号.*?>.*?&lt;/病案号>'</span>medical_record_number_temp <span class="token operator">=</span> regex<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>medical_record_number<span class="token punctuation">,</span> htmlhandle<span class="token punctuation">)</span><span class="token keyword">if</span> medical_record_number_temp<span class="token punctuation">:</span>    modified_number <span class="token operator">=</span> <span class="token string">r'\d&#123;6&#125;(?=&lt;/病案号>)'</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"病案号："</span><span class="token punctuation">,</span> regex<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>modified_number<span class="token punctuation">,</span> medical_record_number_temp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"病案号："</span><span class="token punctuation">,</span> <span class="token string">"Null"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="html部分">html部分</h3><p>要完整的把html中所有的字段都分析一下然后重新存到数据库里面，正则表达式就麻烦起来了，还是直接用xml库解析一下xml比较好，比如Xpath和Beautifulsoup之类的（这里建议数据量大、操作多的直接上lxml和regex、re2之类的，不用Beautifulsoup和re这两个库）</p><p>先用utf-8编码读取</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> xmlread<span class="token punctuation">:</span>    xmltext <span class="token operator">=</span> xmlread<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>用lxml直接解析的时候会出报错，因为lxml不认unicode之类的，我们给他转成byte</p><pre class="line-numbers language-log" data-language="log"><code class="language-log">ValueError: Unicode strings with encoding declaration are not supported. Please use bytes input or XML fragments without declaration.<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>加一句</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">myxml_b <span class="token operator">=</span> <span class="token builtin">bytes</span><span class="token punctuation">(</span><span class="token builtin">bytearray</span><span class="token punctuation">(</span>xmltext<span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后用lxml解析就好了</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">myxml <span class="token operator">=</span> etree<span class="token punctuation">.</span>XML<span class="token punctuation">(</span>myxml_b<span class="token punctuation">)</span>result <span class="token operator">=</span> etree<span class="token punctuation">.</span>tostring<span class="token punctuation">(</span>myxml<span class="token punctuation">,</span>pretty_print <span class="token operator">=</span> <span class="token boolean">True</span><span class="token punctuation">,</span>encoding <span class="token operator">=</span> <span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>要提取的主要信息都在html部分里面，外层的xml里面没啥东西，我们直接把外层的xml扔了，解析里面的html</p><p>另存为html就可以在浏览器里看到了，使用F12调试工具可以直接抓取html里面元素的xpath</p><figure><img src="/81d4/image-20200426094024186.png" alt="病历" /><figcaption aria-hidden="true">病历</figcaption></figure><p>但是仔细一看发现这个病历的html标签每份不太一样，比如有的第10对p标签里面是主诉的东西，但是另一份病历第10对p标签里面是住院病人离院责任书。没有固定的标志位，不太好提，不如直接上正则。</p><p>多看了几份病历发现小问题很多，格式一点也规整，比如主诉，不同病历有下面这几种</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FONT</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>#000000</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>STRONG</span><span class="token punctuation">></span></span>主诉:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>STRONG</span><span class="token punctuation">></span></span>颈部不适伴头痛、头晕2周，加重1周。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FONT</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FONT</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>#000</span><span class="token punctuation">></span></span>主诉:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FONT</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>#ff0000</span><span class="token punctuation">></span></span>反复咳嗽、<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FONT</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FONT</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>#4682b4</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FONT</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>#ff0000</span><span class="token punctuation">></span></span>心累、气紧6年，<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FONT</span><span class="token punctuation">></span></span>双下肢水肿4年，加重12天<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FONT</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FONT</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>STRONG</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FONT</span><span class="token attr-name">&lt;P</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FONT</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>steelblue</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>STRONG</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FONT</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>#000</span><span class="token punctuation">></span></span>主诉<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FONT</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>STRONG</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FONT</span><span class="token punctuation">></span></span>:发现血压升高30+年，反复头晕4+月，加重1天<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>P</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>有的连冒号都被颜色标签截断了，最后索性用正则直接拉取含有主诉的p标签内的整段</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 主诉（re方法）</span><span class="token comment"># chief_compliant = r'(?&lt;=&lt;STRONG>主诉.*?&lt;/STRONG>).*?(?=&lt;/FONT>)|(?&lt;=&lt;STRONG>主诉：&lt;/STRONG>).*?(?=&lt;/FONT>)'</span>chief_compliant <span class="token operator">=</span> <span class="token string">r'&lt;P>&lt;FONT color=steelblue>.*?主诉.*?&lt;/P>'</span>chief <span class="token operator">=</span> regex<span class="token punctuation">.</span>search<span class="token punctuation">(</span>chief_compliant<span class="token punctuation">,</span> myhtml<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><figure><img src="/81d4/image-20200426220846518.png" alt="image-20200426220846518" /><figcaption aria-hidden="true">image-20200426220846518</figcaption></figure><p>输出的结果再把标签、主诉二字和冒号等删去</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> pyquery <span class="token keyword">import</span> PyQuerychief_text <span class="token operator">=</span> PyQuery<span class="token punctuation">(</span>chief<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">if</span> chief_text<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># clean the chief compliant text</span>    p1 <span class="token operator">=</span> <span class="token string">r'主诉|\n|:|：'</span>    chief_clean <span class="token operator">=</span> regex<span class="token punctuation">.</span>sub<span class="token punctuation">(</span>p1<span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span>chief_text<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    text<span class="token punctuation">.</span>append<span class="token punctuation">(</span>chief_clean<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>差不多能看了</p><figure><img src="/81d4/image-20200426220726567.png" alt="image-20200426220726567" /><figcaption aria-hidden="true">image-20200426220726567</figcaption></figure><p>再用同样的方法提现病史的时候遇到了问题，发现正则会把之前主诉的内容也匹配上，这是python正则的懒惰匹配只能向后没有向前。一个办法是抽出来然后删掉主诉</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 现病史（re方法）</span>phpi <span class="token operator">=</span> <span class="token string">r'&lt;P>&lt;FONT color=steelblue>.*?现病史.*?&lt;/P>'</span>hpi <span class="token operator">=</span> regex<span class="token punctuation">.</span>search<span class="token punctuation">(</span>phpi<span class="token punctuation">,</span> myhtml<span class="token punctuation">)</span><span class="token keyword">if</span> hpi<span class="token punctuation">:</span>    <span class="token comment"># remove_tag = r'&lt;[^>]+>'</span>    <span class="token comment"># hpi_no_tag = regex.sub(remove_tag,'', hpi[0])</span>    <span class="token comment"># if hpi_no_tag:</span>    <span class="token comment">#     hpi_no_title_tag = regex.sub(r'主诉','',hpi_no_tag[0])</span>    <span class="token comment">#     if hpi_no_title_tag:</span>    <span class="token comment">#         text.append(hpi_no_title_tag[0])</span>    <span class="token keyword">from</span> pyquery <span class="token keyword">import</span> PyQuery    hpi_text <span class="token operator">=</span> PyQuery<span class="token punctuation">(</span>hpi<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> hpi_text<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># clean the hpi compliant text</span>        p1 <span class="token operator">=</span> <span class="token string">r'\n|:|：'</span>        hpi_clean <span class="token operator">=</span> regex<span class="token punctuation">.</span>sub<span class="token punctuation">(</span>p1<span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span>hpi_text<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        hpi_cut <span class="token operator">=</span> regex<span class="token punctuation">.</span>sub<span class="token punctuation">(</span><span class="token string">'.*?(?=现病史)'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">,</span>hpi_clean<span class="token punctuation">)</span>        hpi_end <span class="token operator">=</span> regex<span class="token punctuation">.</span>sub<span class="token punctuation">(</span><span class="token string">'现病史'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">,</span>hpi_cut<span class="token punctuation">)</span>        text<span class="token punctuation">.</span>append<span class="token punctuation">(</span>hpi_end<span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    text<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">'Null'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>后面5个病史都这样正则匹配很浪费时间，索性把这一大段全抽出来，直接全部去格式变为纯文本</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">主诉颈部不适伴头痛、头晕2周，加重1周。现病史2周前患者因长期伏案工作后出现颈部不适伴头痛、头晕，转颈时头晕、头痛加重，休息后症状有所减轻，无伴双上肢放射痛及麻木感，无耳鸣，无视物旋转，无恶心呕吐，无踩棉花感，疼痛与天气变化无关，遂至“都江堰医院”就诊，检查头颅MRI未提示异常。近1周来，患者头晕、头痛加重，为求进一步系统治疗，遂入我科，门诊以“颈椎病”收入住院。入院症见步入病房，神清，精神可，颈部不适伴头痛、头晕，转颈时头晕、头痛加重，休息后症状有所减轻，无伴双上肢放射痛及麻木感，无耳鸣，无视物旋转，无恶心呕吐，无踩棉花感，纳眠可，二便调。既往史否认“糖尿病”、“高血压病”、“冠心病”等慢性病病史，否认“乙肝”、“结核”等传染病病史，否认重大手术史及外伤史。否认药物过敏史及食物过敏史，预防接种史不详。个人史生于四川阿坝长期居住于当地，否认疫区居住史，否认冶游史，否认吸烟、嗜酒等不良嗜好。月经及婚育史，患者自诉近期月经周期紊乱及月经量减少；适龄婚育，育有1女，家人均体健。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后根据主诉、现病史、既往史拆分每一部分</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 拉取现病史</span>hpi <span class="token operator">=</span> regex<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">r'(?&lt;=现病史).*?(?=既往史)'</span>chiefandhistory_clean<span class="token punctuation">)</span><span class="token keyword">if</span> hpi<span class="token punctuation">:</span>    text<span class="token punctuation">.</span>append<span class="token punctuation">(</span>hpi<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    text<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">'Null'</span><span class="token punctuation">)</span><span class="token comment"># 拉取既往史</span>item <span class="token operator">=</span> regex<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">r'(?&lt;=既往史).*?(?=个人史)'</span>chiefandhistory_clean<span class="token punctuation">)</span><span class="token keyword">if</span> item<span class="token punctuation">:</span>    text<span class="token punctuation">.</span>append<span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    text<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">'Null'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="批量读写文件">批量读写文件</h3><p>差不多能读了就把所有的病历批处理一下，这里用os.walk遍历所有xml文件（文件名是HIS标识+xml，不连续，就直接批量拉取了）</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># dir = "./Data1"</span><span class="token comment">#使用listdir循环遍历</span><span class="token keyword">def</span> <span class="token function">getxml</span><span class="token punctuation">(</span><span class="token builtin">dir</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">import</span> os    path <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>isdir<span class="token punctuation">(</span><span class="token builtin">dir</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">dir</span><span class="token punctuation">)</span>        path <span class="token operator">=</span> <span class="token builtin">dir</span>    dirlist <span class="token operator">=</span> os<span class="token punctuation">.</span>walk<span class="token punctuation">(</span><span class="token builtin">dir</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> root<span class="token punctuation">,</span> dirs<span class="token punctuation">,</span> files <span class="token keyword">in</span> dirlist<span class="token punctuation">:</span>        <span class="token keyword">for</span> <span class="token builtin">file</span> <span class="token keyword">in</span> files<span class="token punctuation">:</span>            <span class="token keyword">if</span> <span class="token builtin">file</span><span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token string">".xml"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                path<span class="token punctuation">.</span>append<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>root<span class="token punctuation">,</span> <span class="token builtin">file</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"./XMLfilename.txt"</span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>        <span class="token keyword">for</span> line <span class="token keyword">in</span> path<span class="token punctuation">:</span>            f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>line<span class="token punctuation">)</span>            f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> path<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="写入数据库">写入数据库</h2><p>最后是入库操作，这里为了省事直接用PyMySQL了</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> pymysqlconnection <span class="token operator">=</span> pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>host<span class="token operator">=</span>workstation_host<span class="token punctuation">,</span>                             port<span class="token operator">=</span>workstation_port<span class="token punctuation">,</span>                             user<span class="token operator">=</span><span class="token string">'root'</span><span class="token punctuation">,</span>                             password<span class="token operator">=</span>workstation_passwd<span class="token punctuation">,</span>                             db<span class="token operator">=</span><span class="token string">'EMR'</span><span class="token punctuation">,</span>                             charset<span class="token operator">=</span><span class="token string">'utf8'</span><span class="token punctuation">)</span>cursor <span class="token operator">=</span> connection<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">'INSERT INTO `medical_EHR` (`HIS`,`Chief_complaint`) VALUES (%s, %s)'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token builtin">list</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>connection<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="其他">其他</h2><p>一些大段的文本，比如主诉、病史之类的后期结构化用LSTM或者Bert跑一下，这个以后再讲。</p><p>现在这个电子病历吧，感觉跟纸币支付宝化一样，疯狂泄露隐私等问题根本没人管，指不定哪天你个人信息全给你卖了。 以后你们到医院还是能要纸质凭据就要纸质的，回头出了什么事找医院撕逼比较好办。另，现在医保吃紧，交了很多年医保到了用的时候大概率被赖账，别被坑了找医院讨说法还被打成医闹反动分子；什么？医生不都是弱势群体白衣天使咩？啊这，你说是那就是。</p><blockquote><p>三个劫道的不如一个卖药的,三个卖药的不如一个开学校的</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;有两种鬼画符，一种是医生的字，一种是正则表达式</summary>
    
    
    
    <category term="102网吧日常" scheme="https://zhangjk98.xyz/categories/102%E7%BD%91%E5%90%A7%E6%97%A5%E5%B8%B8/"/>
    
    
    <category term="xml" scheme="https://zhangjk98.xyz/tags/xml/"/>
    
    <category term="电子病历" scheme="https://zhangjk98.xyz/tags/%E7%94%B5%E5%AD%90%E7%97%85%E5%8E%86/"/>
    
  </entry>
  
  <entry>
    <title>毕竟狂澜挽不回，遽怜遗蜕化飞灰</title>
    <link href="https://zhangjk98.xyz/70c8/"/>
    <id>https://zhangjk98.xyz/70c8/</id>
    <published>2020-02-15T09:26:34.000Z</published>
    <updated>2020-02-15T09:26:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>So this is how liberty die, with thunderous applause <a id="more"></a></p><p>这次非典，我感觉不对劲的时间挺早，。那八个人被训诫荣登央视的时候我就再不说话了，大路朝天，各走一边。 相信可防可控就信去吧，劝是劝不住的，我倒是会喝茶。 想来我也算半个医学逃兵，颇有些惭愧</p><blockquote><p>凄然不作零丁叹，检点平生未尽心</p></blockquote><p>元旦就看到江宁狗这个反向指标洋洋得意跑出来喷粪，又过了两天看到新加坡和香港有动静了，再一看查处造谣都上央视了，那稳了。你甚至不需要医学知识，除非你第一天生活在人间。</p><p>然而现在恰恰逃兵是正确选择，扁鹊望桓侯而还走，管轶惊惶弃武汉回港</p><p>我什么也不想说，1月20号坐飞机回家之前，周围师兄师姐一会去春熙路逛街买新衣服一会出去玩，老板一会带我们去川大华西商量制造科研垃圾，一会说准备一下到肿瘤医院把之前的科研垃圾中期结题一下，并没有人感觉异常，我也不想自讨没趣。只能把去春熙路和出去玩找个借口推了，找个心理安慰，毕竟教研室巴掌大的地方，真出事一个也躲不掉。</p><p>爱国爱党信中医的景润师兄12号回了黄冈，淡定的一匹，比电视上的群众还淡定，我又何必自讨没趣呢</p><p><img src="/70c8/jingrun.webp" /></p><p>求仁得仁，复何怨哉</p><h2 id="六朝如梦">六朝如梦</h2><p>经此一疫，又有一群不食人间烟火的人黄粱梦醒，纷纷如丧考妣，惊讶愤怒心痛，只觉所住非人间。你们是第一天住在人间吗？或许是承平日久了，想想这十几年真是好日子过多了，真觉得和平发展充满爱是世界主流了，这一片绿油油的韭菜不割都对不住韭菜。就像之前的故宫大G，愤怒可以理解，惊讶就太外宾了。 难道你们不知道权贵一直如此？ 难道你们第一天接触慈善和红会？ 难道你们第一天活在地球？</p><p>天下大乱、礼崩乐坏、风起云涌，这是一个王佐之才如过江之鲫的时代，这是一个两脚羊的时代。 管他春秋繁荣还是六朝纷乱，反正都比虚假繁荣的皇朝有意思多了。</p><p>前一阵奥斯卡奖,一群人居然又开始吹捧寄生虫了。寄生虫刚出来的时候我扫了一眼两极分化的影评我就不想看了，实在没意思。小丑也没意思，至少不如爱尔兰人，我感觉快把蝙蝠侠三部曲的牌子给砸了。建议奥斯卡也加大力度，回头和WHO比比哪个更搞笑。 还有一些人哀叹中国影视文艺百花凋零，那大可不必，你看到这个暗流涌动的世界了吗?实在没有必要看那些电影工作者和文艺工作者的自嗨产物,更没必要理会电影工作者自己给自己颁的奖。更何况近五年来影视界和五年前十年前比实在没意思。你们小时候读过儿歌和故事，甚至被要求背过课本上的文章吧；我反正经常有种被喂屎的感觉，他们就喜欢搞一堆<span class="exturl" data-url="aHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvTGllLXRvLWNoaWxkcmVu">骗小孩<i class="fa fa-external-link-alt"></i></span>的玩意，他们还装小孩语气说话写课本（虽然装得一点也不小孩），然后小孩还要背诵他们装小孩的东西（顺便来个读后感）。 现在的问题是越来越多电影制作者装高深和整天把观众当傻子，观众却不买帐了。 反正我看到一些有脑子的社会活动家和键政人士纷纷表示寄生虫这电影就是个垃圾，有点作为半个动物爱好者的我看<span class="exturl" data-url="aHR0cHM6Ly90cmFuc2xhdGlvbnMuaGVhZHNhbG9uLm9yZy9wb3N0LzIwMTgvMDcv6ZqP5bCP6bm/5paR5q+U6ICM55Sf55qE5paH5YyW5r2u5rWBLw==">小鹿斑比<i class="fa fa-external-link-alt"></i></span>的样子,更恰当地说，学机械的工科狗看到有人吹高达的设计和威力的样子。实在是太假了，简直有违常识，韩国电影当年有很多好的深刻的讽刺现实作品，这几年用力过度甚至失去了常识（虽然韩国的猎奇片子一向就喜欢为了猎奇抛弃常识）。有人说韩国影视界近年来进步很大，我觉得恰恰相反。</p><p>一些吃瓜群众人纷纷表示不服，看到寄生虫获奖：就这？就这？就这？ 大有项羽见始皇帝出游，“彼可取而代也”的感觉 哦，不，是看了湖北政府，“我也能当省长”的感觉</p><h2 id="他们都不说人话">他们都不说人话</h2><blockquote><p>社会主义没有失业,那叫下岗</p></blockquote><p>有人怕了，就怕跟SARS扯上关系啊</p><p>这病毒终于还是有了个名字叫SARS-cov-2，然而国内官媒一个个都有意回避SARS的说法，甚至绝口不提非典，非得叫新型冠状病毒，却又说不是SARS 我们随便点开一个百科,比如默沙东手册:</p><blockquote><p>严重急性呼吸综合征（SARS）是由SARS冠状病毒（SARS-CoV）引起的严重急性呼吸道疾病。</p></blockquote><p>这可不就是SARS，这次疾病就叫 SARS2 我看正合适。 WHO（Winne Happy Orgnization）不管这个叫 SARS，当然了，他们还满口可防可控不列疫区，我建议WHO加大力度，力度再大点就可以被总书记<strong>亲自批准</strong>火线入党了，岂不美哉</p><p>你们还是说点人话吧，什么2019-nCov啊，什么NCP啊，特色社会主义都能叫社会主义，这新型冠状病毒都不算SARS？</p><h2 id="国士垂垂老矣">国士垂垂老矣</h2><p>元旦那会我觉得这个可能要闹大,当时也没想到会闹成今天这个样子。</p><p>钟南山那个儒贼出来我就感觉要坏事，却没想到从上到下如此不堪。 03年非典，蒋先生做出了青史留名的举动，涛哥不戴口罩亲临广州街头，臊子面稳住了北京。今天只留下了一个又一个笑话，让大家觉得“彼可取而代也”</p><p>大家一边吹捧钟南山，一边骂双黄连和可防可控，我看得哭笑不得。 钟南山当年的板蓝根和可防可控大家都忘了吗？莲花清瘟都忘了吗？ 他可不是糊涂，他自己是不信的。他父亲都是反中医的。</p><figure><img src="/70c8/板蓝根.webp" alt="板蓝根" /><figcaption aria-hidden="true">板蓝根</figcaption></figure><p>以下内容直接复制自维基百科 &gt;2月11日上午，广州市政府召开新闻发布会公布广州地区非典型肺炎情况，称所有病人的病情均在控制当中。强调对于广州千万人口300多人染病是个很小的比例，非典型肺炎只是局部发生，河源中山等市已无新发病例报告。还解释了2月前前阶段没有公布情况的原因是：河源中山等地的患者经过治疗大多已康复或好转没有再发病，非典型肺炎并不是法定报告传染病，而发病人数305例并不算多。负责人强调会按传染病法公布疫情。 &gt;同日下午，广东省卫生厅举行情况通报会。中国工程院院士钟南山表示，市民到公众场所进行正常的活动是不会受到感染的，宣布广东大中小学将会如期开学。专家还指出，从临床角度看，可能是由病毒引起的，也有可能是病毒的亚型或变种引起的。对于患者的治疗都是采用“对症下药”的方法。</p><p>当然了，肯定有人让我闭嘴，我算个什么东西，哎，我还真不算个东西。 我一个稀里糊涂读了几年生物医学工程的工科狗，给自己脸上贴金也只能算半个医学相关闲杂人等，跑到知乎<a href="#fn1" class="footnote-ref" id="fnref1" role="doc-noteref"><sup>1</sup></a>去说两句，能引来几千个人追着骂我。（2020年的，2013年前的应该不能）</p><p>那我就贴一点<span class="exturl" data-url="aHR0cHM6Ly93d3cud2VpYm8uY29tL3UvMTgyOTg3MDIxMg==">小儿外科裴医生<i class="fa fa-external-link-alt"></i></span>的话 (以下内容大段粘贴，指不定哪天号就没了，留个备份，前几天刚炸了一大批怼中医的)</p><blockquote><p>小儿外科裴医生<br />2019-9-8 09:36 来自 iPhone客户端 你要是以为钟南山在这个“科普”中讲到莲花清瘟胶囊是无意的，或者他只是因为没有了解这个药，那就太幼稚了，人家不蠢，只是没有节操，为了利益，用自己的学术地位给那些没用的药站台背书，就是恶。<span class="exturl" data-url="aHR0cDovL2hiLmNoaW5hZGFpbHkuY29tLmNuL2EvMjAxOTA5LzA3L1dTNWQ3MzhmNjdhMzEwOTlhYjk5NWRlOTNmLmh0bWw=">O“知感冒·防流感——全民科普公益行”活动在汉举... ​​​​<i class="fa fa-external-link-alt"></i></span></p></blockquote><p>这活动还有视频哦（太长了就只贴个图好了）</p><p><img src="/70c8/莲花清瘟.webp" /></p><p>这底下有个评论：</p><blockquote><p>fanbobb：如果有人问我，连我们最该拥有权威的院士，前几天还有正能量新闻的院士，都宣传中成药，你还成天说中药是骗人的吗？我作为一个非医学专业的普通人还真有点哑口无言</p></blockquote><p>我也哑口无言。</p><blockquote><p>小儿外科裴医生 2月2日 22:07 来自 iPhone 11 Pro 面对一个大家都不太了解的病毒，被感染了有什么丢脸，为什么要用此这么恶毒的词？我觉得他比钟南山客观、务实、专业、真实多了。//<span class="citation" data-cites="st5873:这样草包还有脸出来到处接受采访">@st5873:这样草包还有脸出来到处接受采访</span> <span class="citation" data-cites="小儿外科裴医生">@小儿外科裴医生</span> 中青报对这篇对@北大呼吸发哥 的访谈很不错，推荐大家看看。O卫健委专家组成员王广发出院了，回答了我们8... ​​​​</p></blockquote><blockquote><p>阿瓦达啃大瓜1633：回复@蓝小诺CC:几年前亲耳听钟老板在欧洲呼吸病年会分会上演讲说他们团队研究治疗H1N1板蓝根有效，莲花清韵胶囊有效，当初差点以为听错了，那时才明白钟老板那一刻的身份是行政官员不是医生。</p></blockquote><p>下面这段已经被删了,戳到某些人的脊梁骨了。这里我手动加粗，以免太长不看的读者在跳读我写的这一堆垃圾时错过重点内容</p><blockquote><p><span class="citation" data-cites="小儿外科裴医生:专业我就说几个词吧">@小儿外科裴医生:专业我就说几个词吧</span>：<strong>连花清瘟、板蓝根、装修致白血病、兰菌净、羧甲司坦、口罩</strong>。//<span class="citation" data-cites="嘛咪嘛咪-hong:所以我想知道钟南山哪儿不客观">@嘛咪嘛咪-hong:所以我想知道钟南山哪儿不客观</span>，不务实，不专业，不真实呢？（非杠，真心请教）</p></blockquote><p>当然很多都删了，还有很多没有说出口（很多话我也没说出口）</p><blockquote><p>昨天在隔壁号我又有一篇文章被删了，算上之前被删的和推送不出去的，整个疫情期我有约1/10的文章没法见人，昨天看到棒棒医生的那篇循证的崩溃的文章也被删了，医学专业人员连专业问题都不能讨论和发言，那可能是这块土地真的不再需要专业和科学了。 ​​​​</p></blockquote><p>19年10月钟南山还在搞：<span class="exturl" data-url="aHR0cHM6Ly93d3cudGhlcGFwZXIuY24vbmV3c0RldGFpbF9mb3J3YXJkXzQ3MzExMDY=">钟南山：正研发新版板蓝根，药效或强五六倍<i class="fa fa-external-link-alt"></i></span>，还给莲花清瘟站台，对了，还有虫草呢（就是内含重金属，改变了平西王历史的进程的那个虫草）</p><p><img src="/70c8/冬虫夏草.webp" /></p><p>什么叫国士无双啊，战术后仰</p><p><img src="/70c8/pilipili.webp" /></p><p>另，友情提示，李兰娟的人品、水平和能力还不如钟南山。</p><p>没多少人提起，蒋先生的往事 据说蒋先生现在身体也不太好，唉</p><figure><img src="/70c8/蒋彦永.webp" alt="蒋彦永先生" /><figcaption aria-hidden="true">蒋彦永先生</figcaption></figure><p>“我之所以能直面现实，是因为我相信我们的国家。因为国家如果能从我提供的这些情况吸取一定的教训，因此建立好公共防疫制度，从SARS的挑战与困境中站起来，获得全世界人民的信任。”</p><p>这次怕是让老爷子心寒了</p><p>当然某人青年时代就亲自读过莎士比亚，并且在15年引经据典告诉过我们：“凡是过去，皆为序章”。<a href="#fn2" class="footnote-ref" id="fnref2" role="doc-noteref"><sup>2</sup></a></p><p><em>我将无我，亲自指挥</em></p><p>正常表现罢了</p><blockquote><p>因笑王谢诸人，登高怀远，也学英雄涕</p></blockquote><h2 id="我还是说点什么吧">我还是说点什么吧</h2><p>建议大家多屯点粮食</p><p>有钱记得做空美股（当然你也可以拿期权做空A股，只要你不怕投机倒把当场击毙）</p><p>对野生动物保护持续悲观（你看见之前环保部门煤改气了吧）</p><p>再多说两句，流浪猫狗应该跟本次非典没有太大关系，不管有没有关系，流浪猫狗本就应该组织扑杀（收容和安乐是宠保人士和猫奴狗奴的事，政府以极大浪费<del>纳税人</del>韭菜的血汗钱进行收容和安乐都是不合适的，TNR属于迁就猫奴狗奴的绥靖行为，同样不可取）。 昆明滇池的红嘴鸥和黔灵山公园的猕猴今年缺少游客喂食，景区组织投喂，这是十分不好的。</p><p>下面贴一些鸟类爱好者的话：</p><p>[中土饲养员]：有研究表明人为投喂淀粉类的面包蛋糕等会降低各种鸥类育雏的成功率，但是还好红嘴鸥只把昆明当成补充体力的中转站 <span class="exturl" data-url="aHR0cHM6Ly93ZWliby5jb20vdS82NTUyODkzNjc1">JK协捕队2世<i class="fa fa-external-link-alt"></i></span>： <span class="exturl" data-url="aHR0cHM6Ly93ZWliby5jb20vdS81ODMyOTk3NTA0">漂泊极北鲵<i class="fa fa-external-link-alt"></i></span>：...首先 这是红嘴鸥Chroicocephalus ridibundus 不是海鸥Larus canus 其次这些鸥已经被喂得彻底与自然环境分离了 这是在毒害它们 没事请与野生动物保持距离，不要乱摸、投喂，除了保育和救助等都不要打扰动物 动物园和景区里的也不行，很多动物园和景区做得都不好，禁止投喂的牌子并不管用，工作人员也制止不过来</p><p>我只是半个动物爱好者，这里就不自己扯淡了, 这是一篇土澳学生物的博主写一篇长微博：<span class="exturl" data-url="aHR0cHM6Ly93ZWliby5jb20vMzk2MjEzNTI2Mi9Jc3k3OUJIUEE=">https://weibo.com/3962135262/Isy79BHPA<i class="fa fa-external-link-alt"></i></span> 我抄一点过来: &gt;人类的食物，如面包、薯条、饼干，高油高盐，高热量高糖分，对野生动物的健康极为不利，多表现为肥胖、肾衰竭、毛发脱落等。因为人类的饮食根本不是它们自然食物链的一部分。不天然的饮食及其附属物，例如塑料袋、油污，也会污染野生动物的自然栖息地。 &gt;亲密接触野生动物增加疾病的传播概率，这点在当下这个时候，想必不用再过多说明了吧？某市以投喂红嘴鸥为荣的，鸟类身上携带什么疾病来着，禽流感啊，好自为之！去高原上摸旱獭喂食旱獭，自私且无耻，将自己暴露在甲级传染病鼠疫病原的触碰范围内，你又为你家人想过吗？犰狳是恐怖的麻风病宿主，很多小型食肉动物传播狂犬病，动物身体体表和体内的各种寄生虫，野生动物从来都不好惹。 &gt;使野生动物依赖人类获取食物。这次疫情限制出行，很多问题就暴露出来了，为什么贵州那群猴子和某市的红嘴鸥离不开人的投喂了？这是个恶性循环啊，本来就不该投喂野生动物，养成依赖了，现在甩不了手，离不开人了，出了事动物们自己不会觅食，纷纷饿死，有得去投喂，这个循环刹不住车了，你觉得是好事吗。就说红嘴鸥吧，这种鸟类本来还是候鸟，人家到点了想飞走就飞走，想留下就留下，一投喂全留下了，这基数不断变大，竞争压力也不断变大。红嘴鸥的自然种群数量庞大，适应力很好，年前跑鸟类调查，上万只反正是随随便便看到了，它们也不是什么濒危物种，完全不依靠人类“救援”。所以这事，从一开始做的就不对，不是说你现在不投喂要出问题，是一开始就压根不该投喂，动物不是人，它脑子里只有吃和繁殖，这样强行转变了它们的生存策略，到最后只能是出问题。</p><p>还有这方面的疑问不建议问我，请直接去问他们</p><p>中医早已变成一个庞大的利益集团，随便一个阿胶之类的体量都在鸿茅药酒十倍以上。总规模和能量加起来应该不低于清真食品产业链。 我不想说什么中医了，我也不拦着，谁爱信谁信。以前看到有人想不开，我都觉得应该劝劝，现在抑郁症想自杀的人我都觉得不应该拦着，信中医就我就更不反对了，都是个人选择，尊重个人意愿。非公共场合抽烟也是个人意愿，还能成为光荣的<del>纳税人</del>烟草局韭菜。喝中药对他人危害并不高于香烟，还能解决医保和老龄化的难题，顺便进行智商筛选。</p><p>在现代医学已经发展到这个样子的今天，再想想《赠医者汤伯高序》文末“嗟夫，使世之医皆若虚、伯高，信之者皆吾里之人，巫其能久胜矣乎”，问题的答案是：你别说，还真能！</p><p>楚俗信巫不信医，今天群魔乱舞自称中医的一群人，基本都是跳大神的巫医，谋财害命之徒。可以粗暴的认为是一个宗教性质的东西。</p><p>再有人问中医怎样，我建议你们这样安利他们：试试恒河水，这个纯天然，效果也很好，还免费</p><p>死生有命，富贵在天 善哉，善哉</p><blockquote><p>庚子年春，大雪，惊雷，天有五日,瘟疫封城</p></blockquote><section class="footnotes" role="doc-endnotes"><hr /><ol><li id="fn1" role="doc-endnote"><p>https://www.zhihu.com/question/28634829<a href="#fnref1" class="footnote-back" role="doc-backlink">↩︎</a></p></li><li id="fn2" role="doc-endnote"><p>http://politics.people.com.cn/n/2015/1021/c1001-27724579.html<a href="#fnref2" class="footnote-back" role="doc-backlink">↩︎</a></p></li></ol></section>]]></content>
    
    
    <summary type="html">&lt;p&gt;So this is how liberty die, with thunderous applause</summary>
    
    
    
    <category term="彼黍离离" scheme="https://zhangjk98.xyz/categories/%E5%BD%BC%E9%BB%8D%E7%A6%BB%E7%A6%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>你好，Manjaro。再见，Manjaro。</title>
    <link href="https://zhangjk98.xyz/ff0e/"/>
    <id>https://zhangjk98.xyz/ff0e/</id>
    <published>2020-01-17T02:41:09.000Z</published>
    <updated>2020-01-17T02:41:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>本来我是想装个双系统的，但是想起教研室还有两个老主机，那就..... <a id="more"></a></p><p><del>装Arch是不可能装Arch的</del></p><h2 id="更新再见manjaro">更新———再见Manjaro</h2><p>前一阵Manjaro社区出的争吵让我跑路了，Manjaro之前用的还比较舒服（当然直到现在都比较舒服），以后就不知道怎么样了。外面Arch社区骂声一片，里面还总在内斗，不断有人出走，前几周连jonathon都气走了（跑去隔壁endeavour os了）</p><p>jonathon的声明在<span class="exturl" data-url="aHR0cHM6Ly9mb3J1bS5tYW5qYXJvLm9yZy90L2NoYW5nZS1vZi10cmVhc3VyZXItZm9yLW1hbmphcm8tY29tbXVuaXR5LWZ1bmRzLzE1NDg4OA==">这篇帖子<i class="fa fa-external-link-alt"></i></span></p><p>过程大概是这样的，philm（Manjaro的CEO，反正Manjaro社区的不少人都觉得此人非常讨厌）挪用社区赞助捐款2000欧元，用于给自己买的电脑。这次购买并没有跟掌钱管家jonathon商量，也没有在社区内征得同意。jonathon觉得按照规定这钱只能用于Manjaro项目的网站建设、项目推广之类的，不是给你们恰烂钱的，然后在论坛发帖子怼philm，然后帖子被删了一次，jonathon的管理员也被撤了。帖子下面众人纷纷表示philm不回应道歉以后再也不捐助Manjaro了，不少人表示以后再也不用Manjaro了，并考虑跑路到KDE Neon、Kubuntu、Arch、Endeavour OS。</p><p>philm的回应闪烁其辞，一直说事情不是大家想的那个样子的，但是大家怼他让他公布他和jonathon的完整聊天记录他又不肯。最后philm屁事没有，jonathon跑路去了Endeavour OS。</p><p>我之前从Ubuntu换到Manjaro，现在跟着jonathon跑到endeavour os（Antergos 的后继项目），因为懒得搞网卡驱动和g双显卡驱动了（这个Arch系的发行版显卡驱动、TLP和s-tui之类的也会附带装上，默认xfce桌面有很多系统自带的定制，我装的KDE，基本上相对于Arch没怎么魔改，附带了驱动个和很多常用的包）目前用着感觉还好，观察一下再评价。</p><h2 id="安装">安装</h2><p>选Manjaro是因为对华硕老主板的硬件和驱动支持比较好，安装也比较方便（我可不想自己折腾Nvida驱动）。</p><p>（喜欢KDE桌面，又不想用openSUSE，Kubuntu之前试过体验不是特别好，转了一圈就Manjaro了）</p><p>去官网下了最新版的 Manjaro18.1.5 KDE桌面版本，还是拿Rufus做好启动盘用UEFI装，这里把空闲的老机子直接擦除原来已毕业师兄的win10（erase disk），选 no Hibernate（我不太喜欢systemd，就没设休眠）</p><p>看到选项里有个选择LibreOffice还是Free Office的选项，这里我选了FreeOffice试用，体验过两个月再回来填坑写体会。 （更新，还是WPS吧。。。）</p><p>可以断网安装。没有遇到问题，直接装好了，超乎想象的顺利。唯一的小插曲是装完系统后U盘只剩4M空间，用win10默认的格式化找不回来了，看了<span class="exturl" data-url="aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8zNzc3MjgyNQ==">这里<i class="fa fa-external-link-alt"></i></span> 网上教程已经很多了，我也不打算再写一篇了，下面仅作个人记录(其实并不怎么需要教程，过时得太快，还不如直接看官方wiki或者iso里打包的安装手册，不想看直接照着提示直接装都没问题，比Ubuntu好装太多了) <img src="/ff0e/neofetch-manjaro.webp" alt="manjaro-neofetch" /> 内置python是3.8.1，我一时竟有些不习惯😂</p><h2 id="配置">配置</h2><h3 id="换镜像源">换镜像源</h3><p>当然还是换成你电的，在<code>/​etc/​pacman.d/​mirrorlist</code>加上你电</p><h3 id="输入法">输入法</h3><p>更新，现在有一个官方打包的AUR： manjaro-asian-input-support，在community里面，有manjaro-asian-input-support-fcitx、manjaro-asian-input-support-ibus、manjaro-asian-input-support-ibus、manjaro-asian-input-support-fcitx5</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S manjaro-asian-input-support-fcitx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后重启直接就能用了</p><p>KDE推荐fcitx，Gnome下大概ibus体验会好一点？（好吧其实我之前在Ubuntu Gnome上用的也是fcitx）</p><p><strong>下面这些都不用看了</strong></p><p>我用的<del>sunpinyin</del>libpinyin（一个比sunpinyin更新的输入法），googlepinyin也可以，sougoupinyin不推荐，对于它的流氓行为我实在无法放心（如果非要装，记得装fcitx qt4 或 qt5）</p><p>如果想要联网提示的功能可以装个cloudpinyin(要用archlinuxcn的源)</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S fcitx-im fcitx-googlepinyin fcitx-libpinyin fcitx-cloudpinyin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>有个小问题，那个很多教程都写的/.xproflie, 官方wiki里新版是 ~/.pam_environment里面加上那三行, fcitx官网上说是那个~./xprofile, 这里我放到.pam_enviroment里面了。</p><pre class="line-numbers language-log" data-language="log"><code class="language-log">GTK_IM_MODULE&#x3D;fcitxQT_IM_MODULE&#x3D;fcitxXMODIFIERS&#x3D;@im&#x3D;fcitx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>然后点开右下角键盘的configure（配置）看不到输入法了，界面是空的，以为是系统语言非中文的问题，但是换了系统语言重启了以后还是不行。 运行了一下fcitx-diagnose, 报这个错误</p><pre class="line-numbers language-log" data-language="log"><code class="language-log">fcitx: BadWindow (invalid Window parameter)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>感觉是看不知道哪个教程的时候在~/.xinitrc里面乱配置的时候出问题了</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">LC_ALL</span></span><span class="token operator">=</span>zh_CN.UTF-8<span class="token builtin class-name">export</span> <span class="token assign-left variable">GTK_IM_MODULE</span><span class="token operator">=</span>fcitx<span class="token builtin class-name">export</span> <span class="token assign-left variable">QT_IM_MODULE</span><span class="token operator">=</span>fcitx<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">XMODIFIERS</span></span><span class="token operator">=</span><span class="token string">"@im=fcitx"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>搜了一下是我弱智了，看<span class="exturl" data-url="aHR0cHM6Ly9iYnMuYXJjaGxpbnV4Y24ub3JnL3ZpZXd0b3BpYy5waHA/aWQ9MTg2Mg==">这里<i class="fa fa-external-link-alt"></i></span>，照着教程乱搞的时候都没注意到。 这里把exec放到后面就行了，或者放到.xprofile里面</p><p>配置看这里 https://fcitx-im.org/wiki/Configure_(Other)/zh-hans</p><p>我看很多教程都是用的fcitx-configtool，这里推荐KDE桌面用kcm-fcitx进行设置，也可以直接编辑config文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S kcm-fcitx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="软件包管理">软件包管理</h3><h4 id="pacman">pacman</h4><p>装包首选pacman，然后是AUR，然后是其他pip、npm、deb之类的包（貌似Manjaro发布的20版pamac软件商店还支持了snap和flatpac......），然后是自己编译（对自己打包技术自信的编译狂魔请无视), 这样可以避免不少包冲突。 yaourt已经停止维护了<a href="#fn1" class="footnote-ref" id="fnref1" role="doc-noteref"><sup>1</sup></a>，2020年了很多教程都还是这个，请自行换成yay<a href="#fn2" class="footnote-ref" id="fnref2" role="doc-noteref"><sup>2</sup></a>等</p><p>另外多说一句，Manjaro很多地方和Arch还是不一样的，随便添加arch源或者archlinuxcn源是要出问题的</p><p>要加包优先从AUR里面加，尽量不要用archlinuxcn里的东西，Manjaro很多魔改和更新依赖版本速度和Arch不一样，非要使用archlinuxcn灵车漂移就把Manjaro设成unstable（并且出了事不要去archlinuxcn那里问，切记）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> pacman-mirrors --api --set-branch unstable<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>虽然名字叫unstable，但是它和Arch的stable基本上是类似的（它还要比Arch的stable慢三天），这意味着换成unstable再上archlinuxcn源灵车漂移翻车的几率会小一点。</p><p>Manjaro的包会比Arch的更新频率慢一点，Manjaro有三种选项，stable，testing和unstable，unstable比Arch的stable慢三天左右，testing比unstable慢，stable比testing慢。一般只是延后了几周而已，可以放心上unstable</p><h4 id="yay安装aur软件">yay安装AUR软件</h4><p>这里用vscode举个栗子</p><p>不像apt有官方包，VSCode在文档上说可以用这个<span class="exturl" data-url="aHR0cHM6Ly9jb2RlLnZpc3VhbHN0dWRpby5jb20vZG9jcy9zZXR1cC9saW51eCNfYXVyLXBhY2thZ2UtZm9yLWFyY2gtbGludXg=">非官方包<i class="fa fa-external-link-alt"></i></span></p><p>按照正常的AUR安装方式是这样的</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S <span class="token function">git</span><span class="token builtin class-name">cd</span> /Downloads<span class="token function">git</span> clone https://AUR.archlinux.org/visual-studio-code-bin.git<span class="token builtin class-name">cd</span> visual-studio-code-bin/<span class="token function">sudo</span> pacman -U visual-studio-code-bin-*.pkg.tar.xz<span class="token builtin class-name">cd</span> <span class="token punctuation">..</span>/ <span class="token operator">&amp;&amp;</span> <span class="token function">sudo</span> <span class="token function">rm</span> -rfv visual-studio-code-bin/code <span class="token builtin class-name">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里我们有<code>yay -S visual-studio-code-bin</code>可以代替上面那一串命令 （pacman现在也有了包，直接pacman就好了<code>pacman -S code</code>）</p><h4 id="pamac">pamac</h4><p>另一种方法是直接从软件商店里点击安装，pamac或者octopi，其实也不算win10 巨硬store或者snap那种软件商店，大概就是一个pacman的GUI客户端吧（很多时候报错和提示并不好用，建议下载和更新还是用命令）</p><p>尤其不要同时开着pamac图形界面并打开pacman，pacman进程加锁出错系统容易崩了</p><h3 id="网上冲浪">网上冲浪</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S v2ray<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>把config.json放到/etc/v2ray下面 然后配置开机自启和启动（这里用systemd）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl <span class="token builtin class-name">enable</span> v2ray  <span class="token comment">#开机启动</span>systemctl start v2ray<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>然后配合switchyomega或者<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL21lbGxvdy1pby9tZWxsb3c=">mellow<i class="fa fa-external-link-alt"></i></span>或者<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3JvZmwwci9wcm94eWNoYWlucy1uZw==">proxychains-ng<i class="fa fa-external-link-alt"></i></span></p><p>如果还是习惯客户端可以试试v2rayA<a href="#fn3" class="footnote-ref" id="fnref3" role="doc-noteref"><sup>3</sup></a></p><h3 id="其他">其他</h3><p>暂时没什么要说了，过一个月再来说体验吧，美化什么的也不想搞了，老主机带不动，我也老了，哎呀，对花里胡哨的欣赏不来了，一律默认配置</p><p>想起什么再说吧，ArchWiki真棒，看Wiki吧</p><h4 id="一些设置的小问题">一些设置的小问题</h4><p>装完输入法之后输入法调不出来了，发现Yakuake也调不出来了，感觉快捷键设置冲突，改快捷键设置就好了。</p><h2 id="后记">后记</h2><p>总能看到一大批Arch玩家在Linux群里发洗手图疯狂劝退Manjaro用户 但是看到下面这篇，我决定还是用Manjaro吧。各种洗手劝退根本没给出让我换系统的强力理由 <span class="exturl" data-url="aHR0cHM6Ly9yZW50cnkuY28vbWFuamFyby1jb250cm92ZXJzaWVz">Manjaro Controversies<i class="fa fa-external-link-alt"></i></span> 中文版<span class="exturl" data-url="aHR0cHM6Ly9zemNsc3lhLm1lL3poLWNuL3Bvc3RzL2xpbnV4L21hbmphcm9fY29udHJvdmVyc2llcy8=">[译] Manjaro 悖论<i class="fa fa-external-link-alt"></i></span> 我还用windows呢，我还用Ubuntu呢，本弱智儿童欢乐多，你们随便怎么鄙视。自从当了硬件逃兵不折腾板子不玩单片机树莓派我连C都不怎么用，欢乐的拿python乱写脚本呢，节省心智的东西有时候真是好东西</p><p>人生苦短， In the long run, we are all dead（虽然我并不喜欢凯恩斯主义）</p><p>我一直觉得商业化是个好事，尤其是操作系统这种东西。私以为大多数情况下知识产权是个好东西，收费也是个好东西，垄断是个坏东西。开源的一个重要贡献就是打破垄断。（虽然现在很多专利什么的都被玩坏了，特别是国内） 操作系统这种工业级的东西，商业化是正道，<strong>微软的问题在于它的垄断，而不是商业化</strong></p><p>（这Manjaro一股 Windows Vista 味，好看好用，bug多也能接受</p><h2 id="时隔5个月的更新">时隔5个月的更新</h2><p>终于返校了，这疫情闹得，哎呀</p><p>据说长时间不追滚动更新可能滚炸，不管了，硬着头皮试一下</p><p>直接</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">sudo</span> pacman -Syyu<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>更新后重启显示密码不对，不知道是什么问题，试着重置了一下密码</p><p>（并不是我忘记密码了，这里据说前一阵不少人的KDE桌面密码出问题登录认证失败了）</p><p>重启按esc进grub</p><p>按e，在有<code>linux /boot /vmlinuz-linux</code>的那一行添加<code>init=/bin/bash</code></p><p>ctrl+x出去输入<code>mount -n -o remount,rw /</code>给根目录读写权限，然后输<code>passwd</code>改密码，然后<code>reboot</code>重启</p><p>看起来没什么问题了，隔了几个月也没滚炸（至少看起来没有）</p><h2 id="笔记本也换成manjaro了">笔记本也换成Manjaro了</h2><h3 id="安装-1">安装</h3><p>小破本是灵越7591，不太想用win10了，Dell家的大部分系列都完美兼容Ubuntu（国外出售的7590的还有个developer版的装的就是Ubuntu，比预装win10少了一点微软授权费，可惜国内没有）</p><p>看到他们好多用黑苹果，我的本子不是4k，就没上黑果。（黑果Nvida独显也用不了）</p><p>Manjaro看到别人装上去还不错，索性就装Manjaro了（除了麦克风和显卡的驱动有点小麻烦，其他的蓝牙wifi触控板键盘休眠一切正常）Archwiki上也有同系列7590的参考<a href="#fn4" class="footnote-ref" id="fnref4" role="doc-noteref"><sup>4</sup></a></p><p>BIOS里关secureboot，改raid on为AHIC（不装双系统可以忽略，双系统记得改AHIC不然win10会蓝屏卡在启动界面）</p><p>装完发现Manjaro 20居然添加了snap商店，这是要跟Canonical同流合污？（逐渐Ubuntu化</p><p>KDE桌面内存占用在700M左右，还行</p><p>Ubuntu的显卡和外接显示器对Dell的本子都配适的极好，有Dell官方担保，不想折腾可以直接上Ubuntu（这款海外版有的就是预装Ubuntu，双显卡解决方案应该是Prime）</p><h3 id="显卡驱动问题">显卡驱动问题</h3><p>不需要Nvida的卡就直接选free，装intel的核显就好了</p><p>想用Nvida的卡（好歹是一块1650ti不用太浪费了），装的时候Manjaro驱动选项可以直接选nofree，会自带</p><p>切换双显卡的配置可能导致看视频时卡成PPT，禁用硬件加速就好了，7591的丐版CPU硬解码也是带的动视频的（1080p没有任何问题）</p><h3 id="麦克风声卡配置">麦克风声卡配置</h3><p>之前7591的部分高通声卡驱动不行，麦克风用不了，后来有了一个开源的驱动<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3RoZXNvZnByb2plY3Qvc29m">Sound open firmware<i class="fa fa-external-link-alt"></i></span>，总归是能用了。</p><p>在linux kernel在5.6或以上，安装麦克风声卡驱动用的sof-firmware，可以解决声音和麦克风问题</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S sof-firmware<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后重启，我第二次重启后失效，喇叭和耳机都没有声音。按照wiki里面修改<code>/etc/modprobe.d/audio-fix.conf</code>(新建一个)，然后写一行</p><pre class="line-numbers language-config" data-language="config"><code class="language-config">options snd-intel-dspcfg dsp_driver&#x3D;1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>就行了。</p><p>或者在Grub的配置文件<code>/etc/default/grub</code>里设置</p><pre class="line-numbers language-config" data-language="config"><code class="language-config">snd-intel-dspcfg.dsp_driver&#x3D;1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>实在不行再试试内核参数(Kernel parameters)加上<code>snd_hda_intel.dmic_detect=0</code></p><p>当然，仅仅是能用。声音效果不是太好，虽然灵越inspiron 7591/7590/7501 系列的扬声器声音本来就不太好，但是放点陶笛和埙的曲子还是有种凄婉呜咽感的，linux下用了sof之后感觉像是喇叭声。以后就只适合拿这个听刀郎了。</p><p>还有一个问题就是有的时候休眠挂起后再打开就没声音了，需要重启才行。暂时没找到什么好的办法，这个毛病之前win10就有</p><h3 id="mm耳机没声音">3.5mm耳机没声音</h3><p>耳机孔没声音，wiki上的解决方案是</p><blockquote><p>In <code>pavucontrol</code>, try changing the Pulseaudio output profile from "Analog Stereo Output" to "Analog Stereo Duplex".</p></blockquote><p>系统语言调成中文的用户点开系统设置-》音频音量设置=》音频=》高级=》内置音频，选模拟立体双工。</p><p>是的，这样就能用了（请忽略这个全损音质，耳机传来声音的时候我甚至觉得我的索尼耳机是拼多多10块钱买的）</p><h3 id="耗电问题">耗电问题</h3><p>这个目前我倒是没什么感觉，我的7591是97w的大电池版本，最好的省电办法是不用GNOME，KDE的掉电速度比GNOME大概能慢一半，轻度使用六七个小时没有太大问题。（跟win10上10个小时比还是有差距）。</p><p>极致省电可以上i3wm和禁用独显，不过7591电池够大，不像游戏本一样分分钟没电，倒是没有必要。</p><p>还有就是降压，给CPU降个50-75mV，效果感人。（对性能影响也很小）</p><p>然后安装thermald和tlp并设置开机自启动（tlp有个图形界面可惜是gtk的并且还在beta版，不太KDE用户建议用）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S thermald tlpsystemctl <span class="token builtin class-name">enable</span> thermald tlp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>然后自行设置电池模式。</p><h3 id="散热">散热</h3><p>当然7591/7590更要命的显然是捉急的散热，重度使用建议降压、换散热贴硅脂散热条、垫橡皮垫都安排上。有个s-tui可以查看CPU温度。</p><h2 id="其他个人设置">其他个人设置</h2><h3 id="常用软件">常用软件</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># docker</span><span class="token function">sudo</span> pacman -S docker docker-compose<span class="token comment"># 设置开机自启</span><span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> docker<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="中英词典翻译和医学词典">中英词典翻译和医学词典</h4><p>这里我用的开源的GoldenDict配合离线和在线词典</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S goldendict<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>下载医学词典和英文词典，体验还是不错的，想要翻译功能可以添加有道和谷歌翻译</p><h3 id="博客搬迁">博客搬迁</h3><p>先装node.js（这里我装的12的lts版）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> pacman -Sy nodejs-lts-erbium<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后从github拉取自己的博客备份repo</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/archaeoraptor/blog.git blog<span class="token builtin class-name">cd</span> blog<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>另外我用的hexo-renderer-pandoc插件，这个插件要先装pandoc（不然会报错）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S pandoc<span class="token function">npm</span> <span class="token function">install</span><span class="token function">git</span> clone https://github.com/next-theme/hexo-theme-next.git themes/nexthexo g <span class="token operator">&amp;&amp;</span> hexo s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="windows软件解决方案">windows软件解决方案</h3><p>装wine体验还是不太好，虚拟机装个win7上跑qq和word，反正7591能加内存，加到32G就完事了，还不够就加64G（是的，这个系列支持64G内存，虽然说明书上写的只支持到32G）</p><h3 id="网上冲浪-1">网上冲浪</h3><p>qv2ray还不错，electron-ssr装上v2ray插件也不错，但是electron内存占用太高了。喜欢web版的还有一个v2raya可以用。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yay -S qv2ray<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>装wireguard</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S wireguard-tools wireguard-dkms<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果用机场的话，可以装个clash，然后配置开机自启和规则（那个win版clash的图形界面真的反直觉反人类，相当难受，clashy也没好到哪去），貌似也支持套个tun/tap用来全局代理(似乎并不怎么好用)</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> pacman -S clash<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>可以配置systemd让clash开机自启，<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0RyZWFtYWNyby9jbGFzaC93aWtpL2NsYXNoLWFzLWEtZGFlbW9u">wiki<i class="fa fa-external-link-alt"></i></span>上还提供了docker-compose和pm2的方法(配置文件放在<code>~/.config/clash</code> )。(貌似pm2方便一点？尤其是装了nodejs的话，不过clash是go开发的官方推荐docker，不过docker和pm2要开机自启还是得用systemd)</p><p>上个月发布的clash1.0版本是和老版本不兼容的<a href="#fn5" class="footnote-ref" id="fnref5" role="doc-noteref"><sup>5</sup></a>，AUR里打包的clash是不兼容的，所以要手动修改yml文件或者自己编译老版本的clash</p><blockquote><p><code>Proxy</code>, <code>Proxy Group</code> and <code>Rule</code> is no longer used. They are now respectively <code>proxies</code>, <code>proxy-groups</code> and `rules</p></blockquote><p>(修改的话一般只要修改<code>Proxy</code>, <code>Proxy Group</code> and <code>Rule</code> 这三个参数为<code>proxies</code>, <code>proxy-groups</code> and `rules就行了)</p><p>设置完成后重启网络服务</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl restart systemd-networkd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="中英文和字体设置">中英文和字体设置</h3><h4 id="把桌面文件夹改回英文">把桌面文件夹改回英文</h4><p>这里我用的<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0dOT01FL3hkZy11c2VyLWRpcnMtZ3Rr">xdg-user-dirs-gtk<i class="fa fa-external-link-alt"></i></span>，GNOME出品，KDE上也能用</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> pacman -Sy xdg-user-dirs-gtk<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">LANG</span></span><span class="token operator">=</span>en_USxdg-user-dirs-gtk-update<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>然后想把LANG变量调回中文的可以再调回来</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">LANG</span></span><span class="token operator">=</span>zh_CN.UTF-8<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果你用Dolphin文件夹管理器，你要把那几个桌面、文档、下载的路径在编辑里面手动改成英文</p><h4 id="tty中文不显示">tty中文不显示</h4><p>装点字体就好了，或者直接把全局的LANG=en.US</p><h4 id="复门等字体显示日文">复门等字体显示日文</h4><p>最简单的做法是把系统装的语言包卸载了，只装中文字体包,见<span class="exturl" data-url="aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvaW5kZXgucGhwL0xvY2FsaXphdGlvbl8oJUU3JUFFJTgwJUU0JUJEJTkzJUU0JUI4JUFEJUU2JTk2JTg3KS9TaW1wbGlmaWVkX0NoaW5lc2VfKCVFNyVBRSU4MCVFNCVCRCU5MyVFNCVCOCVBRCVFNiU5NiU4Nyk=">Localization<i class="fa fa-external-link-alt"></i></span>。</p><p>或者在<code>\etc\locale.conf</code>加上<code>LANG=zh_CN.UTF-8</code></p><p>然后刷新字体缓存。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">fc-cache -fv<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="注">注</h2><section class="footnotes" role="doc-endnotes"><hr /><ol><li id="fn1" role="doc-endnote"><p>https://wiki.archlinux.org/index.php/AUR_helpers<a href="#fnref1" class="footnote-back" role="doc-backlink">↩︎</a></p></li><li id="fn2" role="doc-endnote"><p>https://github.com/Jguer/yay<a href="#fnref2" class="footnote-back" role="doc-backlink">↩︎</a></p></li><li id="fn3" role="doc-endnote"><p>https://aur.archlinux.org/packages/v2raya<a href="#fnref3" class="footnote-back" role="doc-backlink">↩︎</a></p></li><li id="fn4" role="doc-endnote"><p>https://wiki.archlinux.org/index.php/Dell_Inspiron_15_(7590)<a href="#fnref4" class="footnote-back" role="doc-backlink">↩︎</a></p></li><li id="fn5" role="doc-endnote"><p>https://github.com/Dreamacro/clash/wiki/Breaking-Changes-in-1.0.0<a href="#fnref5" class="footnote-back" role="doc-backlink">↩︎</a></p></li></ol></section>]]></content>
    
    
    <summary type="html">&lt;p&gt;本来我是想装个双系统的，但是想起教研室还有两个老主机，那就.....</summary>
    
    
    
    <category term="不务正业系列" scheme="https://zhangjk98.xyz/categories/%E4%B8%8D%E5%8A%A1%E6%AD%A3%E4%B8%9A%E7%B3%BB%E5%88%97/"/>
    
    
    <category term="manjaro" scheme="https://zhangjk98.xyz/tags/manjaro/"/>
    
  </entry>
  
  <entry>
    <title>写在被消灭的路上</title>
    <link href="https://zhangjk98.xyz/aa1c/"/>
    <id>https://zhangjk98.xyz/aa1c/</id>
    <published>2019-12-26T11:40:05.000Z</published>
    <updated>2019-12-26T11:40:05.000Z</updated>
    
    <content type="html"><![CDATA[<p>庚子年，格外的长 <a id="more"></a></p><p>谶言里庚子年破事可不少，现在全世界都看起来不太平，暗流涌动。就不睁眼说瞎话搞些新年大吉之类的玩意了。</p><h2 id="庚子鼠年计划">庚子鼠年计划</h2><p>还记得当年的梦想吗，不仅天涯变了，新浪搜狐变了，谷歌也免不了（也许没变，当年才是装的）。看了一圈，真诚可爱的反而就是花姐王垠之流。</p><figure><img src="/aa1c/google.jpg" alt="当年" /><figcaption aria-hidden="true">当年</figcaption></figure><p>唯见日寒月暖，来煎人寿</p><blockquote><p>十年的经历教会了我很多，但不免也有许多被浪费的时间和精力，值得我反思和总结。总的看来，我并没有比其他人做得更差。很多 IT 人终其一生也没有学会什么新东西，很多人为了保住自己的饭碗，写出面条一样扭曲，别人不敢碰的代码。转岗做管理也是各种瞎指挥，看其他人眼色行事，一切为了“站对了队”，为了混到更高的位置。</p></blockquote><p>我现在在勃八本的劝退专业搬着没什么用的砖，搞着骗钱的垃圾项目划水摸鱼制造垃圾写bug，惭愧</p><p>本来我还是想做一点事情的，现在发现不如划水去搞点有意思的</p><div class="note success"><h3 id="看看范畴论矩阵代数">看看范畴论、矩阵代数</h3><p>大一大二那会不听课，埋头啃高代数分数理方程看朗道，试图啃过近世代数，没啃动 现在一年没怎么推公式，发现已经不如之前了，我怕不是要老了。 有些东西，三四十岁再学就学不动了</p></div><div class="note success"><h3 id="看看csapp等书">看看CSAPP等书</h3><p>补一补你电只讲名词概念浪费生命的微嵌课欠下的债</p></div><div class="note success"><h3 id="学一点数据库和javascript">学一点数据库和javascript</h3><p>之前打算</p></div><div class="note success"><h3 id="把立下的flag和挖的坑填了">把立下的Flag和挖的坑填了</h3><p>填不了就扔到2021年，反正那个时候我就要被消灭了，不用填了</p></div><div class="note danger"><h3 id="扑杀入侵物种">扑杀入侵物种</h3><p>包括不限于流浪猫、流浪狗、红耳龟、福寿螺、克氏原螯虾</p></div><h2 id="近况">近况</h2><p>最近闲了一点，把博客的评论换成了utteranc, 把mathjax换成了katex 试了试Hugo，速度确实快，也没有nodejs这么多依赖问题，但是颜值平均比Hexo低两层楼，Hexo那些插件也没有好的替代和移植。 也没有在Hugo里面找到一个Next这样令我喜欢并且一直维护的主题，只看到一个hugo-book的主题，替代gitbook做文档应该不错，gitbook的生成速度是真的慢。。。 （不过这个快是生成速度啊，整个网站的加载速度跟这个也没有太大关系，也就在写很长很多的内容的时候有，静态博客还是得看效果啊，生成速度再快有什么用呢） ps：终于知道为什么有的人用Jekyll、Hexo、gitbook非要整个CI了，有的内容多了生成速度确实慢啊，动不动几十分钟一小时没了。Hugo的速度让这些都没了必要，我也没看到多少这么搞的（Hugo用户运维和后端开发的比例可比Hexo那些高多了）。（Hugo性能也不错，直接用hugo的server跑在服务器都行，不用Nginx之类的完全没问题。</p><p>元旦在沙河边转着玩，又看到沙河有一群大妈拿着七八个桶直接倾倒鱼和小龙虾（对，就是那个<del>著名</del>入侵物种克氏原螯虾）。这几天网上冲浪又看到日人民报等辣鸡营销号消费过世白鲟，还纷纷把图配成匙吻鲟，心里不是滋味。长江流域基本也凉的差不多了，当年葛洲坝一建，白鲟中华鲟达氏鲟就凉了一半，挖沙和万安水库和富春江水电站也把最后的鲥鱼搞没了。鄱阳湖要是再乱搞，江豚基本也要凉透了（虽然不乱搞也要凉透了，时间问题，无力回天）。那些数不清名字的小鱼就更惨了，好多两个图片和影像都没留下</p><p>哦，对了，前几年长江养殖逃逸了大量杂交鲟，中华鲟和达氏鲟野生种群基本就废了</p><p>寡鳞鱊重现江湖的奇迹可能再也不会有了。</p><blockquote><p>千斤魶子万斤象，黄排大了不像样</p></blockquote><figure><img src="baixun.jpg" alt="白鲟" /><figcaption aria-hidden="true">白鲟</figcaption></figure><p>就现在这样子，不仅斑鳖要上路，鼋八成也保不住；不仅白鱀豚没了，江豚（窄脊江豚长江江豚亚种<em>N. a. asiaeorientalis</em>）也迟早凉。 斑鳖在某动物园的惨状大家应该都知道了，鼋也好不到哪去（国内的龟鳖都好不到哪去） &gt;鼋，到现在，都没有一个像样的保护区。也就是说，救助团体一直是民间（或挂靠）开展的。某保护区我就不点名了，有文件，一直不施工，民间捐的俩成体鼋一直养在水泥池子里……</p><p>最近被骂的<span class="exturl" data-url="aHR0cHM6Ly93ZWliby5jb20vNTAyMTAzNjc4Ni9JbkIxUmZrQkU=">扎龙保护区<i class="fa fa-external-link-alt"></i></span>也是打着保护的旗号干缺德事呢，对了，前几年的鄱阳湖水利枢纽工程也是打着环保的旗号。好多湿地绿化和荒漠绿化都是把原来好好的灌木草地沼泽全种成整齐划一的树，哇，这破坏生态的绿色荒漠算政绩呢 这里全文转载流年消年少同学的一篇旧文：从鄱阳湖水利枢纽工程看看党的千秋伟业</p><div class="note info"><blockquote><p>逆天改命，非以倾国之力而不能为</p></blockquote><p>​​​ 2016年底，微博上因为江西省水利厅一篇《 鄱阳湖水利枢纽环评 请你提建议》的公告引发了不小的风波。无疑这个举动将会对鄱阳湖生态环境造成巨大的负面影响，濒危的长江江豚、白鹤也将为此陷入灭绝的境地，那为什他们会出此下策呢？前几天与老师朋友讨论这个事情，个中缘由可能真的不简单。</p><p>下面都是胡说八道，大家请勿轻信 我们先看看好端端的鄱阳湖​为什么会见底？没错，因为我党的两项“千秋伟业”。 目前，中国两大世纪水利工程——三峡工程早已完成、南水北调工程东线刚刚正通水，中线已经贯通，西线还未开工中。对于如此重大的工程，一直有颇多争议，如修建三峡时，反对意见也非常强烈。三峡建成后，是否会引发干旱、地震等自然灾害都成为了人们热议的焦点。而奇怪的是，南水北调工程几乎没有专家反对，顺利开工建成。对南水北调的质疑也远远不如三峡工程。这是很令人奇怪的地方 多年前，一位旅居德国的国土专家王维洛为就揭底了南水北调和三峡，个中缘由触目惊心。 前几年长江中下游缺水缺得很厉害。从浙江、安徽、江西、湖南和湖北都缺水，特别是湖北省缺水缺的厉害。国内报导是说，湖北的水库都已底朝天，没水了，洪水浪打浪也没浪了。洪湖水也就剩几十厘米深。根本原因是因为湖北省担任了中国两个最大的工程—三峡和南水北调工程。其实这两个工程是一个姐妹工程，密不分，南水北调中线方案的源头工程，就是三峡的水源工程。三峡工程问题突出的原因，并非像国内宣传的那样是什么三峡派海外黑手搞的，其实是国内地方对中央矛盾所引起的。因为干旱现象在湖北和江西已非常突出了。 三峡工程干旱问题的治理，首先是江西省在13年提出来的，是省水利厅一些技术人员要搞鄱阳湖拦水大坝工程。为什么要建这个工程？是因为三峡大坝影响了鄱湖的蓄水，这么引出来的。 2013年的干旱，是当时专家预计的2030年要出现的，那么现在2011年就出现了。而且缺的很厉害，也不像人们说的南方水多，长江流域也将进入枯水，中下游缺缺的很厉害，尤其是湖北省。当时的湖北所有水库几乎是底朝天了。就是南水北调中线工程源头的水库—丹江河水库水位已降到死水位，没有水可以向外排放了。以当时湖北省要求三峡水库赶紧放水。如果当时三峡工程放水的话，就可以看到一个相当可怕的过程，就是说三峡把每天放3000至5000多立方米的水，但是水到湖北地区马上就被抽上去。 鄱阳湖快干枯江西省受不了，为什么？因为中国的抽水工程太厉害了，水泵太厉害了，把长江的水都抽到支流里去了。所以主流水位越往下游水量越少。所以人为自然干涉情况已到了很严重的地步。这种干旱情况未来还会重复出现，而且未来在用水问题上的矛盾还会更尖锐。 南水北调的是中线方案，是指从三峡把水调过去，而不是在丹江口把水调过去。要在三峡把洪水卡住，把三峡的水调到北方去。 长江在历史上流量最小时就有3000多立方/每秒，而黄河平均也就几百立方/每秒，两条河相差很多。长江平均年流量每秒是一万多立方。洪水期流量更大，千年遇的洪水流量大概是九万多立方/每秒，万年一遇的洪水流量是十一万多立方/每秒。如果回到长江的原始状态，其出海口是个湖，湖面宽是20多公里。唐诗中：“帆远影碧空尽，唯见长江天际流”，你会看到那是一条很宽广的河。所以在历史上说长江洪灾很少，而说黄河洪灾的记录就比较多。因为长江下游的蓄水能力很大所以洪水灾害比较小。所以现在长江水位少，而抽水就形成了湖北抽水，湖南就没有多少水可抽，那江西就更受不了，因为水位更低，所以鄱阳湖就像长江的水保住了，因此江西省闹得就特别厉害。 南水北调和三峡里面太多荒唐的东西了，建国以来中国的水利就是在玩水。它根本就不尊重自然规律，想把水折腾到哪儿就折腾到那儿。其实如果中国真的要调水就应该使用地下暗管，就像输油管道一样，埋在地下，又能省地、又没有风险，还能避免人家抢水，能保证进京的水。可是领导人必须让他的功绩让老百姓看得见还得让天上的卫星能够拍得到，比方说隋炀帝修的大运河还留在那儿，南水北调的工程是XXX搞的，三峡工程是XXX的，留在那儿的。 除了领导人，知识分子也是很聪明的，他们是有学习能力的。看看三峡工程中在最后报告上签字的那些专家们，最后都成了工程院和科学院的院士，成了对国家有献的特殊专家和院士，得了这个奖那个奖。你再看那看看那九位没有签名的专家，他们的水平绝对在签了字的人之上，但是没有一个人成为院士。中国的知识份子名利都看得很重，这也不是他们的错。这些还想进入科学最高殿堂的知识份子，他们在三峡工程的学习过程中，知道还是不说的好，说了也没有用。 因为他们的想是步入殿堂，如果他们说了的话，现在很可能连一个科研的题目、科研经费都拿不到。就像黄万里一样，给三峡工程写了那么多的论文，他有一分钱的科研经吗？他从朝廷拿了一分钱的科研经费吗？没有。 所以说，三峡工程在中国的学术界造成了一个很坏的影响，开了一个很坏的先例，后边的人知道了，尽管不是像当初那样被打成右派，可他把你打成另类，没有科经费，那你怎么办！你想当院士，没门。所以他们就不说了。我们一直在玩水的专家学者们，竟忘了一个最浅显的道理：水是从高往低流的，真乃一大黑色幽默。 当一件事，光有赞成而没有批评意见时，这件事错误的可能性很大。当三峡工程和南水北调工程只剩下一位黄万里先生，像唐吉珂德一样批评时，就注定了。 所以，鄱阳湖的现状就是这样， 不建大坝，江西无水可用；建了大坝，毁了白鹤和江豚栖息地。人与自然，在我朝一直就不是可以和谐发展的。 大家都知道这两项伟业贻害万年，谁又敢反对呢？ 民众反对--有个屁用，实在不行给你扣个反贼帽子你试试。地方官员反对--除非你想断送大好前途，呵呵。专学者反对--呵呵，当政者反对--否定前辈路线，自扇耳光。所以，这是一个很现实，也很魔幻的中国特色的伟业。 ~最后，祝伟大祖国繁荣昌盛，千秋万代！</p></div><p>十年之前，我还在上两江，那时候两江很热闹，现在两江也还开着（这里感谢饿老大，坚守到现在不容易）</p><p>在成都的河里湖里随便找找，能看到什么呢，满地食蚊红耳龟福寿螺罗非小龙虾，再找找才能看到点子陵和吸鳅爬鳅之类的，唉</p><blockquote class="blockquote-center"><p>Repair what you can — but when you must fail,fail noisily and as soon as possible.</p></blockquote><p>不知巴拉水电站能否被拦下马，留给川陕哲罗鲑的时间不多了</p><p>十年前，小南海水电站，下马了</p><p><span class="exturl" data-url="aHR0cDovL2NxaDJvLmNvbS9mb3J1bS5waHA/bW9kPXZpZXd0aHJlYWQmYW1wO3RpZD0zMzUxMQ==">坚决反对修建小南海水电站<i class="fa fa-external-link-alt"></i></span></p><p>也罢</p><figure><img src="/aa1c/old.jpg" alt="道子搜山" /><figcaption aria-hidden="true">道子搜山</figcaption></figure><blockquote class="blockquote-center"><p>君不见，高堂明镜悲白发，朝如青丝暮成雪</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;庚子年，格外的长</summary>
    
    
    
    <category term="彼黍离离" scheme="https://zhangjk98.xyz/categories/%E5%BD%BC%E9%BB%8D%E7%A6%BB%E7%A6%BB/"/>
    
    
    <category term="2020" scheme="https://zhangjk98.xyz/tags/2020/"/>
    
  </entry>
  
  <entry>
    <title>也谈心率变异性</title>
    <link href="https://zhangjk98.xyz/2873/"/>
    <id>https://zhangjk98.xyz/2873/</id>
    <published>2019-12-26T04:25:12.000Z</published>
    <updated>2019-12-26T04:25:12.000Z</updated>
    
    <content type="html"><![CDATA[<p>等待填坑 <a id="more"></a></p><h2 id="采集">采集</h2><p>HRV测定的是NN间期(在正常的窦性心律时就是RR间期)的波动，主要与自主神经调控机制有关。标准的HRV根据正常窦性搏动的NN间期得出的（正常对正常间期，normal-to-normal,<em>NN</em> intervals，即由窦房结除极所致相邻QRS波群之间的所有间期）的变化来表示心率的变异性。</p><p><img src="heart-rate-varibility/201804091523323502.png" alt="提取心率变异性" style="zoom: 67%;" /></p><h3 id="心电ecg">心电（ECG）</h3><p>可以从心电图中直接提取R波尖峰并将RR间期的值用于心率变异性分析</p><h3 id="心冲击图bcg">心冲击图（BCG）</h3><p>心冲击图去除呼吸和活动的干扰后提取JJ间期时间计算心率变异</p><h3 id="光电容积图ppg">光电容积图（PPG）</h3><p>目前市面上主要的脉搏波测量方法是光电容积脉搏波描记法（photoplethysmography），用光电传感器检测光经过人体的反射和衰减转换成电信号后得到，包括Apple Waltch等手环产品，用光电容积法检测血氧、心率、心率变异性等生理参数。</p><figure><img src="/2873/figure-1-optical-heart-rate-sensing.jpg" alt="光电容积法原理" /><figcaption aria-hidden="true">光电容积法原理</figcaption></figure><p>PPG法采集到的脉搏波经过去噪和整流等处理后提取PP间期可以计算心率变异。</p><h4 id="远程光电容积扫描">远程光电容积扫描</h4><p>（rPPG，remote PPG）是一种新的方法，只要高清摄像头检测光线变化，真正的无创非接触。</p><p>但是这种方法成本高，易受到运动和光线变化的干扰。目前这个领域比较热门，进展也很快。一些补偿和增强鲁棒性的方法包括全局和局部运动跟踪和独立成分分析等。</p><p>现在此类研究缺乏可靠的公开数据集支持，现有研究大多采用MAHNOB-HCI和DEAP等用于活体识别和情感识别的公开数据集和私有数据集。</p><figure><img src="/2873/figure-3-overview-hr-and-hrv.jpg" alt="rPPG-HRV" /><figcaption aria-hidden="true">rPPG-HRV</figcaption></figure><h2 id="产生机理和影响因素">产生机理和影响因素</h2><figure><img src="/2873/示意图.png" alt="示意图" /><figcaption aria-hidden="true">示意图</figcaption></figure><blockquote><p>HRV反映的是自主神经和非自主神经系统所有反馈回路极其复杂的非线性交互作用。自主神经系统是窦性节律条件下心率的主要调节机制。</p></blockquote><p>忽略微小的影响，HRV的高频部分主要受迷走神经的调节，低频部分受到迷走和交感神经的双重作用。</p><p><img src="/2873/nero2.jpg" /></p><blockquote><p>交感神经增强自律性，而副交感神经抑制自律性。交感神经通过增加起搏点去极化程度产生变时性作用，而对心脏起搏点细胞的迷走刺激会引起超极化而降低去极化程度。自主神经的这两个分支均影响与心脏起搏细胞去极化相关的离子通道的活动。</p></blockquote><p>被测者的体位也会显著影响HRV，多数人处于仰卧位时，副交感神经活动明显增强。</p><p>在突然站立或倾斜时，压力反射活动也会引起心率的同步波动。</p><p>在24小时HRV中，白天交感神经活动相对增强，心率较快，而夜间迷走神经活动增强，心率较慢。正常睡眠时，生理活动也随每个睡眠周期(约90分钟)而呈现明显节律。</p><p>精神情绪的波动也会影响HRV，和迷走神经和交感神经系统的兴奋性有关。</p><p><img src="heart-rate-varibility/image-20191225214555467.png" alt="image-20191225214555467" style="zoom:50%;" /></p><p>此外，非自主神经因素(如神经内分泌功能)也会影响HRV。</p><p>心率变异性也和年龄、性别等因素有关。</p><h2 id="主要指标和数据分析">主要指标和数据分析</h2><h3 id="时域特征">时域特征</h3><p>医学上通常要求5分钟以上的的HRV做短时分析，但是有研究表明30s内的HF和LF和5分钟的没有太大区别，应用是可以进一步缩短检测时间。</p><ul><li><p>SDNN(ms)：NN间期(正常RR间期)的标准差(5分钟)</p></li><li><p>SDANN(ms)：NN间期(正常RR间期)的标准差（24小时）</p></li><li><p>pNN50：相邻NN间期相差&gt;50ms的数量占总心搏数的百 分比</p></li><li><p>rMSSD(ms)：相邻NN间期差值的均方根</p></li></ul><p>rMSSD反映每搏NN间期变化的平均绝对值，对不规律心搏和/或心搏波形标记错误的敏感性也很高。</p><p>24小时记录得到的SDANN值低下表明缺乏昼夜节律。</p><h3 id="频域特征">频域特征</h3><ul><li><p>总功率（TP）：频段≤0. 4Hz。</p></li><li><p>超低频功率（ULF）：频段≤ 0. 003Hz。</p></li><li><p>极低频功率（VLF）：频段 0. 003~0. 04Hz。</p></li><li><p>低频功率（LF）：频段 0. 04~0. 15Hz。</p></li><li><p>高频功率（HF）：频段 0. 15~0. 4Hz。</p></li><li><p>LF/HF: 低频功率和高频功率的比值</p></li></ul><p>LF反映副交感传出神经(迷走神经)和交感传出神经系统活性的综合调节</p><p>HF反映副交感传出神经(迷走神经)活动的调节</p><h3 id="非线性分析">非线性分析</h3><h4 id="动态心电图holter-monitor">动态心电图（Holter monitor）</h4><p>持续记录24小时或更久（几个月或一年以上）的长时间心电图数据，主要用来检测心律失常或传导异常和晕厥或晕厥前兆。</p><p><span class="math inline">\(a\dot{b}c\)</span></p><h5 id="洛伦兹散点图">洛伦兹散点图</h5><p><img src="heart-rate-varibility/201804091524569747.png" alt="img" style="zoom:80%;" /></p><p>把前1个心动周期长度（ms）定为横坐标、后1个心动周期长度（ms）定为纵坐标，即可在直角坐标系中确定一点。这样一个点就由3个QRS波（R波）、2个RR间期决定。第1个RR间期R1R2和第2个RR间期R2R3为第1个点，第2个RR间期R2R3和第3个RR间期R3R4为第2个点，依次类推，从R1 -&gt; Rn作图就可得到 n-2 个点，绘制心率散点图（洛伦兹散点图，Lorenz Plot），判断窦性心率、室上性和室性心率失常。正常窦性心律呈彗星状，心衰、房颤等症状会出现不同的散点图。窦性心律沿45°线分布，呈彗星状</p><p><img src="heart-rate-varibility/image-20191224202624859.png" alt="室性早搏" style="zoom: 67%;" /></p><p><img src="heart-rate-varibility/image-20191224202756257.png" alt="房性早搏" style="zoom: 67%;" /></p><p>散点图可用于：</p><p>评价心率波动范围（散点图的位置分布）</p><p>评价自主神经调节（长轴）</p><p>评价心率变异（短轴）</p><p>诊断心律失常（散点图的形态）</p><h5 id="差值散点图">差值散点图</h5><p>首先对序列 <span class="math inline">\(RiR_{i+1}\)</span> 做一阶差分, 得到序列 <span class="math inline">\(d_j ,j=1,2,\dots N-1\)</span> 然后以 <span class="math inline">\((d_j, d_{j+1})\)</span> 为坐标绘制散点图（Poincaré散点图）。差值散点图反映了RR间期差值的离散度 ,对连续RR间期的变化十分敏感。</p><p>首先对序列<span class="math inline">\(R_iR_{i\times1}\)</span>做一阶差分, 得到序列 <span class="math inline">\(d_j,j=1,2,\dots N-1\)</span> 然后以 <span class="math inline">\((d_j, d_{j+1})\)</span> 为坐标绘制散点图（Poincaré散点图）。差值散点图反映了RR间期差值的离散度 ,对连续RR间期的变化十分敏感。</p><figure><img src="/2873/image-20191225111057030.png" alt="健康人和CHF患者的散点图" /><figcaption aria-hidden="true">健康人和CHF患者的散点图</figcaption></figure><h5 id="三维散点图">三维散点图</h5><p>三维散点图的一些意义还不明确，医院里实际用的也很少 <img src="/2873/3D-scatter-plot.png" alt="心率变异性三维散点图" /></p><h5 id="心率震荡hrt">心率震荡（HRT）</h5><p>心率震荡（heart rate turbulence）是指发生室性早搏后，窦性心律出现短暂的加速和减速的过程。检测HRT异常有助于预测自主神经功能障碍以及心血管事件的风险增加。</p><p>分析HRT通常需要24小时HRV动态心电图，主要有震荡初始(turbulence onset, TO)和震荡斜率(turbulence slope, TS)两个指标。</p><h2 id="临床价值和应用">临床价值和应用</h2><h3 id="心肌梗死死亡率预测">心肌梗死死亡率预测</h3><p>心梗后早期(14日内)，若检测到患者的HRV指标降低，则心梗后3年内的死亡风险增至3-4倍。</p><h3 id="心力衰竭">心力衰竭</h3><p>已知就预后而言，HRV降低是总体死亡、心力衰竭死亡、心脏性猝死、室性心律失常和心脏移植的 独立预测指标</p><h3 id="评估自主神经病变">评估自主神经病变</h3><p>HRV明显降低或缺失可以作为辅助指标。</p><h3 id="冠心病">冠心病</h3><p>冠心病患者的HRV显著降低,且与冠状动脉病变支数及狭窄程度呈负相关,但与冠状动脉病变部位无关。</p><h3 id="检测精神压力">检测精神压力</h3><p>短时HRV变化可用于辅助检测精神压力</p><p>迷走神经的冲动传导频率受呼吸频率和深度的调节而呈现节律性波动，呼吸性窦性心律不齐(respiratory sinus arrhythmia, RSA)。在有节奏的呼吸或冥想时，RSA可被放大。</p><h3 id="评估体育表现">评估体育表现</h3><p>可以作为推测无氧阈的较为精确的指标之一</p><blockquote><p>注意 在运动评估中一般只有要求无伤等才会首先考虑HRV，一般是用血清肌酸激酶(CK)、血清睾酮(T)、血红蛋白、乳酸等</p></blockquote><h3 id="监测训练负荷及诊断运动性疲劳">监测训练负荷及诊断运动性疲劳</h3><p>交感一副交感神经张力的平衡会随着运动强度的改变而波</p><h3 id="运动康复医学领域">运动康复医学领域</h3><p>用于自主神经功能改善的评估</p><h3 id="睡眠分期">睡眠分期</h3><p>略</p><h2 id="其他">其他</h2><h3 id="呼吸和心率变异性">呼吸和心率变异性</h3><h4 id="bcg信号中的呼吸信息">BCG信号中的呼吸信息</h4><p>在采集到的BCG信号中，会包含呼吸信息，提取心率变异性通常要去除呼吸的干扰。</p><p>但是在一些利用HRV进一步分析情绪、压力、睡眠分期的时候，可以考虑保留部分呼吸特征并将呼吸特征纳入到检测和分类中，有时可以提高检测的准确率。</p><p>在心率变异性分析中纳入呼吸频率信息以进行压力评估</p><h4 id="呼吸变异性">呼吸变异性</h4><p>呼吸频率变异性(Respiratory Rate Variability，RRV, 有的地方也叫Breath Rate Variability），和心率变异性一样反映了一些生理特征，但是这种非电信号采集难，噪声大，不规律，包含的信息也比心电和脉搏波等信号少。除了</p><p>目前对于RRV的研究比较少，也很少有人用这个特征做睡眠分期检测、疲劳压力检测或睡眠呼吸暂停的检测。一些使用雷达等手段检测疲劳或者睡眠的研究将这项指标作为判断依据。雷达和监控视频等可以在较近的距离探测人体呼吸活动和心率，但是这样采集分离出的心动信息用作睡眠和疲劳监测不如直接采集呼吸和运动的信息进行分析。对于体重指数（body mass index ）过高的的超重人群、较复杂的干扰和活动等情景，使用雷达等方式检测压力或疲劳时HRV准确率大幅降低，从心动信息检测不如直接从呼吸信息检测。在这些场景下会使用呼吸和体动信息来作为指标。</p><h2 id="数据和软件">数据和软件</h2><ol type="1"><li><span class="exturl" data-url="aHR0cHM6Ly93d3cua3ViaW9zLmNvbS9ocnYtc3RhbmRhcmQv">https://www.kubios.com/hrv-standard/<i class="fa fa-external-link-alt"></i></span> 免费的HRV分析软件</li><li><span class="exturl" data-url="aHR0cHM6Ly93d3cucGh5c2lvbmV0Lm9yZy8jbGF0ZXN0">https://www.physionet.org/#latest<i class="fa fa-external-link-alt"></i></span> 心电图数据</li><li><span class="exturl" data-url="aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1EX0tZdjdwWEF2UQ==">https://www.youtube.com/watch?v=D_KYv7pXAvQ<i class="fa fa-external-link-alt"></i></span> rPPG检测心率</li><li><span class="exturl" data-url="aHR0cHM6Ly9weXBpLm9yZy9wcm9qZWN0L2JvYi5ycHBnLmJhc2Uv">https://pypi.org/project/bob.rppg.base/<i class="fa fa-external-link-alt"></i></span> rPPG的开源库，数据集MAHNOB-HCI和DEAP</li><li><span class="exturl" data-url="aHR0cHM6Ly93d3cuaHJ2NHRyYWluaW5nLmNvbS8=">https://www.hrv4training.com/<i class="fa fa-external-link-alt"></i></span> 一个用蓝牙测HRV的APP，准确率貌似还可以</li><li><span class="exturl" data-url="aHR0cHM6Ly93d3cuZmlyc3RiZWF0LmNvbS9lbi9maXJzdGJlYXQtaHJ2LXN1bW1pdC0yMDE5Lw==">Firstbeat HRV Summit<i class="fa fa-external-link-alt"></i></span> Firstbeat公司的HRV峰会，一些商用搞的比较好的东西</li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;等待填坑</summary>
    
    
    
    <category term="102网吧日常" scheme="https://zhangjk98.xyz/categories/102%E7%BD%91%E5%90%A7%E6%97%A5%E5%B8%B8/"/>
    
    
    <category term="HRV" scheme="https://zhangjk98.xyz/tags/HRV/"/>
    
    <category term="BCG" scheme="https://zhangjk98.xyz/tags/BCG/"/>
    
  </entry>
  
  <entry>
    <title>试图抢救吃灰的树莓派</title>
    <link href="https://zhangjk98.xyz/7042/"/>
    <id>https://zhangjk98.xyz/7042/</id>
    <published>2019-12-07T11:52:23.000Z</published>
    <updated>2019-12-07T11:52:23.000Z</updated>
    
    <content type="html"><![CDATA[<p><span class="math display"><mjx-container class="MathJax" jax="SVG" display="true" width="full" style="min-width: 11.529ex"><svg style="vertical-align: -1.753ex; min-width: 11.529ex" xmlns="http://www.w3.org/2000/svg" width="100%" height="4.638ex" role="img" focusable="false"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0) scale(0.0181) translate(0, -1275)"><g data-mml-node="math"><g data-mml-node="mtable" transform="translate(2078, 0) translate(-2078, 0)"><g transform="translate(0 1275) matrix(1 0 0 -1 0 0) scale(55.25)"><svg data-table="true" preserveAspectRatio="xMidYMid" viewBox="470 -1275 1 2050"><g transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="mlabeledtr" transform="translate(0, -67)"><g data-mml-node="mtd"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(220, 676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mn" transform="translate(220, -686)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g><rect width="700" height="60" x="120" y="220"></rect></g></g></g></g></svg><svg data-labels="true" preserveAspectRatio="xMaxYMid" viewBox="1278 -1275 1 2050"><g data-labels="true" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="mtd" id="mjx-eqn-1" transform="translate(0, -67)"><g data-mml-node="mtext"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" transform="translate(389, 0)"></path><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" transform="translate(889, 0)"></path></g></g></g></svg></g></g></g></g></svg></mjx-container></span></p><p>自从来到沙河102网吧，都是在工作站/服务器/台式机上折腾，树莓派一直仍在清水河宿舍吃灰。今天回了趟清水河，把树莓派拿回来，试试能不能用，打算做备用测试机了。 <a id="more"></a></p><h2 id="装系统">装系统</h2><p>从官网下载<a href="#fn1" class="footnote-ref" id="fnref1" role="doc-noteref"><sup>1</sup></a>, 我下的Raspbian Buster（SD卡就只有16G，不打算搞那些recommend software了），解压之后已经是3.56G了</p><p>然后用Rufus烧进SD卡（很多教程全是推荐Win32Diskimager，那个并没有Rufus好用），只选第一行的目标设备和第二行引导镜像，其他默认（卡里之前有东西的话还是用SD Formatter先刷一遍）</p><p>2020.3 更新</p><p>貌似树莓派官方出了一个写入SD卡的<span class="exturl" data-url="aHR0cHM6Ly93d3cucmFzcGJlcnJ5cGkub3JnL2Jsb2cvcmFzcGJlcnJ5LXBpLWltYWdlci1pbWFnaW5nLXV0aWxpdHkv">工具<i class="fa fa-external-link-alt"></i></span>，可以去试试</p><p>然后将SD卡查到卡槽里，再把显示器接上（我工位上的ROC显示器有HDMI接口和电源, 终于不用无显示器安装拿个笔记本上来就SSH折腾了）</p><p>不行，搜了一下看到config.txt文件里有</p><pre class="line-numbers language-none"><code class="language-none"># uncomment to force a specific HDMI mode (this will force VGA)#hdmi_group=1#hdmi_mode=1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>要把模式改一下啊</p><pre class="line-numbers language-none"><code class="language-none">hdmi_group=2hdmi_mode=58<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>这样感觉还是不方便，还要占掉我一个大屏。改回了SSH连接的方式</p><p>在boot目录新建SSH文件夹，然后新建一个wpa_supplicant.conf的文件配置WIFI</p><pre class="line-numbers language-json" data-language="json"><code class="language-json">country=CNctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdevupdate_config=<span class="token number">1</span>network=<span class="token punctuation">{</span>    ssid=<span class="token string">"你的WIFI名"</span>    psk=<span class="token string">"你的密码"</span>    key_mgmt=WPA-PSK    priority=<span class="token number">1</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后路由器找到ip，SSH连就行了，默认账号pi password：raspberry</p><p>发现这个树莓派真的鸡肋啊，扔着吃灰又可惜，不折腾硬件和IO不在乎功耗又不如有1080的工作站和20核CPU的服务器好（而且这俩还有公网IP和端口）</p><p>算了，每次折腾完了就后悔。 本逃兵不打算折腾硬件了，从医疗测控电路到stm32到树莓派的IO，都不太想碰了。时代变了，七八十年代的硅谷才是搞硬件的地方，二十一世纪是...反正不是硬件狗的世纪。251牢厂、加班狂魔联影、毁约的迈瑞，只想让人看了跑路。。。</p><p>服务器，启动。树莓派，关机。</p><h2 id="注">注</h2><section class="footnotes" role="doc-endnotes"><hr><ol><li id="fn1" role="doc-endnote"><p>http://downloads.raspberrypi.org/<a href="#fnref1" class="footnote-back" role="doc-backlink">↩︎</a></p></li></ol></section>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;span class=&quot;math display&quot;&gt;&lt;mjx-container class=&quot;MathJax&quot; jax=&quot;SVG&quot; display=&quot;true&quot; width=&quot;full&quot; style=&quot;min-width: 11.529ex&quot;&gt;&lt;svg style=&quot;vertical-align: -1.753ex; min-width: 11.529ex&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;100%&quot; height=&quot;4.638ex&quot; role=&quot;img&quot; focusable=&quot;false&quot;&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;matrix(1 0 0 -1 0 0) scale(0.0181) translate(0, -1275)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mtable&quot; transform=&quot;translate(2078, 0) translate(-2078, 0)&quot;&gt;&lt;g transform=&quot;translate(0 1275) matrix(1 0 0 -1 0 0) scale(55.25)&quot;&gt;&lt;svg data-table=&quot;true&quot; preserveAspectRatio=&quot;xMidYMid&quot; viewBox=&quot;470 -1275 1 2050&quot;&gt;&lt;g transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;mlabeledtr&quot; transform=&quot;translate(0, -67)&quot;&gt;&lt;g data-mml-node=&quot;mtd&quot;&gt;&lt;g data-mml-node=&quot;mfrac&quot;&gt;&lt;g data-mml-node=&quot;mn&quot; transform=&quot;translate(220, 676)&quot;&gt;&lt;path data-c=&quot;31&quot; d=&quot;M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z&quot;&gt;&lt;/path&gt;&lt;/g&gt;&lt;g data-mml-node=&quot;mn&quot; transform=&quot;translate(220, -686)&quot;&gt;&lt;path data-c=&quot;33&quot; d=&quot;M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z&quot;&gt;&lt;/path&gt;&lt;/g&gt;&lt;rect width=&quot;700&quot; height=&quot;60&quot; x=&quot;120&quot; y=&quot;220&quot;&gt;&lt;/rect&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;svg data-labels=&quot;true&quot; preserveAspectRatio=&quot;xMaxYMid&quot; viewBox=&quot;1278 -1275 1 2050&quot;&gt;&lt;g data-labels=&quot;true&quot; transform=&quot;matrix(1 0 0 -1 0 0)&quot;&gt;&lt;g data-mml-node=&quot;mtd&quot; id=&quot;mjx-eqn-1&quot; transform=&quot;translate(0, -67)&quot;&gt;&lt;g data-mml-node=&quot;mtext&quot;&gt;&lt;path data-c=&quot;28&quot; d=&quot;M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z&quot;&gt;&lt;/path&gt;&lt;path data-c=&quot;31&quot; d=&quot;M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z&quot; transform=&quot;translate(389, 0)&quot;&gt;&lt;/path&gt;&lt;path data-c=&quot;29&quot; d=&quot;M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z&quot; transform=&quot;translate(889, 0)&quot;&gt;&lt;/path&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/mjx-container&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;自从来到沙河102网吧，都是在工作站/服务器/台式机上折腾，树莓派一直仍在清水河宿舍吃灰。今天回了趟清水河，把树莓派拿回来，试试能不能用，打算做备用测试机了。</summary>
    
    
    
    <category term="荒废的老本行" scheme="https://zhangjk98.xyz/categories/%E8%8D%92%E5%BA%9F%E7%9A%84%E8%80%81%E6%9C%AC%E8%A1%8C/"/>
    
    
    <category term="树莓派3B+" scheme="https://zhangjk98.xyz/tags/%E6%A0%91%E8%8E%93%E6%B4%BE3B/"/>
    
  </entry>
  
</feed>
